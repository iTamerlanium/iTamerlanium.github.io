require( "source-map-support" ).install();
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * External dependencies.
	 */
	var boot = __webpack_require__(1),
	    http = __webpack_require__(826),
	    chalk = __webpack_require__(812);
	
	/**
	 * Internal dependencies
	 */
	var pkg = __webpack_require__(823),
	    config = __webpack_require__(7);
	
	var start = Date.now(),
	    port = process.env.PORT || 3000,
	    host = process.env.HOST || config('hostname'),
	    app = boot(),
	    server,
	    hotReloader;
	
	console.log(chalk.yellow('%s booted in %dms - http://%s:%s'), pkg.name, Date.now() - start, host, port);
	console.info(chalk.cyan('\nGetting bundles ready, hold on...'));
	
	server = http.createServer(app);
	
	// The desktop app runs Calypso in a fork.
	if (process.env.CALYPSO_IS_FORK) {
		// We need to run it with an explicit hostname to avoid firewall warnings.
		server.listen({ port: port, host: host }, function () {
			// Tell the parent process that Calypso has booted.
			process.send({ boot: 'ready' });
		});
	} else {
		// Let non-forks listen on any host.
		server.listen(port);
	}
	
	// Enable hot reloader in development
	if (config('env') === 'development') {
		hotReloader = __webpack_require__(827);
		hotReloader.listen(server, app.get('compiler'));
	}

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';
	
	/**
	 * Module dependencies
	 */
	var path = __webpack_require__(2),
	    build = __webpack_require__(3),
	    config = __webpack_require__(7),
	    express = __webpack_require__(39),
	    morgan = __webpack_require__(40),
	    pages = __webpack_require__(41);
	
	/**
	 * Returns the server HTTP request handler "app".
	 *
	 * @api public
	 */
	function setup() {
	
		var app = express(),
		    assets,
		    devdocs,
		    api,
		    bundler;
	
		// for nginx
		app.enable('trust proxy');
	
		// template engine
		app.set('view engine', 'jade');
	
		if ('development' === config('env')) {
			// only do `make build` upon every request in "development"
			app.use(build());
	
			bundler = __webpack_require__(809);
			bundler(app);
	
			// setup logger
			app.use(morgan('dev'));
		} else {
			assets = __webpack_require__(814);
			assets(app);
	
			// setup logger
			app.use(morgan('combined'));
		}
	
		// attach the static file server to serve the `public` dir
		app.use('/calypso', express.static(path.resolve(__dirname, '..', '..', 'public')));
	
		if (config.isEnabled('push-notifications')) {
			// service-worker needs to be served from root to avoid scope issues
			app.use('/service-worker.js', express.static(path.resolve(__dirname, '..', '..', 'client', 'lib', 'push-notifications', 'service-worker.js')));
		}
	
		// serve files when not in production so that the source maps work correctly
		if ('development' === config('env')) {
			app.use('/assets', express.static(path.resolve(__dirname, '..', '..', 'assets')));
			app.use('/client', express.static(path.resolve(__dirname, '..', '..', 'client')));
		}
	
		if (config.isEnabled('devdocs')) {
			devdocs = __webpack_require__(815);
			app.use(devdocs());
		}
	
		if (config.isEnabled('desktop')) {
			app.use('/desktop', express.static(path.resolve(__dirname, '..', '..', '..', 'public_desktop')));
		}
	
		api = __webpack_require__(822);
		app.use(api());
	
		// attach the pages module
		app.use(pages());
	
		return app;
	}
	
	/**
	 * Module exports
	 */
	module.exports = setup;
	/* WEBPACK VAR INJECTION */}.call(exports, "server/boot"))

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';
	
	/**
	 * Module dependencies
	 */
	var os = __webpack_require__(4),
	    path = __webpack_require__(2),
	    spawn = __webpack_require__(5).spawn,
	    debug = __webpack_require__(6)('build');
	
	/**
	 * Returns a "build middleware", which runs `make build-css` upon each HTTP
	 * request. Meant for use in "development" env.
	 *
	 * @return {Function} build middleware function
	 * @public
	 */
	function setup() {
	
		var build = null,
		    cores = os.cpus().length,
		    errors = '',
		    rootdir = path.resolve(__dirname, '..', '..');
	
		function spawnMake() {
			debug('spawning %o', 'make build-css --jobs ' + cores);
			build = spawn('make', ['build-css', '--jobs', cores], {
				cwd: rootdir,
				stdio: ['ignore', 'pipe', 'pipe']
			});
			errors = '';
			build.once('exit', onexit);
			build.stdout.setEncoding('utf8');
			build.stdout.on('data', onstdout);
			build.stderr.on('data', onstderr);
		}
	
		function onstdout(d) {
			debug('stdout %o', d.trim());
		}
	
		function onexit() {
			build.stderr.removeListener('data', onstderr);
			build.stdout.removeListener('data', onstdout);
			build = null;
		}
	
		function onstderr(stderr) {
			process.stderr.write(stderr.toString('utf8'));
			errors += stderr.toString('utf8');
		}
	
		return function (req, res, next) {
	
			if (!build) {
				spawnMake();
			}
	
			build.once('exit', function (code) {
				if (0 === code) {
					// `make` success
					next();
				} else {
					// `make` failed
					res.send('<pre>`make build-css` failed \n\n' + errors + '</pre>');
				}
			});
		};
	}
	
	/**
	 * Module exports
	 */
	module.exports = setup;
	/* WEBPACK VAR INJECTION */}.call(exports, "server/build"))

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("os");

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("child_process");

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = require("debug");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';
	
	var configPath = __webpack_require__(2).resolve(__dirname, '..', '..', 'config');
	var data = __webpack_require__(8)(configPath, {
		env: process.env.CALYPSO_ENV || process.env.NODE_ENV || 'development',
		includeSecrets: true,
		enabledFeatures: process.env.ENABLE_FEATURES,
		disabledFeatures: process.env.DISABLE_FEATURES
	});
	
	/**
	 * Return config `key`.
	 * Throws an error if the requested `key` is not set in the config file.
	 *
	 * @param {String} key The key of the config entry.
	 * @return {Mixed} Value of config or error if not found.
	 * @api public
	 */
	function config(key) {
		if (key in data) {
			return data[key];
		}
		throw new Error('config key `' + key + '` does not exist');
	}
	
	function isEnabled(feature) {
		return !!data.features[feature];
	}
	
	function anyEnabled() {
		var args = Array.prototype.slice.call(arguments);
		return args.some(function (feature) {
			return isEnabled(feature);
		});
	}
	
	module.exports = config;
	module.exports.isEnabled = isEnabled;
	module.exports.anyEnabled = anyEnabled;
	/* WEBPACK VAR INJECTION */}.call(exports, "server/config"))

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/***** WARNING: ES5 code only here. Used by un-transpiled script! *****/
	
	/**
	 * Module dependencies
	 */
	var fs = __webpack_require__(9),
	    path = __webpack_require__(2),
	    assign = __webpack_require__(10),
	    debug = __webpack_require__(6)('config');
	
	function getDataFromFile(file) {
		var fileData = {};
	
		if (fs.existsSync(file)) {
			debug('getting data from config file: %o', file);
			fileData = JSON.parse(fs.readFileSync(file, 'utf8'));
		} else {
			debug('skipping config file; not found: %o', file);
		}
	
		return fileData;
	}
	
	module.exports = function (configPath, defaultOpts) {
		var opts = assign({
			env: 'development',
			includeSecrets: false
		}, defaultOpts),
		    data = {},
		    configFiles = [path.resolve(configPath, '_shared.json'), path.resolve(configPath, opts.env + '.json'), path.resolve(configPath, opts.env + '.local.json')],
		    realSecretsPath,
		    emptySecretsPath,
		    secretsPath,
		    enabledFeatures = opts.enabledFeatures ? opts.enabledFeatures.split(',') : [],
		    disabledFeatures = opts.disabledFeatures ? opts.disabledFeatures.split(',') : [];
	
		if (opts.includeSecrets) {
			realSecretsPath = path.resolve(configPath, 'secrets.json');
			emptySecretsPath = path.resolve(configPath, 'empty-secrets.json');
			secretsPath = fs.existsSync(realSecretsPath) ? realSecretsPath : emptySecretsPath;
	
			configFiles.push(secretsPath);
		}
	
		configFiles.forEach(function (file) {
			assign(data, getDataFromFile(file));
		});
	
		if (data.hasOwnProperty('features')) {
			enabledFeatures.forEach(function (feature) {
				data.features[feature] = true;
				debug('overriding feature %s to true', feature);
			});
			disabledFeatures.forEach(function (feature) {
				data.features[feature] = false;
				debug('overriding feature %s to false', feature);
			});
		}
	
		return data;
	};

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(11),
	    createAssigner = __webpack_require__(15),
	    keys = __webpack_require__(28);
	
	/**
	 * Assigns own enumerable properties of source objects to the destination
	 * object. Source objects are applied from left to right. Subsequent sources
	 * overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * function Foo() {
	 *   this.c = 3;
	 * }
	 *
	 * function Bar() {
	 *   this.e = 5;
	 * }
	 *
	 * Foo.prototype.d = 4;
	 * Bar.prototype.f = 6;
	 *
	 * _.assign({ 'a': 1 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3, 'e': 5 }
	 */
	var assign = createAssigner(function(object, source) {
	  copyObject(source, keys(source), object);
	});
	
	module.exports = assign;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var copyObjectWith = __webpack_require__(12);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property names to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object) {
	  return copyObjectWith(source, props, object);
	}
	
	module.exports = copyObject;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(13);
	
	/**
	 * This function is like `copyObject` except that it accepts a function to
	 * customize copied values.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property names to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObjectWith(source, props, object, customizer) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : source[key];
	
	    assignValue(object, key, newValue);
	  }
	  return object;
	}
	
	module.exports = copyObjectWith;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(14);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if ((!eq(objValue, value) ||
	        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	module.exports = assignValue;


/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var other = { 'user': 'fred' };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var isIterateeCall = __webpack_require__(16),
	    rest = __webpack_require__(24);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return rest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = typeof customizer == 'function'
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(14),
	    isArrayLike = __webpack_require__(17),
	    isIndex = __webpack_require__(23),
	    isObject = __webpack_require__(21);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	      ? (isArrayLike(object) && isIndex(index, object.length))
	      : (type == 'string' && index in object)) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(18),
	    isFunction = __webpack_require__(20),
	    isLength = __webpack_require__(22);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null &&
	    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));
	}
	
	module.exports = isArrayLike;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(19);
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	 * that affects Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	module.exports = getLength;


/***/ },
/* 19 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(21);
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array constructors, and
	  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 22 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 23 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return value > -1 && value % 1 == 0 && value < length;
	}
	
	module.exports = isIndex;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(25),
	    toInteger = __webpack_require__(26);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that invokes `func` with the `this` binding of the
	 * created function and arguments from `start` and beyond provided as an array.
	 *
	 * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var say = _.rest(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
	 *
	 * say('hello', 'fred', 'barney', 'pebbles');
	 * // => 'hello fred, barney, & pebbles'
	 */
	function rest(func, start) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    switch (start) {
	      case 0: return func.call(this, array);
	      case 1: return func.call(this, args[0], array);
	      case 2: return func.call(this, args[0], args[1], array);
	    }
	    var otherArgs = Array(start + 1);
	    index = -1;
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = rest;


/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {...*} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  var length = args.length;
	  switch (length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(27);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3');
	 * // => 3
	 */
	function toInteger(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  var remainder = value % 1;
	  return value === value ? (remainder ? value - remainder : value) : 0;
	}
	
	module.exports = toInteger;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(20),
	    isObject = __webpack_require__(21);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3);
	 * // => 3
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3');
	 * // => 3
	 */
	function toNumber(value) {
	  if (isObject(value)) {
	    var other = isFunction(value.valueOf) ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(29),
	    baseKeys = __webpack_require__(30),
	    indexKeys = __webpack_require__(31),
	    isArrayLike = __webpack_require__(17),
	    isIndex = __webpack_require__(23),
	    isPrototype = __webpack_require__(38);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keys;


/***/ },
/* 29 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var getPrototypeOf = Object.getPrototypeOf;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return hasOwnProperty.call(object, key) ||
	    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);
	}
	
	module.exports = baseHas;


/***/ },
/* 30 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = Object.keys;
	
	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  return nativeKeys(Object(object));
	}
	
	module.exports = baseKeys;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(32),
	    isArguments = __webpack_require__(33),
	    isArray = __webpack_require__(36),
	    isLength = __webpack_require__(22),
	    isString = __webpack_require__(37);
	
	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	module.exports = indexKeys;


/***/ },
/* 32 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(34);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	module.exports = isArguments;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(17),
	    isObjectLike = __webpack_require__(35);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 36 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @type {Function}
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(36),
	    isObjectLike = __webpack_require__(35);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	module.exports = isString;


/***/ },
/* 38 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 39 */
/***/ function(module, exports) {

	module.exports = require("express");

/***/ },
/* 40 */
/***/ function(module, exports) {

	module.exports = require("morgan");

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var express = __webpack_require__(39),
	    fs = __webpack_require__(9),
	    crypto = __webpack_require__(79),
	    qs = __webpack_require__(80),
	    execSync = __webpack_require__(5).execSync,
	    cookieParser = __webpack_require__(81),
	    debug = __webpack_require__(6)('calypso:pages');
	
	var config = __webpack_require__(7),
	    sanitize = __webpack_require__(82),
	    utils = __webpack_require__(85),
	    sectionsModule = __webpack_require__(86),
	    serverRouter = __webpack_require__(509).serverRouter,
	    serverRender = __webpack_require__(510).serverRender;
	
	var HASH_LENGTH = 10,
	    URL_BASE_PATH = '/calypso',
	    SERVER_BASE_PATH = '/public',
	    CALYPSO_ENV = process.env.CALYPSO_ENV || process.env.NODE_ENV || 'development';
	
	var staticFiles = [{ path: 'style.css' }, { path: 'editor.css' }, { path: 'tinymce/skins/wordpress/wp-content.css' }, { path: 'style-debug.css' }, { path: 'style-rtl.css' }];
	
	var sections = sectionsModule.get();
	
	/**
	 * Generates a hash of a files contents to be used as a version parameter on asset requests.
	 * @param {String} path Path to file we want to hash
	 * @returns {String} A shortened md5 hash of the contents of the file file or a timestamp in the case of failure.
	 **/
	function hashFile(path) {
		var data,
		    hash,
		    md5 = crypto.createHash('md5');
	
		try {
			data = fs.readFileSync(path);
			md5.update(data);
			hash = md5.digest('hex');
			hash = hash.slice(0, HASH_LENGTH);
		} catch (e) {
			hash = new Date().getTime().toString();
		}
	
		return hash;
	}
	
	/**
	 * Generate an object that maps asset names name to a server-relative urls.
	 * Assets in request and static files are included.
	 * @param {Object} request A request to check for assets
	 * @returns {Object} Map of asset names to urls
	 **/
	function generateStaticUrls(request) {
		var urls = {},
		    assets;
	
		function getUrl(filename, hash) {
			return URL_BASE_PATH + '/' + filename + '?' + qs.stringify({
				v: hash
			});
		}
	
		staticFiles.forEach(function (file) {
			if (!file.hash) {
				file.hash = hashFile(process.cwd() + SERVER_BASE_PATH + '/' + file.path);
			}
			urls[file.path] = getUrl(file.path, file.hash);
		});
	
		assets = request.app.get('assets');
	
		assets.forEach(function (asset) {
			var name = asset.name;
			if (!name) {
				// this is for auto-generated chunks that don't have names, like the commons chunk
				name = asset.url.replace(/\/calypso\/(\w+)\..*/, '_$1');
			}
			urls[name] = asset.url;
			if (config('env') !== 'development') {
				urls[name + '-min'] = asset.url.replace('.js', '.min.js');
			}
		});
	
		return urls;
	}
	
	function getCurrentBranchName() {
		try {
			return execSync('git rev-parse --abbrev-ref HEAD').toString().replace(/\s/gm, '');
		} catch (err) {
			return undefined;
		}
	}
	
	function getCurrentCommitShortChecksum() {
		try {
			return execSync('git rev-parse --short HEAD').toString().replace(/\s/gm, '');
		} catch (err) {
			return undefined;
		}
	}
	
	function getDefaultContext(request) {
		var context = (0, _assign2.default)({}, request.context, {
			compileDebug: config('env') === 'development' ? true : false,
			urls: generateStaticUrls(request),
			user: false,
			env: CALYPSO_ENV,
			sanitize: sanitize,
			isRTL: config('rtl'),
			isDebug: request.query.debug !== undefined ? true : false,
			badge: false,
			lang: config('i18n_default_locale_slug'),
			jsFile: 'build',
			faviconURL: '//s1.wp.com/i/favicon.ico',
			isFluidWidth: !!config.isEnabled('fluid-width'),
			abTestHelper: !!config.isEnabled('dev/test-helper'),
			devDocsURL: '/devdocs',
			catchJsErrors: '/calypso/catch-js-errors-' + 'v2' + '.min.js',
			isPushEnabled: !!config.isEnabled('push-notifications')
		});
	
		context.app = {
			// use ipv4 address when is ipv4 mapped address
			clientIp: request.ip ? request.ip.replace('::ffff:', '') : request.ip,
			isDebug: context.env === 'development' || context.isDebug,
			tinymceWpSkin: context.urls['tinymce/skins/wordpress/wp-content.css'],
			tinymceEditorCss: context.urls['editor.css']
		};
	
		if (CALYPSO_ENV === 'wpcalypso') {
			context.badge = CALYPSO_ENV;
			context.devDocs = true;
			context.feedbackURL = 'https://github.com/Automattic/wp-calypso/issues/';
			context.faviconURL = '/calypso/images/favicons/favicon-wpcalypso.ico';
		}
	
		if (CALYPSO_ENV === 'horizon') {
			context.badge = 'feedback';
			context.feedbackURL = 'https://horizonfeedback.wordpress.com/';
			context.faviconURL = '/calypso/images/favicons/favicon-horizon.ico';
		}
	
		if (CALYPSO_ENV === 'stage') {
			context.badge = 'staging';
			context.feedbackURL = 'https://github.com/Automattic/wp-calypso/issues/';
			context.faviconURL = '/calypso/images/favicons/favicon-staging.ico';
		}
	
		if (CALYPSO_ENV === 'development') {
			context.badge = 'dev';
			context.devDocs = true;
			context.feedbackURL = 'https://github.com/Automattic/wp-calypso/issues/';
			context.faviconURL = '/calypso/images/favicons/favicon-development.ico';
			context.branchName = getCurrentBranchName();
			context.commitChecksum = getCurrentCommitShortChecksum();
		}
	
		return context;
	}
	
	function setUpLoggedOutRoute(req, res, next) {
		req.context = getDefaultContext(req);
		res.set({
			'X-Frame-Options': 'SAMEORIGIN'
		});
	
		next();
	}
	
	function setUpLoggedInRoute(req, res, next) {
		var redirectUrl, protocol, start, context;
	
		res.set({
			'X-Frame-Options': 'SAMEORIGIN'
		});
	
		context = getDefaultContext(req);
	
		if (config('wpcom_user_bootstrap')) {
			var user = __webpack_require__(805);
	
			protocol = req.get('X-Forwarded-Proto') === 'https' ? 'https' : 'http';
	
			redirectUrl = config('login_url') + '?' + qs.stringify({
				redirect_to: protocol + '://' + config('hostname') + req.originalUrl
			});
	
			// if we don't have a wordpress cookie, we know the user needs to
			// authenticate
			if (!req.cookies.wordpress_logged_in) {
				debug('User not logged in. Redirecting to %s', redirectUrl);
				res.redirect(redirectUrl);
				return;
			}
			start = new Date().getTime();
	
			debug('Issuing API call to fetch user object');
			user(req.get('Cookie'), function (error, data) {
				var end, searchParam, errorMessage;
	
				if (error) {
					if (error.error === 'authorization_required') {
						debug('User public API authorization required. Redirecting to %s', redirectUrl);
						res.redirect(redirectUrl);
					} else {
						if (error.error) {
							errorMessage = error.error + ' ' + error.message;
						} else {
							errorMessage = error.message;
						}
	
						console.log('API Error: ' + errorMessage);
	
						res.status(500).render('500.jade', context);
					}
	
					return;
				}
	
				end = new Date().getTime() - start;
	
				debug('Rendering with bootstrapped user object. Fetched in %d ms', end);
				context.user = data;
				context.isRTL = data.isRTL ? true : false;
	
				if (data.localeSlug) {
					context.lang = data.localeSlug;
				}
	
				if (req.path === '/' && req.query) {
					searchParam = req.query.s || req.query.q;
					if (searchParam) {
						res.redirect('https://' + context.lang + '.search.wordpress.com/?q=' + encodeURIComponent(searchParam));
						return;
					}
	
					if (req.query.newuseremail) {
						debug('Detected legacy email verification action. Redirecting...');
						res.redirect('https://wordpress.com/verify-email/?' + qs.stringify(req.query));
						return;
					}
	
					if (req.query.action === 'wpcom-invite-users') {
						debug('Detected legacy invite acceptance action. Redirecting...');
						res.redirect('https://wordpress.com/accept-invite/?' + qs.stringify(req.query));
						return;
					}
				}
	
				req.context = context;
				next();
			});
		} else {
			req.context = context;
			next();
		}
	}
	
	function setUpRoute(req, res, next) {
		if (req.cookies.wordpress_logged_in) {
			// the user is probably logged in
			setUpLoggedInRoute(req, res, next);
		} else {
			setUpLoggedOutRoute(req, res, next);
		}
	}
	
	function render404(request, response) {
		response.status(404).render('404.jade', {
			urls: generateStaticUrls(request)
		});
	}
	
	module.exports = function () {
		var app = express();
	
		app.set('views', __dirname);
	
		app.use(cookieParser());
	
		// redirect homepage if the Reader is disabled
		app.get('/', function (request, response, next) {
			if (!config.isEnabled('reader')) {
				response.redirect('/stats');
			} else {
				next();
			}
		});
	
		// redirects to handle old newdash formats
		app.use('/sites/:site/:section', function (req, res, next) {
			var redirectUrl;
			sections = ['posts', 'pages', 'sharing', 'upgrade', 'checkout', 'change-theme'];
	
			if (-1 === sections.indexOf(req.params.section)) {
				next();
				return;
			}
			if ('change-theme' === req.params.section) {
				redirectUrl = req.originalUrl.replace(/^\/sites\/[0-9a-zA-Z\-\.]+\/change\-theme/, '/themes');
			} else {
				redirectUrl = req.originalUrl.replace(/^\/sites\/[0-9a-zA-Z\-\.]+\/\w+/, '/' + req.params.section + '/' + req.params.site);
			}
			res.redirect(redirectUrl);
		});
	
		if (config('env') !== 'development') {
			app.get('/discover', function (req, res, next) {
				if (!req.cookies.wordpress_logged_in) {
					res.redirect(config('discover_logged_out_redirect_url'));
				} else {
					next();
				}
			});
		}
	
		app.get('/theme', function (req, res) {
			return res.redirect('/design');
		});
	
		sections.forEach(function (section) {
			section.paths.forEach(function (path) {
				var pathRegex = utils.pathToRegExp(path);
	
				app.get(pathRegex, function (req, res, next) {
					if (config.isEnabled('code-splitting')) {
						req.context = (0, _assign2.default)({}, req.context, { chunk: section.name });
					}
					next();
				});
	
				if (!section.isomorphic) {
					app.get(pathRegex, section.enableLoggedOut ? setUpRoute : setUpLoggedInRoute, serverRender);
				}
			});
	
			if (section.isomorphic) {
				sectionsModule.require(section.module)(serverRouter(app, setUpRoute, section));
			}
		});
	
		// catchall to render 404 for all routes not whitelisted in client/sections
		app.get('*', render404);
	
		return app;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, "server/pages"))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(43), __esModule: true };

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(44);
	module.exports = __webpack_require__(47).Object.assign;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(45);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(60)});

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(46)
	  , core      = __webpack_require__(47)
	  , ctx       = __webpack_require__(48)
	  , hide      = __webpack_require__(50)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 46 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 47 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(49);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 49 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(51)
	  , createDesc = __webpack_require__(59);
	module.exports = __webpack_require__(55) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(52)
	  , IE8_DOM_DEFINE = __webpack_require__(54)
	  , toPrimitive    = __webpack_require__(58)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(55) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(53);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 53 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(55) && !__webpack_require__(56)(function(){
	  return Object.defineProperty(__webpack_require__(57)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(56)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 56 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(53)
	  , document = __webpack_require__(46).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(53);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 59 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(61)
	  , gOPS     = __webpack_require__(76)
	  , pIE      = __webpack_require__(77)
	  , toObject = __webpack_require__(78)
	  , IObject  = __webpack_require__(65)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(56)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(62)
	  , enumBugKeys = __webpack_require__(75);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(63)
	  , toIObject    = __webpack_require__(64)
	  , arrayIndexOf = __webpack_require__(68)(false)
	  , IE_PROTO     = __webpack_require__(72)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 63 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(65)
	  , defined = __webpack_require__(67);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(66);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 66 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 67 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(64)
	  , toLength  = __webpack_require__(69)
	  , toIndex   = __webpack_require__(71);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(70)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 70 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(70)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(73)('keys')
	  , uid    = __webpack_require__(74);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(46)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 74 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 75 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 76 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 77 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(67);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 79 */
/***/ function(module, exports) {

	module.exports = require("crypto");

/***/ },
/* 80 */
/***/ function(module, exports) {

	module.exports = require("qs");

/***/ },
/* 81 */
/***/ function(module, exports) {

	module.exports = require("cookie-parser");

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Encode single characters with backslashes.
	 * @param {string} charStr single-character string.
	 * @return {string} backslash escaped character.
	 *
	 * @copyright (c) 2013, GoInstant Inc., a salesforce.com company.
	 * @license See CREDITS.md.
	 * @see https://github.com/goinstant/secure-filters/blob/master/lib/secure-filters.js
	 *
	 * @private
	 **/
	function jsSlashEncoder(charStr) {
		var code = charStr.charCodeAt(0),
		    hex = code.toString(16).toUpperCase();
	
		if (code < 0x80) {
			// ASCII
			if (hex.length === 1) {
				return '\\x0' + hex;
			}
	
			return '\\x' + hex;
		}
	
		// Unicode
		switch (hex.length) {
			case 2:
				return '\\u00' + hex;
			case 3:
				return '\\u0' + hex;
			case 4:
				return '\\u' + hex;
			default:
				// charCodeAt() JS shouldn't return code > 0xFFFF, and only four hex
				// digits can be encoded via `\u`-encoding, so return REPLACEMENT
				// CHARACTER U+FFFD.
				return '\\uFFFD';
		}
	}
	
	/**
	 * Create JSON serialized string suitable for inclusion in HTML
	 * @param {mixed} value The variable to be serialized
	 * @return {string} JSON serialized string
	 **/
	exports.jsonStringifyForHtml = function (value) {
		var jsonInHtmlBlacklist = /[^\x22,\-\.0-9:A-Z\[\x5C\]_a-z{}]/g;
		var cdataClose = /\]\](?:>|\\x3E|\\u003E)/gi;
		return (0, _stringify2.default)(value).replace(jsonInHtmlBlacklist, jsSlashEncoder)
		// prevent breaking out of CDATA context.  Escaping < below is sufficient
		// to prevent opening a CDATA context.
		.replace(cdataClose, '\\x5D\\x5D\\x3E');
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(84), __esModule: true };

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var core  = __webpack_require__(47)
	  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
	module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
	  return $JSON.stringify.apply($JSON, arguments);
	};

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var path = __webpack_require__(2);
	
	function getAssets(stats) {
		var chunks = stats.chunks;
	
		return chunks.map(function (chunk) {
			var filename = chunk.files[0];
			return {
				name: chunk.names[0],
				hash: chunk.hash,
				file: filename,
				url: stats.publicPath + filename
			};
		});
	}
	
	function pathToRegExp(path) {
		return new RegExp('^' + path + '(/.*)?$');
	}
	
	module.exports = {
		getAssets: getAssets,
		pathToRegExp: pathToRegExp
	};

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
		get: function() {
			return [{"name":"sites","paths":["/sites"],"module":"my-sites","group":"sites","secondary":true},{"name":"customize","paths":["/customize"],"module":"my-sites/customize","group":"sites","secondary":true},{"name":"me","paths":["/me"],"module":"me","group":"me","secondary":true},{"name":"account","paths":["/me/account"],"module":"me/account","group":"me","secondary":true},{"name":"security","paths":["/me/security"],"module":"me/security","group":"me","secondary":true},{"name":"purchases","paths":["/purchases"],"module":"me/purchases","group":"me","secondary":true},{"name":"billing","paths":["/me/billing"],"module":"me/billing-history","group":"me","secondary":true},{"name":"notification-settings","paths":["/me/notifications"],"module":"me/notification-settings","group":"me","secondary":true},{"name":"media","paths":["/media"],"module":"my-sites/media","group":"sites","secondary":true},{"name":"menus","paths":["/menus"],"module":"my-sites/menus","secondary":true,"group":"sites"},{"name":"people","paths":["/people"],"module":"my-sites/people","secondary":true,"group":"sites"},{"name":"plugins","paths":["/plugins"],"module":"my-sites/plugins","secondary":true,"group":"sites"},{"name":"posts-pages","paths":["/pages"],"module":"my-sites/pages","secondary":true,"group":"sites"},{"name":"posts-pages","paths":["/posts"],"module":"my-sites/posts","secondary":true,"group":"sites"},{"name":"settings","paths":["/settings"],"module":"my-sites/site-settings","secondary":true,"group":"sites"},{"name":"sharing","paths":["/sharing"],"module":"my-sites/sharing","secondary":true,"group":"sites"},{"name":"signup","paths":["/start","/jetpack"],"module":"signup","secondary":false,"enableLoggedOut":true,"isomorphic":true},{"name":"stats","paths":["/stats"],"module":"my-sites/stats","secondary":true,"group":"sites"},{"name":"theme","paths":["/theme"],"module":"my-sites/theme","enableLoggedOut":true,"secondary":false,"group":"sites","isomorphic":true,"title":"Themes"},{"name":"themes","paths":["/design"],"module":"my-sites/themes","enableLoggedOut":true,"secondary":true,"group":"sites","isomorphic":true,"title":"Themes"},{"name":"upgrades","paths":["/domains","/checkout"],"module":"my-sites/upgrades","secondary":true,"group":"sites"},{"name":"plans","paths":["/plans"],"module":"my-sites/plans","secondary":true,"group":"sites"},{"name":"post-editor","paths":["/post","/page","/edit"],"module":"post-editor","group":"editor","secondary":true},{"name":"ads","paths":["/ads"],"module":"my-sites/ads","secondary":true,"group":"sites"},{"name":"posts-pages","paths":["/drafts"],"module":"my-sites/drafts","secondary":true,"group":"sites"},{"name":"reader","paths":["/","/read"],"module":"reader","secondary":true,"group":"reader"},{"name":"reader-post-recomendations","paths":["/recommendations/posts"],"module":"reader/recommendations","secondary":true,"group":"reader"},{"name":"reader-recomendations","paths":["/recommendations"],"module":"reader/recommendations","secondary":true,"group":"reader"},{"name":"discover","paths":["/discover"],"module":"reader/discover","secondary":true,"group":"reader"},{"name":"reader-following","paths":["/following"],"module":"reader/following","secondary":true,"group":"reader"},{"name":"reader-tags","paths":["/tags","/tag"],"module":"reader/tag-stream","secondary":true,"group":"reader"},{"name":"reader-activities","paths":["/activities"],"module":"reader/liked-stream","secondary":true,"group":"reader"},{"name":"reader-search","paths":["/read/search"],"module":"reader/search","secondary":true,"group":"reader"},{"name":"reader-list","paths":["/read/list"],"module":"reader/list","secondary":true,"group":"reader"},{"name":"reader-start","paths":["/read/start"],"module":"reader/start","secondary":true,"group":"reader"},{"name":"help","paths":["/help"],"module":"me/help","secondary":true,"group":"me"},{"name":"accept-invite","paths":["/accept-invite"],"module":"my-sites/invites","enableLoggedOut":true},{"name":"mailing-lists","paths":["/mailing-lists"],"module":"mailing-lists","enableLoggedOut":true},{"name":"posts-custom","paths":["/types"],"module":"my-sites/types","secondary":true},{"name":"devdocs","paths":["/devdocs"],"module":"devdocs","secondary":true,"enableLoggedOut":true},{"name":"devdocs","paths":["/devdocs/start"],"module":"devdocs","secondary":false,"enableLoggedOut":true}];
		},
	 require: function( module ) {
			switch ( module ) {
	case "signup": return __webpack_require__( 87 );
	case "my-sites/theme": return __webpack_require__( 168 );
	case "my-sites/themes": return __webpack_require__( 508 );
	
				default:
					return null;
	   }
	 }
	};

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = function (router) {
		router('/start/:flowName?/:stepName?/:stepSectionName?/:lang?', setUpLocale);
		router('/jetpack/*'); // Required so this route doesn't 404
	};
	
	var _i18nUtils = __webpack_require__(88);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Set up the locale in case it has ended up in the flow param
	/**
	 * Internal dependencies
	 */
	function setUpLocale(context, next) {
		var _context$params = context.params;
		var flowName = _context$params.flowName;
		var stepName = _context$params.stepName;
		var stepSectionName = _context$params.stepSectionName;
		var lang = _context$params.lang;
	
	
		if (!lang && stepSectionName && (0, _i18nUtils.getLanguage)(stepSectionName)) {
			lang = stepSectionName;
			stepSectionName = undefined;
		} else if (!lang && stepName && (0, _i18nUtils.getLanguage)(stepName)) {
			lang = stepName;
			flowName = undefined;
		} else if (!lang && flowName && (0, _i18nUtils.getLanguage)(flowName)) {
			lang = flowName;
			flowName = undefined;
		}
	
		context.params = (0, _assign2.default)({}, context.params, { flowName: flowName, stepName: stepName, stepSectionName: stepSectionName, lang: lang });
	
		var language = (0, _i18nUtils.getLanguage)(lang);
		if (language) {
			context.lang = lang;
			if (language.rtl) {
				context.isRTL = true;
			}
		}
	
		next();
	}
	module.exports = exports['default'];

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Internal dependencies
	 */
	var config = __webpack_require__(7);
	
	module.exports = __webpack_require__(89);
	
	module.exports.getLocaleSlug = function () {
	  return config('i18n_default_locale_slug');
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _find = __webpack_require__(90);
	
	var _find2 = _interopRequireDefault(_find);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	
	
	var localeRegex = /^[A-Z]{2,3}$/i;
	
	/**
	 * Internal dependencies
	 */
	
	var localeWithRegionRegex = /^[A-Z]{2,3}-[A-Z]{2,3}$/i;
	
	function getPathParts(path) {
		// Remove trailing slash then split. If there is a trailing slash,
		// then the end of the array could contain an empty string.
		return path.replace(/\/$/, '').split('/');
	}
	
	var i18nUtils = {
		getLanguage: function getLanguage(langSlug) {
			var language = void 0;
			if (localeRegex.test(langSlug) || localeWithRegionRegex.test(langSlug)) {
				language = (0, _find2.default)((0, _config2.default)('languages'), { langSlug: langSlug }) || (0, _find2.default)((0, _config2.default)('languages'), { langSlug: langSlug.substring(0, 2) });
			}
			return language;
		},
	
		/**
	  * Assuming that locale is adding at the end of path, retrieves the locale if present.
	  * @param {string} path - original path
	  * @return {string|undefined} The locale slug if present or undefined
	  */
		getLocaleFromPath: function getLocaleFromPath(path) {
			var parts = getPathParts(path);
			var locale = parts.pop();
	
			return 'undefined' === typeof i18nUtils.getLanguage(locale) ? undefined : locale;
		},
	
		/**
	  * Removes the trailing locale slug from the path, if it is present.
	  * '/start/en' => '/start', '/start' => '/start', '/start/flow/fr' => '/start/flow', '/start/flow' => '/start/flow'
	  * @param {string} path - original path
	  * @returns {string} original path minus locale slug
	  */
		removeLocaleFromPath: function removeLocaleFromPath(path) {
			var parts = getPathParts(path);
			var locale = parts.pop();
	
			if ('undefined' === typeof i18nUtils.getLanguage(locale)) {
				parts.push(locale);
			}
	
			return parts.join('/');
		}
	};
	exports.default = i18nUtils;
	module.exports = exports['default'];

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(91),
	    baseFind = __webpack_require__(96),
	    baseFindIndex = __webpack_require__(97),
	    baseIteratee = __webpack_require__(98),
	    isArray = __webpack_require__(36);
	
	/**
	 * Iterates over elements of `collection`, returning the first element
	 * `predicate` returns truthy for. The predicate is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to search.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @returns {*} Returns the matched element, else `undefined`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'age': 36, 'active': true },
	 *   { 'user': 'fred',    'age': 40, 'active': false },
	 *   { 'user': 'pebbles', 'age': 1,  'active': true }
	 * ];
	 *
	 * _.find(users, function(o) { return o.age < 40; });
	 * // => object for 'barney'
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.find(users, { 'age': 1, 'active': true });
	 * // => object for 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.find(users, ['active', false]);
	 * // => object for 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.find(users, 'active');
	 * // => object for 'barney'
	 */
	function find(collection, predicate) {
	  predicate = baseIteratee(predicate, 3);
	  if (isArray(collection)) {
	    var index = baseFindIndex(collection, predicate);
	    return index > -1 ? collection[index] : undefined;
	  }
	  return baseFind(collection, predicate, baseEach);
	}
	
	module.exports = find;


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(92),
	    createBaseEach = __webpack_require__(95);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(93),
	    keys = __webpack_require__(28);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(94);
	
	/**
	 * The base implementation of `baseForIn` and `baseForOwn` which iterates
	 * over `object` properties returned by `keysFunc` invoking `iteratee` for
	 * each property. Iteratee functions may exit iteration early by explicitly
	 * returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(17);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 96 */
/***/ function(module, exports) {

	/**
	 * The base implementation of methods like `_.find` and `_.findKey`, without
	 * support for iteratee shorthands, which iterates over `collection` using
	 * `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to search.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.
	 * @returns {*} Returns the found element or its key, else `undefined`.
	 */
	function baseFind(collection, predicate, eachFunc, retKey) {
	  var result;
	  eachFunc(collection, function(value, key, collection) {
	    if (predicate(value, key, collection)) {
	      result = retKey ? key : value;
	      return false;
	    }
	  });
	  return result;
	}
	
	module.exports = baseFind;


/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromRight) {
	  var length = array.length,
	      index = fromRight ? length : -1;
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(99),
	    baseMatchesProperty = __webpack_require__(151),
	    identity = __webpack_require__(165),
	    isArray = __webpack_require__(36),
	    property = __webpack_require__(166);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  var type = typeof value;
	  if (type == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (type == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(100),
	    getMatchData = __webpack_require__(146);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    var key = matchData[0][0],
	        value = matchData[0][1];
	
	    return function(object) {
	      if (object == null) {
	        return false;
	      }
	      return object[key] === value &&
	        (value !== undefined || (key in Object(object)));
	    };
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(101),
	    baseIsEqual = __webpack_require__(132);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack,
	          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;
	
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var stackClear = __webpack_require__(102),
	    stackDelete = __webpack_require__(103),
	    stackGet = __webpack_require__(106),
	    stackHas = __webpack_require__(108),
	    stackSet = __webpack_require__(110);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function Stack(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = values[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add functions to the `Stack` cache.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 102 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = { 'array': [], 'map': null };
	}
	
	module.exports = stackClear;


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var assocDelete = __webpack_require__(104);
	
	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      array = data.array;
	
	  return array ? assocDelete(array, key) : data.map['delete'](key);
	}
	
	module.exports = stackDelete;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(105);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the associative array.
	 *
	 * @private
	 * @param {Array} array The array to query.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function assocDelete(array, key) {
	  var index = assocIndexOf(array, key);
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = array.length - 1;
	  if (index == lastIndex) {
	    array.pop();
	  } else {
	    splice.call(array, index, 1);
	  }
	  return true;
	}
	
	module.exports = assocDelete;


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(14);
	
	/**
	 * Gets the index at which the first occurrence of `key` is found in `array`
	 * of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	var assocGet = __webpack_require__(107);
	
	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  var data = this.__data__,
	      array = data.array;
	
	  return array ? assocGet(array, key) : data.map.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(105);
	
	/**
	 * Gets the associative array value for `key`.
	 *
	 * @private
	 * @param {Array} array The array to query.
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function assocGet(array, key) {
	  var index = assocIndexOf(array, key);
	  return index < 0 ? undefined : array[index][1];
	}
	
	module.exports = assocGet;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	var assocHas = __webpack_require__(109);
	
	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  var data = this.__data__,
	      array = data.array;
	
	  return array ? assocHas(array, key) : data.map.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(105);
	
	/**
	 * Checks if an associative array value for `key` exists.
	 *
	 * @private
	 * @param {Array} array The array to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function assocHas(array, key) {
	  return assocIndexOf(array, key) > -1;
	}
	
	module.exports = assocHas;


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(111),
	    assocSet = __webpack_require__(130);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache object.
	 */
	function stackSet(key, value) {
	  var data = this.__data__,
	      array = data.array;
	
	  if (array) {
	    if (array.length < (LARGE_ARRAY_SIZE - 1)) {
	      assocSet(array, key, value);
	    } else {
	      data.array = null;
	      data.map = new MapCache(array);
	    }
	  }
	  var map = data.map;
	  if (map) {
	    map.set(key, value);
	  }
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	var mapClear = __webpack_require__(112),
	    mapDelete = __webpack_require__(122),
	    mapGet = __webpack_require__(126),
	    mapHas = __webpack_require__(128),
	    mapSet = __webpack_require__(129);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function MapCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = values[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add functions to the `MapCache`.
	MapCache.prototype.clear = mapClear;
	MapCache.prototype['delete'] = mapDelete;
	MapCache.prototype.get = mapGet;
	MapCache.prototype.has = mapHas;
	MapCache.prototype.set = mapSet;
	
	module.exports = MapCache;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(113),
	    Map = __webpack_require__(118);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': Map ? new Map : [],
	    'string': new Hash
	  };
	}
	
	module.exports = mapClear;


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(114);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Creates an hash object.
	 *
	 * @private
	 * @constructor
	 * @returns {Object} Returns the new hash object.
	 */
	function Hash() {}
	
	// Avoid inheriting from `Object.prototype` when possible.
	Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;
	
	module.exports = Hash;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(115);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	var isNative = __webpack_require__(116);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(20),
	    isHostObject = __webpack_require__(117),
	    isObjectLike = __webpack_require__(35);
	
	/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(funcToString.call(value));
	  }
	  return isObjectLike(value) &&
	    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
	}
	
	module.exports = isNative;


/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(115),
	    root = __webpack_require__(119);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var checkGlobal = __webpack_require__(121);
	
	/** Used to determine if values are of the language type `Object`. */
	var objectTypes = {
	  'function': true,
	  'object': true
	};
	
	/** Detect free variable `exports`. */
	var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	  ? exports
	  : undefined;
	
	/** Detect free variable `module`. */
	var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	  ? module
	  : undefined;
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
	
	/** Detect free variable `self`. */
	var freeSelf = checkGlobal(objectTypes[typeof self] && self);
	
	/** Detect free variable `window`. */
	var freeWindow = checkGlobal(objectTypes[typeof window] && window);
	
	/** Detect `this` as the global object. */
	var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
	
	/**
	 * Used as a reference to the global object.
	 *
	 * The `this` value is used if it's the global object to avoid Greasemonkey's
	 * restricted `window` object, otherwise the `window` object is used.
	 */
	var root = freeGlobal ||
	  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
	    freeSelf || thisGlobal || Function('return this')();
	
	module.exports = root;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(120)(module)))

/***/ },
/* 120 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a global object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	 */
	function checkGlobal(value) {
	  return (value && value.Object === Object) ? value : null;
	}
	
	module.exports = checkGlobal;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var Map = __webpack_require__(118),
	    assocDelete = __webpack_require__(104),
	    hashDelete = __webpack_require__(123),
	    isKeyable = __webpack_require__(125);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapDelete(key) {
	  var data = this.__data__;
	  if (isKeyable(key)) {
	    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
	  }
	  return Map ? data.map['delete'](key) : assocDelete(data.map, key);
	}
	
	module.exports = mapDelete;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var hashHas = __webpack_require__(124);
	
	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(hash, key) {
	  return hashHas(hash, key) && delete hash[key];
	}
	
	module.exports = hashDelete;


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(114);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @param {Object} hash The hash to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(hash, key) {
	  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return type == 'number' || type == 'boolean' ||
	    (type == 'string' && value != '__proto__') || value == null;
	}
	
	module.exports = isKeyable;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var Map = __webpack_require__(118),
	    assocGet = __webpack_require__(107),
	    hashGet = __webpack_require__(127),
	    isKeyable = __webpack_require__(125);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapGet(key) {
	  var data = this.__data__;
	  if (isKeyable(key)) {
	    return hashGet(typeof key == 'string' ? data.string : data.hash, key);
	  }
	  return Map ? data.map.get(key) : assocGet(data.map, key);
	}
	
	module.exports = mapGet;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(114);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @param {Object} hash The hash to query.
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(hash, key) {
	  if (nativeCreate) {
	    var result = hash[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var Map = __webpack_require__(118),
	    assocHas = __webpack_require__(109),
	    hashHas = __webpack_require__(124),
	    isKeyable = __webpack_require__(125);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapHas(key) {
	  var data = this.__data__;
	  if (isKeyable(key)) {
	    return hashHas(typeof key == 'string' ? data.string : data.hash, key);
	  }
	  return Map ? data.map.has(key) : assocHas(data.map, key);
	}
	
	module.exports = mapHas;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var Map = __webpack_require__(118),
	    assocSet = __webpack_require__(130),
	    hashSet = __webpack_require__(131),
	    isKeyable = __webpack_require__(125);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache object.
	 */
	function mapSet(key, value) {
	  var data = this.__data__;
	  if (isKeyable(key)) {
	    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
	  } else if (Map) {
	    data.map.set(key, value);
	  } else {
	    assocSet(data.map, key, value);
	  }
	  return this;
	}
	
	module.exports = mapSet;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(105);
	
	/**
	 * Sets the associative array `key` to `value`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 */
	function assocSet(array, key, value) {
	  var index = assocIndexOf(array, key);
	  if (index < 0) {
	    array.push([key, value]);
	  } else {
	    array[index][1] = value;
	  }
	}
	
	module.exports = assocSet;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(114);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 */
	function hashSet(hash, key, value) {
	  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	}
	
	module.exports = hashSet;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(133),
	    isObject = __webpack_require__(21),
	    isObjectLike = __webpack_require__(35);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(101),
	    equalArrays = __webpack_require__(134),
	    equalByTag = __webpack_require__(136),
	    equalObjects = __webpack_require__(141),
	    getTag = __webpack_require__(142),
	    isArray = __webpack_require__(36),
	    isHostObject = __webpack_require__(117),
	    isTypedArray = __webpack_require__(145);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;
	
	  if (!objIsArr) {
	    objTag = getTag(object);
	    if (objTag == argsTag) {
	      objTag = objectTag;
	    } else if (objTag != objectTag) {
	      objIsArr = isTypedArray(object);
	    }
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    if (othTag == argsTag) {
	      othTag = objectTag;
	    } else if (othTag != objectTag) {
	      othIsArr = isTypedArray(other);
	    }
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && !(objIsArr || objIsObj)) {
	    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);
	  }
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	  if (!isPartial) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var arraySome = __webpack_require__(135);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.
	 * @param {Object} [stack] Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var index = -1,
	      isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(array, other);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (isUnordered) {
	      if (!arraySome(other, function(othValue) {
	            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 135 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(137),
	    Uint8Array = __webpack_require__(138),
	    mapToArray = __webpack_require__(139),
	    setToArray = __webpack_require__(140);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {
	  switch (tag) {
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	      // Coerce dates and booleans to numbers, dates to milliseconds and booleans
	      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
	      return +object == +other;
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case numberTag:
	      // Treat `NaN` vs. `NaN` as equal.
	      return (object != +object) ? other != +other : object == +other;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings primitives and string
	      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);
	
	      // Recursively compare objects (susceptible to call stack limits).
	      return (isPartial || object.size == other.size) &&
	        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);
	
	    case symbolTag:
	      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(119);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(119);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 139 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to an array.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 140 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(29),
	    keys = __webpack_require__(28);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var Map = __webpack_require__(118),
	    Set = __webpack_require__(143),
	    WeakMap = __webpack_require__(144);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Used to detect maps, sets, and weakmaps. */
	var mapCtorString = Map ? funcToString.call(Map) : '',
	    setCtorString = Set ? funcToString.call(Set) : '',
	    weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function getTag(value) {
	  return objectToString.call(value);
	}
	
	// Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.
	if ((Map && getTag(new Map) != mapTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : null,
	        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';
	
	    if (ctorString) {
	      switch (ctorString) {
	        case mapCtorString: return mapTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(115),
	    root = __webpack_require__(119);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(115),
	    root = __webpack_require__(119);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(22),
	    isObjectLike = __webpack_require__(35);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dateTag] = typedArrayTags[errorTag] =
	typedArrayTags[funcTag] = typedArrayTags[mapTag] =
	typedArrayTags[numberTag] = typedArrayTags[objectTag] =
	typedArrayTags[regexpTag] = typedArrayTags[setTag] =
	typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}
	
	module.exports = isTypedArray;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(147),
	    toPairs = __webpack_require__(148);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = toPairs(object),
	      length = result.length;
	
	  while (length--) {
	    result[length][2] = isStrictComparable(result[length][1]);
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(21);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var baseToPairs = __webpack_require__(149),
	    keys = __webpack_require__(28);
	
	/**
	 * Creates an array of own enumerable key-value pairs for `object` which
	 * can be consumed by `_.fromPairs`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the new array of key-value pairs.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.toPairs(new Foo);
	 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	 */
	function toPairs(object) {
	  return baseToPairs(object, keys(object));
	}
	
	module.exports = toPairs;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(150);
	
	/**
	 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	 * of key-value pairs for `object` corresponding to the property names of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the new array of key-value pairs.
	 */
	function baseToPairs(object, props) {
	  return arrayMap(props, function(key) {
	    return [key, object[key]];
	  });
	}
	
	module.exports = baseToPairs;


/***/ },
/* 150 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(132),
	    get = __webpack_require__(152),
	    hasIn = __webpack_require__(159);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(153);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined` the `defaultValue` is used in its place.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	var baseCastPath = __webpack_require__(154),
	    isKey = __webpack_require__(158);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = isKey(path, object) ? [path + ''] : baseCastPath(path);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[path[index++]];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(36),
	    stringToPath = __webpack_require__(155);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function baseCastPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}
	
	module.exports = baseCastPath;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(156);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	function stringToPath(string) {
	  var result = [];
	  toString(string).replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	}
	
	module.exports = stringToPath;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(137),
	    isSymbol = __webpack_require__(157);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = Symbol ? symbolProto.toString : undefined;
	
	/**
	 * Converts `value` to a string if it's not one. An empty string is returned
	 * for `null` and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (value == null) {
	    return '';
	  }
	  if (isSymbol(value)) {
	    return Symbol ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toString;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(35);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(36);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (typeof value == 'number') {
	    return true;
	  }
	  return !isArray(value) &&
	    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	      (object != null && value in Object(object)));
	}
	
	module.exports = isKey;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(160),
	    hasPath = __webpack_require__(161);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b.c');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b', 'c']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ },
/* 160 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var baseCastPath = __webpack_require__(154),
	    isArguments = __webpack_require__(33),
	    isArray = __webpack_require__(36),
	    isIndex = __webpack_require__(23),
	    isKey = __webpack_require__(158),
	    isLength = __webpack_require__(22),
	    isString = __webpack_require__(37),
	    last = __webpack_require__(162),
	    parent = __webpack_require__(163);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  if (object == null) {
	    return false;
	  }
	  var result = hasFunc(object, path);
	  if (!result && !isKey(path)) {
	    path = baseCastPath(path);
	    object = parent(object, path);
	    if (object != null) {
	      path = last(path);
	      result = hasFunc(object, path);
	    }
	  }
	  var length = object ? object.length : undefined;
	  return result || (
	    !!length && isLength(length) && isIndex(path, length) &&
	    (isArray(object) || isString(object) || isArguments(object))
	  );
	}
	
	module.exports = hasPath;


/***/ },
/* 162 */
/***/ function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array ? array.length : 0;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(164),
	    get = __webpack_require__(152);
	
	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));
	}
	
	module.exports = parent;


/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ },
/* 165 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument given to it.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.identity(object) === object;
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(19),
	    basePropertyDeep = __webpack_require__(167),
	    isKey = __webpack_require__(158);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': { 'c': 2 } } },
	 *   { 'a': { 'b': { 'c': 1 } } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b.c'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(153);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function (router) {
		if (_config2.default.isEnabled('manage/themes/details')) {
			router('/theme/:slug/:section?/:site_id?', _controller2.fetchThemeDetailsData, _controller2.details, _controller.makeLayout);
		}
	};
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _controller = __webpack_require__(169);
	
	var _controller2 = __webpack_require__(193);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Internal dependencies
	 */
	module.exports = exports['default'];

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.makeLayout = makeLayout;
	exports.clientRouter = clientRouter;
	exports.setSection = setSection;
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(171);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactRedux = __webpack_require__(172);
	
	var _actions = __webpack_require__(173);
	
	var _noop = __webpack_require__(175);
	
	var _noop2 = _interopRequireDefault(_noop);
	
	var _page = __webpack_require__(176);
	
	var _page2 = _interopRequireDefault(_page);
	
	var _loggedOut = __webpack_require__(177);
	
	var _loggedOut2 = _interopRequireDefault(_loggedOut);
	
	var _selectors = __webpack_require__(191);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var debug = (0, _debug2.default)('calypso:controller');
	
	/**
	 * @param { object } context -- Middleware context
	 * @param { function } next -- Call next middleware in chain
	*/
	/**
	 * External Dependencies
	 */
	function makeLayout(context, next) {
		var isLoggedIn = !!(0, _selectors.getCurrentUser)(context.store.getState());
		if (!isLoggedIn) {
			context.layout = makeLoggedOutLayout(context);
		} // TODO: else { makeLoggedInLayout( context ); }
		next();
	}
	
	/**
	 * @param { object } context -- Middleware context
	 * @returns { object } `LoggedOutLayout` element
	 *
	 * Return a `LayoutLoggedOut` element, using `context.primary`,
	 * `context.secondary`, and `context.tertiary` to populate it.
	*/
	function makeLoggedOutLayout(context) {
		var store = context.store;
		var primary = context.primary;
		var secondary = context.secondary;
		var tertiary = context.tertiary;
	
		return _react2.default.createElement(
			_reactRedux.Provider,
			{ store: store },
			_react2.default.createElement(_loggedOut2.default, { primary: primary,
				secondary: secondary,
				tertiary: tertiary })
		);
	}
	
	/**
	 * Isomorphic routing helper, client side
	 *
	 * @param { string } route - A route path
	 * @param { ...function } middlewares - Middleware to be invoked for route
	 *
	 * This function is passed to individual sections' controllers via
	 * `server/bundler/loader`. Sections are free to either ignore it, or use it
	 * instead of directly calling `page` for linking routes and middlewares in
	 * order to be also usable for server-side rendering (and isomorphic routing).
	 * `clientRouter` then also renders the element tree contained in `context.layout`
	 * (or, if that is empty, in `context.primary`) to the respectively corresponding
	 * divs.
	 */
	function clientRouter(route) {
		for (var _len = arguments.length, middlewares = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
			middlewares[_key - 1] = arguments[_key];
		}
	
		_page2.default.apply(undefined, [route].concat(middlewares, [render]));
	}
	
	function setSection(section) {
		return function (context) {
			var next = arguments.length <= 1 || arguments[1] === undefined ? _noop2.default : arguments[1];
	
			context.store.dispatch((0, _actions.setSection)(section));
	
			next();
		};
	}
	
	function render(context) {
		context.layout ? renderSingleTree(context) : renderSeparateTrees(context);
	}
	
	function renderSingleTree(context) {
		_reactDom2.default.render(context.layout, document.getElementById('wpcom'));
	}
	
	function renderSeparateTrees(context) {
		renderPrimary(context);
		renderSecondary(context);
	}
	
	function renderPrimary(context) {
		var primary = context.primary;
	
	
		if (primary) {
			debug('Rendering primary', primary);
			_reactDom2.default.render(primary, document.getElementById('primary'));
		}
	}
	
	function renderSecondary(context) {
		if (context.secondary === null) {
			debug('Unmounting secondary');
			_reactDom2.default.unmountComponentAtNode(document.getElementById('secondary'));
		} else if (context.secondary !== undefined) {
			debug('Rendering secondary');
			_reactDom2.default.render(context.secondary, document.getElementById('secondary'));
		}
	}

/***/ },
/* 170 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 171 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 172 */
/***/ function(module, exports) {

	module.exports = require("react-redux");

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.setSelectedSiteId = setSelectedSiteId;
	exports.setAllSitesSelected = setAllSitesSelected;
	exports.setSection = setSection;
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * Returns an action object to be used in signalling that a site has been set
	 * as selected.
	 *
	 * @param  {Number} siteId Site ID
	 * @return {Object}        Action object
	 */
	function setSelectedSiteId(siteId) {
		return {
			type: _actionTypes.SELECTED_SITE_SET,
			siteId: siteId
		};
	}
	
	/**
	 * Returns an action object to be used in signalling that all sites have been
	 * set as selected.
	 *
	 * @return {Object}        Action object
	 */
	/**
	 * Internal dependencies
	 */
	function setAllSitesSelected() {
		return {
			type: _actionTypes.SELECTED_SITE_SET,
			siteId: null
		};
	}
	
	function setSection(section) {
		var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
		options.type = _actionTypes.SET_SECTION;
		if (section) {
			options.section = section;
		}
		options.hasSidebar = options.hasSidebar === false ? false : true;
		return options;
	}

/***/ },
/* 174 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/** @ssr-ready **/
	
	/**
	 * Any new action type should be added to the set of exports below, with the
	 * value mirroring its exported name.
	 *
	 * Please keep this list alphabetized!
	 *
	 * Unsure how to name an action type? Refer to our guidelines:
	 *  - https://wpcalypso.wordpress.com/devdocs/docs/our-approach-to-data.md#actions
	 */
	
	var ANALYTICS_EVENT_RECORD = exports.ANALYTICS_EVENT_RECORD = 'ANALYTICS_EVENT_RECORD';
	var ANALYTICS_MULTI_TRACK = exports.ANALYTICS_MULTI_TRACK = 'ANALYTICS_MULTI_TRACK';
	var ANALYTICS_PAGE_VIEW_RECORD = exports.ANALYTICS_PAGE_VIEW_RECORD = 'ANALYTICS_PAGE_VIEW_RECORD';
	var ANALYTICS_STAT_BUMP = exports.ANALYTICS_STAT_BUMP = 'ANALYTICS_STAT_BUMP';
	var CONNECTION_LOST = exports.CONNECTION_LOST = 'CONNECTION_LOST';
	var CONNECTION_RESTORED = exports.CONNECTION_RESTORED = 'CONNECTION_RESTORED';
	var COMMENTS_COUNT_RECEIVE = exports.COMMENTS_COUNT_RECEIVE = 'COMMENTS_COUNT_RECEIVE';
	var COMMENTS_ERROR = exports.COMMENTS_ERROR = 'COMMENTS_ERROR';
	var COMMENTS_LIKE = exports.COMMENTS_LIKE = 'COMMENTS_LIKE';
	var COMMENTS_LIKE_UPDATE = exports.COMMENTS_LIKE_UPDATE = 'COMMENTS_LIKE_UPDATE';
	var COMMENTS_RECEIVE = exports.COMMENTS_RECEIVE = 'COMMENTS_RECEIVE';
	var COMMENTS_REMOVE = exports.COMMENTS_REMOVE = 'COMMENTS_REMOVE';
	var COMMENTS_REQUEST = exports.COMMENTS_REQUEST = 'COMMENTS_REQUEST';
	var COMMENTS_REQUEST_SUCCESS = exports.COMMENTS_REQUEST_SUCCESS = 'COMMENTS_REQUEST_SUCCESS';
	var COMMENTS_REQUEST_FAILURE = exports.COMMENTS_REQUEST_FAILURE = 'COMMENTS_REQUEST_FAILURE';
	var COMMENTS_UNLIKE = exports.COMMENTS_UNLIKE = 'COMMENTS_UNLIKE';
	var DOCUMENT_HEAD_LINK_ADD = exports.DOCUMENT_HEAD_LINK_ADD = 'DOCUMENT_HEAD_LINK_ADD';
	var DOCUMENT_HEAD_META_ADD = exports.DOCUMENT_HEAD_META_ADD = 'DOCUMENT_HEAD_META_ADD';
	var DOCUMENT_HEAD_TITLE_SET = exports.DOCUMENT_HEAD_TITLE_SET = 'DOCUMENT_HEAD_TITLE_SET';
	var DOCUMENT_HEAD_UNREAD_COUNT_SET = exports.DOCUMENT_HEAD_UNREAD_COUNT_SET = 'DOCUMENT_HEAD_UNREAD_COUNT_SET';
	var CURRENT_USER_ID_SET = exports.CURRENT_USER_ID_SET = 'CURRENT_USER_ID_SET';
	var DESERIALIZE = exports.DESERIALIZE = 'DESERIALIZE';
	var DOMAINS_SUGGESTIONS_RECEIVE = exports.DOMAINS_SUGGESTIONS_RECEIVE = 'DOMAINS_SUGGESTIONS_RECEIVE';
	var DOMAINS_SUGGESTIONS_REQUEST = exports.DOMAINS_SUGGESTIONS_REQUEST = 'DOMAINS_SUGGESTIONS_REQUEST';
	var DOMAINS_SUGGESTIONS_REQUEST_FAILURE = exports.DOMAINS_SUGGESTIONS_REQUEST_FAILURE = 'DOMAINS_SUGGESTIONS_REQUEST_FAILURE';
	var DOMAINS_SUGGESTIONS_REQUEST_SUCCESS = exports.DOMAINS_SUGGESTIONS_REQUEST_SUCCESS = 'DOMAINS_SUGGESTIONS_REQUEST_SUCCESS';
	var EDITOR_CONTACT_FORM_CLEAR = exports.EDITOR_CONTACT_FORM_CLEAR = 'EDITOR_CONTACT_FORM_CLEAR';
	var EDITOR_CONTACT_FORM_LOAD = exports.EDITOR_CONTACT_FORM_LOAD = 'EDITOR_CONTACT_FORM_LOAD';
	var EDITOR_CONTACT_FORM_FIELD_ADD = exports.EDITOR_CONTACT_FORM_FIELD_ADD = 'EDITOR_CONTACT_FORM_FIELD_ADD';
	var EDITOR_CONTACT_FORM_FIELD_REMOVE = exports.EDITOR_CONTACT_FORM_FIELD_REMOVE = 'EDITOR_CONTACT_FORM_FIELD_REMOVE';
	var EDITOR_CONTACT_FORM_FIELD_UPDATE = exports.EDITOR_CONTACT_FORM_FIELD_UPDATE = 'EDITOR_CONTACT_FORM_FIELD_UPDATE';
	var EDITOR_CONTACT_FORM_SETTINGS_UPDATE = exports.EDITOR_CONTACT_FORM_SETTINGS_UPDATE = 'EDITOR_CONTACT_FORM_SETTINGS_UPDATE';
	var EDITOR_LAST_DRAFT_SET = exports.EDITOR_LAST_DRAFT_SET = 'EDITOR_LAST_DRAFT_SET';
	var EDITOR_MEDIA_EDIT_ITEM_SET = exports.EDITOR_MEDIA_EDIT_ITEM_SET = 'EDITOR_MEDIA_EDIT_ITEM_SET';
	var EDITOR_POST_ID_SET = exports.EDITOR_POST_ID_SET = 'EDITOR_POST_ID_SET';
	var EDITOR_SHOW_DRAFTS_TOGGLE = exports.EDITOR_SHOW_DRAFTS_TOGGLE = 'EDITOR_SHOW_DRAFTS_TOGGLE';
	var EXPORT_ADVANCED_SETTINGS_FETCH = exports.EXPORT_ADVANCED_SETTINGS_FETCH = 'EXPORT_ADVANCED_SETTINGS_FETCH';
	var EXPORT_ADVANCED_SETTINGS_FETCH_FAIL = exports.EXPORT_ADVANCED_SETTINGS_FETCH_FAIL = 'EXPORT_ADVANCED_SETTINGS_FETCH_FAIL';
	var EXPORT_ADVANCED_SETTINGS_RECEIVE = exports.EXPORT_ADVANCED_SETTINGS_RECEIVE = 'EXPORT_ADVANCED_SETTINGS_RECEIVE';
	var EXPORT_CLEAR = exports.EXPORT_CLEAR = 'EXPORT_CLEAR';
	var EXPORT_COMPLETE = exports.EXPORT_COMPLETE = 'EXPORT_COMPLETE';
	var EXPORT_FAILURE = exports.EXPORT_FAILURE = 'EXPORT_FAILURE';
	var EXPORT_POST_TYPE_SET = exports.EXPORT_POST_TYPE_SET = 'EXPORT_POST_TYPE_SET';
	var EXPORT_POST_TYPE_FIELD_SET = exports.EXPORT_POST_TYPE_FIELD_SET = 'EXPORT_POST_TYPE_FIELD_SET';
	var EXPORT_START_REQUEST = exports.EXPORT_START_REQUEST = 'EXPORT_START_REQUEST';
	var EXPORT_STARTED = exports.EXPORT_STARTED = 'EXPORT_STARTED';
	var EXPORT_STATUS_FETCH = exports.EXPORT_STATUS_FETCH = 'EXPORT_STATUS_FETCH';
	var FETCH_WPORG_PLUGIN_DATA = exports.FETCH_WPORG_PLUGIN_DATA = 'FETCH_WPORG_PLUGIN_DATA';
	var FOLLOWER_REMOVE_REQUEST = exports.FOLLOWER_REMOVE_REQUEST = 'FOLLOWER_REMOVE_REQUEST';
	var FOLLOWER_REMOVE_ERROR = exports.FOLLOWER_REMOVE_ERROR = 'FOLLOWER_REMOVE_ERROR';
	var FOLLOWER_REMOVE_SUCCESS = exports.FOLLOWER_REMOVE_SUCCESS = 'FOLLOWER_REMOVE_SUCCESS';
	var FOLLOWERS_RECEIVE = exports.FOLLOWERS_RECEIVE = 'FOLLOWERS_RECEIVE';
	var FOLLOWERS_REQUEST = exports.FOLLOWERS_REQUEST = 'FOLLOWERS_REQUEST';
	var FOLLOWERS_REQUEST_ERROR = exports.FOLLOWERS_REQUEST_ERROR = 'FOLLOWERS_REQUEST_ERROR';
	var GOOGLE_APPS_USERS_FETCH = exports.GOOGLE_APPS_USERS_FETCH = 'GOOGLE_APPS_USERS_FETCH';
	var GOOGLE_APPS_USERS_FETCH_COMPLETED = exports.GOOGLE_APPS_USERS_FETCH_COMPLETED = 'GOOGLE_APPS_USERS_FETCH_COMPLETED';
	var GOOGLE_APPS_USERS_FETCH_FAILED = exports.GOOGLE_APPS_USERS_FETCH_FAILED = 'GOOGLE_APPS_USERS_FETCH_FAILED';
	var IMAGE_EDITOR_CROP = exports.IMAGE_EDITOR_CROP = 'IMAGE_EDITOR_CROP';
	var IMAGE_EDITOR_FLIP = exports.IMAGE_EDITOR_FLIP = 'IMAGE_EDITOR_FLIP';
	var IMAGE_EDITOR_ROTATE_COUNTERCLOCKWISE = exports.IMAGE_EDITOR_ROTATE_COUNTERCLOCKWISE = 'IMAGE_EDITOR_ROTATE_COUNTERCLOCKWISE';
	var IMAGE_EDITOR_SET_ASPECT_RATIO = exports.IMAGE_EDITOR_SET_ASPECT_RATIO = 'IMAGE_EDITOR_SET_ASPECT_RATIO';
	var IMAGE_EDITOR_SET_CROP_BOUNDS = exports.IMAGE_EDITOR_SET_CROP_BOUNDS = 'IMAGE_EDITOR_SET_CROP_BOUNDS';
	var IMAGE_EDITOR_SET_FILE_INFO = exports.IMAGE_EDITOR_SET_FILE_INFO = 'IMAGE_EDITOR_SET_FILE_INFO';
	var IMAGE_EDITOR_STATE_RESET = exports.IMAGE_EDITOR_STATE_RESET = 'IMAGE_EDITOR_STATE_RESET';
	var IMPORTS_AUTHORS_SET_MAPPING = exports.IMPORTS_AUTHORS_SET_MAPPING = 'IMPORTS_AUTHORS_SET_MAPPING';
	var IMPORTS_AUTHORS_START_MAPPING = exports.IMPORTS_AUTHORS_START_MAPPING = 'IMPORTS_AUTHORS_START_MAPPING';
	var IMPORTS_FETCH = exports.IMPORTS_FETCH = 'IMPORTS_FETCH';
	var IMPORTS_FETCH_FAILED = exports.IMPORTS_FETCH_FAILED = 'IMPORTS_FETCH_FAILED';
	var IMPORTS_FETCH_COMPLETED = exports.IMPORTS_FETCH_COMPLETED = 'IMPORTS_FETCH_COMPLETED';
	var IMPORTS_IMPORT_CANCEL = exports.IMPORTS_IMPORT_CANCEL = 'IMPORTS_IMPORT_CANCEL';
	var IMPORTS_IMPORT_LOCK = exports.IMPORTS_IMPORT_LOCK = 'IMPORTS_IMPORT_LOCK';
	var IMPORTS_IMPORT_RECEIVE = exports.IMPORTS_IMPORT_RECEIVE = 'IMPORTS_IMPORT_RECEIVE';
	var IMPORTS_IMPORT_RESET = exports.IMPORTS_IMPORT_RESET = 'IMPORTS_IMPORT_RESET';
	var IMPORTS_IMPORT_START = exports.IMPORTS_IMPORT_START = 'IMPORTS_IMPORT_START';
	var IMPORTS_IMPORT_UNLOCK = exports.IMPORTS_IMPORT_UNLOCK = 'IMPORTS_IMPORT_UNLOCK';
	var IMPORTS_START_IMPORTING = exports.IMPORTS_START_IMPORTING = 'IMPORTS_START_IMPORTING';
	var IMPORTS_STORE_RESET = exports.IMPORTS_STORE_RESET = 'IMPORTS_STORE_RESET';
	var IMPORTS_UPLOAD_FAILED = exports.IMPORTS_UPLOAD_FAILED = 'IMPORTS_UPDLOAD_FAILED';
	var IMPORTS_UPLOAD_COMPLETED = exports.IMPORTS_UPLOAD_COMPLETED = 'IMPORTS_UPLOAD_COMPLETED';
	var IMPORTS_UPLOAD_SET_PROGRESS = exports.IMPORTS_UPLOAD_SET_PROGRESS = 'IMPORTS_UPLOAD_SET_PROGRESS';
	var IMPORTS_UPLOAD_START = exports.IMPORTS_UPLOAD_START = 'IMPORTS_UPLOAD_START';
	var JETPACK_CONNECT_CHECK_URL = exports.JETPACK_CONNECT_CHECK_URL = 'JETPACK_CONNECT_CHECK_URL';
	var JETPACK_CONNECT_CHECK_URL_RECEIVE = exports.JETPACK_CONNECT_CHECK_URL_RECEIVE = 'JETPACK_CONNECT_CHECK_URL_RECEIVE';
	var JETPACK_CONNECT_DISMISS_URL_STATUS = exports.JETPACK_CONNECT_DISMISS_URL_STATUS = 'JETPACK_CONNECT_DISMISS_URL_STATUS';
	var JETPACK_CONNECT_AUTHORIZE = exports.JETPACK_CONNECT_AUTHORIZE = 'JETPACK_CONNECT_AUTHORIZE';
	var JETPACK_CONNECT_AUTHORIZE_RECEIVE = exports.JETPACK_CONNECT_AUTHORIZE_RECEIVE = 'JETPACK_CONNECT_AUTHORIZE_RECEIVE';
	var JETPACK_CONNECT_AUTHORIZE_RECEIVE_SITE_LIST = exports.JETPACK_CONNECT_AUTHORIZE_RECEIVE_SITE_LIST = 'JETPACK_CONNECT_AUTHORIZE_RECEIVE_SITE_LIST';
	var JETPACK_CONNECT_QUERY_SET = exports.JETPACK_CONNECT_QUERY_SET = 'JETPACK_CONNECT_QUERY_SET';
	var JETPACK_CONNECT_QUERY_UPDATE = exports.JETPACK_CONNECT_QUERY_UPDATE = 'JETPACK_CONNECT_QUERY_UPDATE';
	var JETPACK_CONNECT_CREATE_ACCOUNT = exports.JETPACK_CONNECT_CREATE_ACCOUNT = 'JETPACK_CONNECT_CREATE_ACCOUNT';
	var JETPACK_CONNECT_CREATE_ACCOUNT_RECEIVE = exports.JETPACK_CONNECT_CREATE_ACCOUNT_RECEIVE = 'JETPACK_CONNECT_CREATE_ACCOUNT_RECEIVE';
	var JETPACK_CONNECT_ACTIVATE_MANAGE = exports.JETPACK_CONNECT_ACTIVATE_MANAGE = 'JETPACK_CONNECT_ACTIVATE_MANAGE';
	var JETPACK_CONNECT_ACTIVATE_MANAGE_RECEIVE = exports.JETPACK_CONNECT_ACTIVATE_MANAGE_RECEIVE = 'JETPACK_CONNECT_ACTIVATE_MANAGE_RECEIVE';
	var JETPACK_CONNECT_REDIRECT = exports.JETPACK_CONNECT_REDIRECT = 'JETPACK_CONNECT_REDIRECT';
	var JETPACK_CONNECT_REDIRECT_WP_ADMIN = exports.JETPACK_CONNECT_REDIRECT_WP_ADMIN = 'JETPACK_CONNECT_REDIRECT_WP_ADMIN';
	var JETPACK_CONNECT_SSO_AUTHORIZE_REQUEST = exports.JETPACK_CONNECT_SSO_AUTHORIZE_REQUEST = 'JETPACK_CONNECT_SSO_AUTHORIZE_REQUEST';
	var JETPACK_CONNECT_SSO_AUTHORIZE_SUCCESS = exports.JETPACK_CONNECT_SSO_AUTHORIZE_SUCCESS = 'JETPACK_CONNECT_SSO_AUTHORIZE_SUCCESS';
	var JETPACK_CONNECT_SSO_AUTHORIZE_ERROR = exports.JETPACK_CONNECT_SSO_AUTHORIZE_ERROR = 'JETPACK_CONNECT_SSO_AUTHORIZE_ERROR';
	var JETPACK_CONNECT_SSO_VALIDATION_REQUEST = exports.JETPACK_CONNECT_SSO_VALIDATION_REQUEST = 'JETPACK_CONNECT_SSO_VALIDATION_REQUEST';
	var JETPACK_CONNECT_SSO_VALIDATION_SUCCESS = exports.JETPACK_CONNECT_SSO_VALIDATION_SUCCESS = 'JETPACK_CONNECT_SSO_VALIDATION_SUCCESS';
	var JETPACK_CONNECT_SSO_VALIDATION_ERROR = exports.JETPACK_CONNECT_SSO_VALIDATION_ERROR = 'JETPACK_CONNECT_SSO_VALIDATION_ERROR';
	var JETPACK_CONNECT_STORE_SESSION = exports.JETPACK_CONNECT_STORE_SESSION = 'JETPACK_CONNECT_STORE_SESSION';
	var NEW_NOTICE = exports.NEW_NOTICE = 'NEW_NOTICE';
	var OLARK_READY = exports.OLARK_READY = 'OLARK_READY';
	var OLARK_REQUEST = exports.OLARK_REQUEST = 'OLARK_REQUEST';
	var OLARK_TIMEOUT = exports.OLARK_TIMEOUT = 'OLARK_TIMEOUT';
	var PLUGIN_SETUP_INSTRUCTIONS_FETCH = exports.PLUGIN_SETUP_INSTRUCTIONS_FETCH = 'PLUGIN_SETUP_INSTRUCTIONS_FETCH';
	var PLUGIN_SETUP_INSTRUCTIONS_RECEIVE = exports.PLUGIN_SETUP_INSTRUCTIONS_RECEIVE = 'PLUGIN_SETUP_INSTRUCTIONS_RECEIVE';
	var PLUGIN_SETUP_INSTALL = exports.PLUGIN_SETUP_INSTALL = 'PLUGIN_SETUP_INSTALL';
	var PLUGIN_SETUP_ACTIVATE = exports.PLUGIN_SETUP_ACTIVATE = 'PLUGIN_SETUP_ACTIVATE';
	var PLUGIN_SETUP_CONFIGURE = exports.PLUGIN_SETUP_CONFIGURE = 'PLUGIN_SETUP_CONFIGURE';
	var PLUGIN_SETUP_FINISH = exports.PLUGIN_SETUP_FINISH = 'PLUGIN_SETUP_FINISH';
	var PLUGIN_SETUP_ERROR = exports.PLUGIN_SETUP_ERROR = 'PLUGIN_SETUP_ERROR';
	var PLANS_RECEIVE = exports.PLANS_RECEIVE = 'PLANS_RECEIVE';
	var PLANS_REQUEST = exports.PLANS_REQUEST = 'PLANS_REQUEST';
	var PLANS_REQUEST_SUCCESS = exports.PLANS_REQUEST_SUCCESS = 'PLANS_REQUEST_SUCCESS';
	var PLANS_REQUEST_FAILURE = exports.PLANS_REQUEST_FAILURE = 'PLANS_REQUEST_FAILURE';
	var POST_COUNTS_RECEIVE = exports.POST_COUNTS_RECEIVE = 'POST_COUNTS_RECEIVE';
	var POST_COUNTS_REQUEST = exports.POST_COUNTS_REQUEST = 'POST_COUNTS_REQUEST';
	var POST_COUNTS_REQUEST_FAILURE = exports.POST_COUNTS_REQUEST_FAILURE = 'POST_COUNTS_REQUEST_FAILURE';
	var POST_COUNTS_REQUEST_SUCCESS = exports.POST_COUNTS_REQUEST_SUCCESS = 'POST_COUNTS_REQUEST_SUCCESS';
	var POST_DELETE = exports.POST_DELETE = 'POST_DELETE';
	var POST_DELETE_SUCCESS = exports.POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS';
	var POST_DELETE_FAILURE = exports.POST_DELETE_FAILURE = 'POST_DELETE_FAILURE';
	var PREFERENCES_FETCH = exports.PREFERENCES_FETCH = 'PREFERENCES_FETCH';
	var PREFERENCES_FETCH_FAILURE = exports.PREFERENCES_FETCH_FAILURE = 'PREFERENCES_FETCH_FAILURE';
	var PREFERENCES_FETCH_SUCCESS = exports.PREFERENCES_FETCH_SUCCESS = 'PREFERENCES_FETCH_SUCCESS';
	var PREFERENCES_RECEIVE = exports.PREFERENCES_RECEIVE = 'PREFERENCES_RECEIVE';
	var PREFERENCES_REMOVE = exports.PREFERENCES_REMOVE = 'PREFERENCES_REMOVE';
	var PREFERENCES_SET = exports.PREFERENCES_SET = 'PREFERENCES_SET';
	var POST_EDIT = exports.POST_EDIT = 'POST_EDIT';
	var POST_EDITS_RESET = exports.POST_EDITS_RESET = 'POST_EDITS_RESET';
	var POST_REQUEST = exports.POST_REQUEST = 'POST_REQUEST';
	var POST_REQUEST_SUCCESS = exports.POST_REQUEST_SUCCESS = 'POST_REQUEST_SUCCESS';
	var POST_REQUEST_FAILURE = exports.POST_REQUEST_FAILURE = 'POST_REQUEST_FAILURE';
	var POST_STATS_RECEIVE = exports.POST_STATS_RECEIVE = 'POST_STATS_RECEIVE';
	var POST_STATS_REQUEST = exports.POST_STATS_REQUEST = 'POST_STATS_REQUEST';
	var POST_STATS_REQUEST_FAILURE = exports.POST_STATS_REQUEST_FAILURE = 'POST_STATS_REQUEST_FAILURE';
	var POST_STATS_REQUEST_SUCCESS = exports.POST_STATS_REQUEST_SUCCESS = 'POST_STATS_REQUEST_SUCCESS';
	var POST_TYPES_RECEIVE = exports.POST_TYPES_RECEIVE = 'POST_TYPES_RECEIVE';
	var POST_TYPES_REQUEST = exports.POST_TYPES_REQUEST = 'POST_TYPES_REQUEST';
	var POST_TYPES_REQUEST_SUCCESS = exports.POST_TYPES_REQUEST_SUCCESS = 'POST_TYPES_REQUEST_SUCCESS';
	var POST_TYPES_REQUEST_FAILURE = exports.POST_TYPES_REQUEST_FAILURE = 'POST_TYPES_REQUEST_FAILURE';
	var POST_TYPES_TAXONOMIES_RECEIVE = exports.POST_TYPES_TAXONOMIES_RECEIVE = 'POST_TYPES_TAXONOMIES_RECEIVE';
	var POST_TYPES_TAXONOMIES_REQUEST = exports.POST_TYPES_TAXONOMIES_REQUEST = 'POST_TYPES_TAXONOMIES_REQUEST';
	var POST_TYPES_TAXONOMIES_REQUEST_FAILURE = exports.POST_TYPES_TAXONOMIES_REQUEST_FAILURE = 'POST_TYPES_TAXONOMIES_REQUEST_FAILURE';
	var POST_TYPES_TAXONOMIES_REQUEST_SUCCESS = exports.POST_TYPES_TAXONOMIES_REQUEST_SUCCESS = 'POST_TYPES_TAXONOMIES_REQUEST_SUCCESS';
	var POSTS_RECEIVE = exports.POSTS_RECEIVE = 'POSTS_RECEIVE';
	var POSTS_REQUEST = exports.POSTS_REQUEST = 'POSTS_REQUEST';
	var POSTS_REQUEST_FAILURE = exports.POSTS_REQUEST_FAILURE = 'POSTS_REQUEST_FAILURE';
	var POSTS_REQUEST_SUCCESS = exports.POSTS_REQUEST_SUCCESS = 'POSTS_REQUEST_SUCCESS';
	var PREVIEW_CUSTOMIZATIONS_CLEAR = exports.PREVIEW_CUSTOMIZATIONS_CLEAR = 'PREVIEW_CUSTOMIZATIONS_CLEAR';
	var PREVIEW_MARKUP_RECEIVE = exports.PREVIEW_MARKUP_RECEIVE = 'PREVIEW_MARKUP_RECEIVE';
	var PREVIEW_CUSTOMIZATIONS_SAVED = exports.PREVIEW_CUSTOMIZATIONS_SAVED = 'PREVIEW_CUSTOMIZATIONS_SAVED';
	var PREVIEW_CUSTOMIZATIONS_UPDATE = exports.PREVIEW_CUSTOMIZATIONS_UPDATE = 'PREVIEW_CUSTOMIZATIONS_UPDATE';
	var PREVIEW_CUSTOMIZATIONS_UNDO = exports.PREVIEW_CUSTOMIZATIONS_UNDO = 'PREVIEW_CUSTOMIZATIONS_UNDO';
	var PUBLICIZE_CONNECTIONS_RECEIVE = exports.PUBLICIZE_CONNECTIONS_RECEIVE = 'PUBLICIZE_CONNECTIONS_RECEIVE';
	var PUBLICIZE_CONNECTIONS_REQUEST = exports.PUBLICIZE_CONNECTIONS_REQUEST = 'PUBLICIZE_CONNECTIONS_REQUEST';
	var PUBLICIZE_CONNECTIONS_REQUEST_FAILURE = exports.PUBLICIZE_CONNECTIONS_REQUEST_FAILURE = 'PUBLICIZE_CONNECTIONS_REQUEST_FAILURE';
	var READER_FEED_REQUEST = exports.READER_FEED_REQUEST = 'READER_FEED_REQUEST';
	var READER_FEED_REQUEST_SUCCESS = exports.READER_FEED_REQUEST_SUCCESS = 'READER_FEED_REQUEST_SUCCESS';
	var READER_FEED_REQUEST_FAILURE = exports.READER_FEED_REQUEST_FAILURE = 'READER_FEED_REQUEST_FAILURE';
	var READER_FEED_UPDATE = exports.READER_FEED_UPDATE = 'READER_FEED_UPDATE';
	var READER_RELATED_POSTS_REQUEST = exports.READER_RELATED_POSTS_REQUEST = 'READER_RELATED_POSTS_REQUEST';
	var READER_RELATED_POSTS_REQUEST_SUCCESS = exports.READER_RELATED_POSTS_REQUEST_SUCCESS = 'READER_RELATED_POSTS_REQUEST_SUCCESS';
	var READER_RELATED_POSTS_REQUEST_FAILURE = exports.READER_RELATED_POSTS_REQUEST_FAILURE = 'READER_RELATED_POSTS_REQUEST_FAILURE';
	var READER_RELATED_POSTS_RECEIVE = exports.READER_RELATED_POSTS_RECEIVE = 'READER_RELATED_POSTS_RECEIVE';
	var READER_SITE_REQUEST = exports.READER_SITE_REQUEST = 'READER_SITE_REQUEST';
	var READER_SITE_REQUEST_SUCCESS = exports.READER_SITE_REQUEST_SUCCESS = 'READER_SITE_REQUEST_SUCCESS';
	var READER_SITE_REQUEST_FAILURE = exports.READER_SITE_REQUEST_FAILURE = 'READER_SITE_REQUEST_FAILURE';
	var READER_SITE_UPDATE = exports.READER_SITE_UPDATE = 'READER_SITE_UPDATE';
	var READER_FULLPOST_SHOW = exports.READER_FULLPOST_SHOW = 'READER_FULLPOST_SHOW';
	var READER_FULLPOST_HIDE = exports.READER_FULLPOST_HIDE = 'READER_FULLPOST_HIDE';
	var READER_LIST_DISMISS_NOTICE = exports.READER_LIST_DISMISS_NOTICE = 'READER_LIST_DISMISS_NOTICE';
	var READER_LIST_REQUEST = exports.READER_LIST_REQUEST = 'READER_LIST_REQUEST';
	var READER_LIST_REQUEST_SUCCESS = exports.READER_LIST_REQUEST_SUCCESS = 'READER_LIST_REQUEST_SUCCESS';
	var READER_LIST_REQUEST_FAILURE = exports.READER_LIST_REQUEST_FAILURE = 'READER_LIST_REQUEST_FAILURE';
	var READER_LIST_UPDATE = exports.READER_LIST_UPDATE = 'READER_LIST_UPDATE';
	var READER_LIST_UPDATE_SUCCESS = exports.READER_LIST_UPDATE_SUCCESS = 'READER_LIST_UPDATE_SUCCESS';
	var READER_LIST_UPDATE_FAILURE = exports.READER_LIST_UPDATE_FAILURE = 'READER_LIST_UPDATE_FAILURE';
	var READER_LIST_UPDATE_TITLE = exports.READER_LIST_UPDATE_TITLE = 'READER_LIST_UPDATE_TITLE';
	var READER_LIST_UPDATE_DESCRIPTION = exports.READER_LIST_UPDATE_DESCRIPTION = 'READER_LIST_UPDATE_DESCRIPTION';
	var READER_LISTS_FOLLOW = exports.READER_LISTS_FOLLOW = 'READER_LISTS_FOLLOW';
	var READER_LISTS_FOLLOW_SUCCESS = exports.READER_LISTS_FOLLOW_SUCCESS = 'READER_LISTS_FOLLOW_SUCCESS';
	var READER_LISTS_FOLLOW_FAILURE = exports.READER_LISTS_FOLLOW_FAILURE = 'READER_LISTS_FOLLOW_FAILURE';
	var READER_LISTS_RECEIVE = exports.READER_LISTS_RECEIVE = 'READER_LISTS_RECEIVE';
	var READER_LISTS_REQUEST = exports.READER_LISTS_REQUEST = 'READER_LISTS_REQUEST';
	var READER_LISTS_REQUEST_SUCCESS = exports.READER_LISTS_REQUEST_SUCCESS = 'READER_LISTS_REQUEST_SUCCESS';
	var READER_LISTS_REQUEST_FAILURE = exports.READER_LISTS_REQUEST_FAILURE = 'READER_LISTS_REQUEST_FAILURE';
	var READER_LISTS_UNFOLLOW = exports.READER_LISTS_UNFOLLOW = 'READER_LISTS_UNFOLLOW';
	var READER_LISTS_UNFOLLOW_SUCCESS = exports.READER_LISTS_UNFOLLOW_SUCCESS = 'READER_LISTS_UNFOLLOW_SUCCESS';
	var READER_LISTS_UNFOLLOW_FAILURE = exports.READER_LISTS_UNFOLLOW_FAILURE = 'READER_LISTS_UNFOLLOW_FAILURE';
	var READER_POSTS_RECEIVE = exports.READER_POSTS_RECEIVE = 'READER_POSTS_RECEIVE';
	var READER_SIDEBAR_LISTS_TOGGLE = exports.READER_SIDEBAR_LISTS_TOGGLE = 'READER_SIDEBAR_LISTS_TOGGLE';
	var READER_SIDEBAR_TAGS_TOGGLE = exports.READER_SIDEBAR_TAGS_TOGGLE = 'READER_SIDEBAR_TAGS_TOGGLE';
	var READER_START_RECOMMENDATION_INTERACTION = exports.READER_START_RECOMMENDATION_INTERACTION = 'READER_START_RECOMMENDATION_INTERACTION';
	var READER_START_RECOMMENDATIONS_RECEIVE = exports.READER_START_RECOMMENDATIONS_RECEIVE = 'READER_START_RECOMMENDATIONS_RECEIVE';
	var READER_START_RECOMMENDATIONS_REQUEST = exports.READER_START_RECOMMENDATIONS_REQUEST = 'READER_START_RECOMMENDATIONS_REQUEST';
	var READER_START_RECOMMENDATIONS_REQUEST_SUCCESS = exports.READER_START_RECOMMENDATIONS_REQUEST_SUCCESS = 'READER_START_RECOMMENDATIONS_REQUEST_SUCCESS';
	var READER_START_RECOMMENDATIONS_REQUEST_FAILURE = exports.READER_START_RECOMMENDATIONS_REQUEST_FAILURE = 'READER_START_RECOMMENDATIONS_REQUEST_FAILURE';
	var RECEIPT_FETCH = exports.RECEIPT_FETCH = 'RECEIPT_FETCH';
	var RECEIPT_FETCH_COMPLETED = exports.RECEIPT_FETCH_COMPLETED = 'RECEIPT_FETCH_COMPLETED';
	var RECEIPT_FETCH_FAILED = exports.RECEIPT_FETCH_FAILED = 'RECEIPT_FETCH_FAILED';
	var REMOVE_NOTICE = exports.REMOVE_NOTICE = 'REMOVE_NOTICE';
	var SELECTED_SITE_SET = exports.SELECTED_SITE_SET = 'SELECTED_SITE_SET';
	var SERIALIZE = exports.SERIALIZE = 'SERIALIZE';
	var SERVER_DESERIALIZE = exports.SERVER_DESERIALIZE = 'SERVER_DESERIALIZE';
	var SET_ROUTE = exports.SET_ROUTE = 'SET_ROUTE';
	var SET_SECTION = exports.SET_SECTION = 'SET_SECTION';
	var GUIDED_TOUR_SHOW = exports.GUIDED_TOUR_SHOW = 'GUIDED_TOUR_SHOW';
	var GUIDED_TOUR_UPDATE = exports.GUIDED_TOUR_UPDATE = 'GUIDED_TOUR_UPDATE';
	var SITE_DOMAINS_RECEIVE = exports.SITE_DOMAINS_RECEIVE = 'SITE_DOMAINS_RECEIVE';
	var SITE_DOMAINS_REQUEST = exports.SITE_DOMAINS_REQUEST = 'SITE_DOMAINS_REQUEST';
	var SITE_DOMAINS_REQUEST_SUCCESS = exports.SITE_DOMAINS_REQUEST_SUCCESS = 'SITE_DOMAINS_REQUEST_SUCCESS';
	var SITE_DOMAINS_REQUEST_FAILURE = exports.SITE_DOMAINS_REQUEST_FAILURE = 'SITE_DOMAINS_REQUEST_FAILURE';
	var SITE_MEDIA_STORAGE_RECEIVE = exports.SITE_MEDIA_STORAGE_RECEIVE = 'SITE_MEDIA_STORAGE_RECEIVE';
	var SITE_MEDIA_STORAGE_REQUEST = exports.SITE_MEDIA_STORAGE_REQUEST = 'SITE_MEDIA_STORAGE_REQUEST';
	var SITE_MEDIA_STORAGE_REQUEST_SUCCESS = exports.SITE_MEDIA_STORAGE_REQUEST_SUCCESS = 'SITE_MEDIA_STORAGE_REQUEST_SUCCESS';
	var SITE_MEDIA_STORAGE_REQUEST_FAILURE = exports.SITE_MEDIA_STORAGE_REQUEST_FAILURE = 'SITE_MEDIA_STORAGE_REQUEST_FAILURE';
	var SITE_PLANS_FETCH = exports.SITE_PLANS_FETCH = 'SITE_PLANS_FETCH';
	var SITE_PLANS_FETCH_COMPLETED = exports.SITE_PLANS_FETCH_COMPLETED = 'SITE_PLANS_FETCH_COMPLETED';
	var SITE_PLANS_FETCH_FAILED = exports.SITE_PLANS_FETCH_FAILED = 'SITE_PLANS_FETCH_FAILED';
	var SITE_PLANS_REMOVE = exports.SITE_PLANS_REMOVE = 'SITE_PLANS_REMOVE';
	var SITE_PLANS_TRIAL_CANCEL = exports.SITE_PLANS_TRIAL_CANCEL = 'SITE_PLANS_TRIAL_CANCEL';
	var SITE_PLANS_TRIAL_CANCEL_COMPLETED = exports.SITE_PLANS_TRIAL_CANCEL_COMPLETED = 'SITE_PLANS_TRIAL_CANCEL_COMPLETED';
	var SITE_PLANS_TRIAL_CANCEL_FAILED = exports.SITE_PLANS_TRIAL_CANCEL_FAILED = 'SITE_PLANS_TRIAL_CANCEL_FAILED';
	var SITE_RECEIVE = exports.SITE_RECEIVE = 'SITE_RECEIVE';
	var SITE_STATS_RECEIVE = exports.SITE_STATS_RECEIVE = 'SITE_STATS_RECEIVE';
	var SITE_STATS_REQUEST = exports.SITE_STATS_REQUEST = 'SITE_STATS_REQUEST';
	var SITE_STATS_REQUEST_FAILURE = exports.SITE_STATS_REQUEST_FAILURE = 'SITE_STATS_REQUEST_FAILURE';
	var SITE_STATS_REQUEST_SUCCESS = exports.SITE_STATS_REQUEST_SUCCESS = 'SITE_STATS_REQUEST_SUCCESS';
	var SITE_VOUCHERS_ASSIGN_RECEIVE = exports.SITE_VOUCHERS_ASSIGN_RECEIVE = 'SITE_VOUCHERS_ASSIGN_RECEIVE';
	var SITE_VOUCHERS_ASSIGN_REQUEST = exports.SITE_VOUCHERS_ASSIGN_REQUEST = 'SITE_VOUCHERS_ASSIGN_REQUEST';
	var SITE_VOUCHERS_ASSIGN_REQUEST_SUCCESS = exports.SITE_VOUCHERS_ASSIGN_REQUEST_SUCCESS = 'SITE_VOUCHERS_ASSIGN_REQUEST_SUCCESS';
	var SITE_VOUCHERS_ASSIGN_REQUEST_FAILURE = exports.SITE_VOUCHERS_ASSIGN_REQUEST_FAILURE = 'SITE_VOUCHERS_ASSIGN_REQUEST_FAILURE';
	var SITE_VOUCHERS_RECEIVE = exports.SITE_VOUCHERS_RECEIVE = 'SITE_VOUCHERS_RECEIVE';
	var SITE_VOUCHERS_REQUEST = exports.SITE_VOUCHERS_REQUEST = 'SITE_VOUCHERS_REQUEST';
	var SITE_VOUCHERS_REQUEST_SUCCESS = exports.SITE_VOUCHERS_REQUEST_SUCCESS = 'SITE_VOUCHERS_REQUEST_SUCCESS';
	var SITE_VOUCHERS_REQUEST_FAILURE = exports.SITE_VOUCHERS_REQUEST_FAILURE = 'SITE_VOUCHERS_REQUEST_FAILURE';
	var SITES_RECEIVE = exports.SITES_RECEIVE = 'SITES_RECEIVE';
	var SITES_REQUEST = exports.SITES_REQUEST = 'SITES_REQUEST';
	var SITES_REQUEST_FAILURE = exports.SITES_REQUEST_FAILURE = 'SITES_REQUEST_FAILURE';
	var SITES_REQUEST_SUCCESS = exports.SITES_REQUEST_SUCCESS = 'SITES_REQUEST_SUCCESS';
	var SUPPORT_USER_ACTIVATE = exports.SUPPORT_USER_ACTIVATE = 'SUPPORT_USER_ACTIVATE';
	var SUPPORT_USER_ERROR = exports.SUPPORT_USER_ERROR = 'SUPPORT_USER_ERROR';
	var SUPPORT_USER_TOGGLE_DIALOG = exports.SUPPORT_USER_TOGGLE_DIALOG = 'SUPPORT_USER_TOGGLE_DIALOG';
	var SUPPORT_USER_TOKEN_FETCH = exports.SUPPORT_USER_TOKEN_FETCH = 'SUPPORT_USER_TOKEN_FETCH';
	var TERMS_RECEIVE = exports.TERMS_RECEIVE = 'TERMS_RECEIVE';
	var TERMS_REQUEST = exports.TERMS_REQUEST = 'TERMS_REQUEST';
	var TERMS_REQUEST_FAILURE = exports.TERMS_REQUEST_FAILURE = 'TERMS_REQUEST_FAILURE';
	var TERMS_REQUEST_SUCCESS = exports.TERMS_REQUEST_SUCCESS = 'TERMS_REQUEST_SUCCESS';
	var THEME_ACTIVATE = exports.THEME_ACTIVATE = 'THEME_ACTIVATE';
	var THEME_ACTIVATED = exports.THEME_ACTIVATED = 'THEME_ACTIVATED';
	var THEME_BACK_PATH_SET = exports.THEME_BACK_PATH_SET = 'THEME_BACK_PATH_SET';
	var THEME_CLEAR_ACTIVATED = exports.THEME_CLEAR_ACTIVATED = 'THEME_CLEAR_ACTIVATED';
	var THEME_CUSTOMIZE = exports.THEME_CUSTOMIZE = 'THEME_CUSTOMIZE';
	var THEME_DETAILS_RECEIVE = exports.THEME_DETAILS_RECEIVE = 'THEME_DETAILS_RECEIVE';
	var THEME_DETAILS_RECEIVE_FAILURE = exports.THEME_DETAILS_RECEIVE_FAILURE = 'THEME_DETAILS_RECEIVE_FAILURE';
	var THEME_PURCHASE = exports.THEME_PURCHASE = 'THEME_PURCHASE';
	var THEME_RECEIVE_CURRENT = exports.THEME_RECEIVE_CURRENT = 'THEMES_RECEIVE_CURRENT';
	var THEME_REQUEST_CURRENT = exports.THEME_REQUEST_CURRENT = 'THEME_REQUEST_CURRENT';
	var THEME_REQUEST_CURRENT_FAILURE = exports.THEME_REQUEST_CURRENT_FAILURE = 'THEME_REQUEST_CURRENT_FAILURE';
	var THEME_SIGNUP_WITH = exports.THEME_SIGNUP_WITH = 'THEME_SIGNUP_WITH';
	var THEMES_INCREMENT_PAGE = exports.THEMES_INCREMENT_PAGE = 'THEMES_INCREMENT_PAGE';
	var THEMES_QUERY = exports.THEMES_QUERY = 'THEMES_QUERY';
	var THEMES_RECEIVE = exports.THEMES_RECEIVE = 'THEMES_RECEIVE';
	var THEMES_RECEIVE_SERVER_ERROR = exports.THEMES_RECEIVE_SERVER_ERROR = 'THEMES_RECEIVE_SERVER_ERROR';
	var COMPONENTS_USAGE_STATS_REQUEST = exports.COMPONENTS_USAGE_STATS_REQUEST = 'COMPONENTS_USAGE_STATS_REQUEST';
	var COMPONENTS_USAGE_STATS_RECEIVE = exports.COMPONENTS_USAGE_STATS_RECEIVE = 'COMPONENTS_USAGE_STATS_RECEIVE';
	var USER_RECEIVE = exports.USER_RECEIVE = 'USER_RECEIVE';
	var WPORG_PLUGIN_DATA_RECEIVE = exports.WPORG_PLUGIN_DATA_RECEIVE = 'WPORG_PLUGIN_DATA_RECEIVE';
	var WORDADS_SITE_APPROVE_REQUEST = exports.WORDADS_SITE_APPROVE_REQUEST = 'WORDADS_SITE_APPROVE_REQUEST';
	var WORDADS_SITE_APPROVE_REQUEST_SUCCESS = exports.WORDADS_SITE_APPROVE_REQUEST_SUCCESS = 'WORDADS_SITE_APPROVE_REQUEST_SUCCESS';
	var WORDADS_SITE_APPROVE_REQUEST_DISMISS_SUCCESS = exports.WORDADS_SITE_APPROVE_REQUEST_DISMISS_SUCCESS = 'WORDADS_SITE_APPROVE_REQUEST_DISMISS_SUCCESS';
	var WORDADS_SITE_APPROVE_REQUEST_FAILURE = exports.WORDADS_SITE_APPROVE_REQUEST_FAILURE = 'WORDADS_SITE_APPROVE_REQUEST_FAILURE';
	var WORDADS_SITE_APPROVE_REQUEST_DISMISS_ERROR = exports.WORDADS_SITE_APPROVE_REQUEST_DISMISS_ERROR = 'WORDADS_SITE_APPROVE_REQUEST_DISMISS_ERROR';

/***/ },
/* 175 */
/***/ function(module, exports) {

	/**
	 * A no-operation function that returns `undefined` regardless of the
	 * arguments it receives.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.noop(object) === undefined;
	 * // => true
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ },
/* 176 */
/***/ function(module, exports) {

	module.exports = require("page");

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactRedux = __webpack_require__(172);
	
	var _loggedOut = __webpack_require__(183);
	
	var _loggedOut2 = _interopRequireDefault(_loggedOut);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	var LayoutLoggedOut = function LayoutLoggedOut(_ref) {
		var _classNames;
	
		var primary = _ref.primary;
		var secondary = _ref.secondary;
		var tertiary = _ref.tertiary;
		var section = _ref.section;
	
		var classes = (0, _classnames2.default)('wp layout', (_classNames = {}, (0, _defineProperty3.default)(_classNames, 'is-group-' + section.group, !!section), (0, _defineProperty3.default)(_classNames, 'is-section-' + section.name, !!section), (0, _defineProperty3.default)(_classNames, 'focus-content', true), (0, _defineProperty3.default)(_classNames, 'has-no-sidebar', true), (0, _defineProperty3.default)(_classNames, 'wp-singletree-layout', !!primary), _classNames));
	
		return _react2.default.createElement(
			'div',
			{ className: classes },
			_react2.default.createElement(_loggedOut2.default, { title: section.title }),
			_react2.default.createElement(
				'div',
				{ id: 'content', className: 'wp-content' },
				_react2.default.createElement(
					'div',
					{ id: 'primary', className: 'wp-primary wp-section' },
					primary
				),
				_react2.default.createElement(
					'div',
					{ id: 'secondary', className: 'wp-secondary' },
					secondary
				)
			),
			_react2.default.createElement(
				'div',
				{ id: 'tertiary', className: 'wp-overlay fade-background' },
				tertiary
			)
		);
	};
	
	/**
	 * Internal dependencies
	 */
	
	
	LayoutLoggedOut.displayName = 'LayoutLoggedOut';
	LayoutLoggedOut.propTypes = {
		primary: _react2.default.PropTypes.element,
		secondary: _react2.default.PropTypes.element,
		tertiary: _react2.default.PropTypes.element,
		section: _react2.default.PropTypes.object
	};
	
	exports.default = (0, _reactRedux.connect)(function (state) {
		return {
			section: state.ui.section
		};
	})(LayoutLoggedOut);
	module.exports = exports['default'];

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(179);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(180), __esModule: true };

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(181);
	var $Object = __webpack_require__(47).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(45);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(55), 'Object', {defineProperty: __webpack_require__(51).f});

/***/ },
/* 182 */
/***/ function(module, exports) {

	module.exports = require("classnames");

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _masterbar = __webpack_require__(184);
	
	var _masterbar2 = _interopRequireDefault(_masterbar);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _item = __webpack_require__(186);
	
	var _item2 = _interopRequireDefault(_item);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var MasterbarLoggedOut = function MasterbarLoggedOut(_ref) {
		var title = _ref.title;
		var translate = _ref.translate;
		return _react2.default.createElement(
			_masterbar2.default,
			null,
			_react2.default.createElement(
				_item2.default,
				{ className: 'masterbar__item-logo' },
				_react2.default.createElement(
					'svg',
					{ className: 'masterbar__wpcom-logo', width: '270', height: '45', viewBox: '0 0 270 45', xmlns: 'http://www.w3.org/2000/svg' },
					_react2.default.createElement(
						'g',
						{ fill: '#FFF', 'fill-rule': 'evenodd' },
						_react2.default.createElement('path', { d: 'M32.61 39.912L38.78 22.08c1.153-2.88 1.536-5.184 1.536-7.232 0-.744-.05-1.434-.136-2.077 1.576 2.877 2.473 6.178 2.473 9.69 0 7.448-4.036 13.952-10.04 17.452zm-7.368-26.92c1.216-.065 2.31-.193 2.31-.193 1.09-.13.96-1.728-.128-1.665 0 0-3.27.257-5.382.257-1.984 0-5.318-.257-5.318-.257-1.09-.063-1.217 1.6-.128 1.664 0 0 1.03.127 2.118.19l3.145 8.62-4.42 13.254-7.353-21.873c1.217-.063 2.31-.19 2.31-.19 1.09-.13.96-1.728-.128-1.665 0 0-3.27.257-5.383.257-.378 0-.825-.01-1.3-.025 3.61-5.48 9.817-9.1 16.872-9.1 5.256 0 10.042 2.01 13.635 5.3-.087-.005-.172-.016-.262-.016-1.983 0-3.39 1.73-3.39 3.585 0 1.664.96 3.072 1.983 4.736.768 1.346 1.665 3.074 1.665 5.57 0 1.73-.512 3.903-1.536 6.528l-2.014 6.73-7.298-21.707zM22.46 42.653c-1.983 0-3.896-.292-5.705-.823l6.06-17.605L29.02 41.23c.04.1.09.19.145.278-2.1.74-4.354 1.146-6.706 1.146zM2.266 22.46c0-2.93.628-5.708 1.748-8.22l9.632 26.392C6.91 37.36 2.267 30.452 2.267 22.46zM22.46 0C10.074 0 0 10.075 0 22.46c0 12.384 10.075 22.46 22.46 22.46 12.383 0 22.458-10.076 22.458-22.46C44.918 10.074 34.843 0 22.458 0zM72.754 33.694h-2.582l-4.535-15.05c-.215-.665-.456-1.506-.722-2.52-.267-1.015-.405-1.625-.415-1.83-.226 1.353-.585 2.834-1.076 4.443l-4.397 14.957h-2.582l-5.98-22.474h2.767l3.55 13.88c.492 1.948.85 3.71 1.077 5.29.276-1.877.685-3.71 1.228-5.505l4.028-13.665h2.767l4.227 13.788c.492 1.59.907 3.382 1.245 5.38.195-1.454.564-3.227 1.107-5.318l3.536-13.85h2.767l-6.01 22.474zM81.875 25.255c0 2.15.43 3.79 1.292 4.92.86 1.126 2.126 1.69 3.797 1.69 1.67 0 2.938-.562 3.804-1.684.866-1.12 1.3-2.763 1.3-4.925 0-2.142-.434-3.77-1.3-4.88-.866-1.113-2.144-1.67-3.835-1.67-1.67 0-2.93.55-3.782 1.646-.85 1.097-1.275 2.732-1.275 4.905m12.836 0c0 2.746-.69 4.89-2.074 6.433C91.252 33.23 89.34 34 86.902 34c-1.507 0-2.844-.353-4.012-1.06-1.168-.707-2.07-1.72-2.705-3.043-.636-1.322-.953-2.87-.953-4.642 0-2.747.686-4.886 2.06-6.42 1.372-1.53 3.278-2.296 5.718-2.296 2.356 0 4.23.782 5.618 2.35 1.39 1.568 2.083 3.69 2.083 6.365M105.768 16.54c.748 0 1.42.06 2.014.183l-.354 2.367c-.697-.153-1.312-.23-1.844-.23-1.364 0-2.53.553-3.498 1.66-.968 1.107-1.452 2.485-1.452 4.135v9.04h-2.552v-16.85h2.106l.292 3.12h.123c.625-1.095 1.378-1.94 2.26-2.535.88-.594 1.85-.89 2.905-.89M116.51 31.864c1.742 0 3.005-.474 3.79-1.422.783-.947 1.175-2.477 1.175-4.588v-.538c0-2.388-.397-4.092-1.19-5.11-.795-1.02-2.064-1.53-3.806-1.53-1.497 0-2.643.58-3.436 1.744-.795 1.163-1.192 2.805-1.192 4.927 0 2.152.395 3.776 1.184 4.872.79 1.096 1.947 1.644 3.474 1.644zm5.104-.43h-.14c-1.177 1.71-2.94 2.567-5.287 2.567-2.204 0-3.917-.752-5.14-2.26-1.226-1.505-1.84-3.647-1.84-6.424 0-2.777.616-4.934 1.846-6.472 1.23-1.537 2.94-2.305 5.134-2.305 2.285 0 4.038.828 5.257 2.49h.2l-.107-1.216-.062-1.183V9.776h2.552v23.92h-2.075l-.338-2.26zM131.49 22.61h2.353c2.316 0 3.99-.374 5.026-1.122 1.034-.748 1.552-1.947 1.552-3.597 0-1.485-.487-2.59-1.46-3.32-.974-.727-2.49-1.09-4.55-1.09h-2.92v9.13zm11.637-4.842c0 2.275-.776 4.025-2.328 5.25-1.554 1.225-3.775 1.837-6.666 1.837h-2.643v8.84h-2.612V11.22h5.826c5.615 0 8.423 2.183 8.423 6.548zM154.03 16.54c.75 0 1.42.06 2.015.183l-.353 2.367c-.698-.153-1.312-.23-1.845-.23-1.363 0-2.53.553-3.498 1.66-.97 1.107-1.453 2.485-1.453 4.135v9.04h-2.552v-16.85h2.106l.293 3.12h.123c.625-1.095 1.38-1.94 2.26-2.535.88-.594 1.85-.89 2.905-.89M164.677 18.675c-1.352 0-2.43.44-3.236 1.322-.803.882-1.277 2.1-1.42 3.66h8.808c0-1.61-.36-2.842-1.077-3.698-.716-.857-1.74-1.285-3.073-1.285M165.37 34c-2.49 0-4.456-.757-5.896-2.274-1.44-1.517-2.16-3.623-2.16-6.318 0-2.716.67-4.873 2.006-6.472 1.338-1.598 3.133-2.398 5.388-2.398 2.11 0 3.78.695 5.01 2.083 1.23 1.39 1.846 3.222 1.846 5.497v1.614h-11.606c.05 1.98.55 3.48 1.5 4.505.947 1.025 2.282 1.537 4.003 1.537 1.815 0 3.608-.38 5.38-1.137v2.275c-.9.39-1.754.668-2.558.837-.805.17-1.776.254-2.913.254M186.467 29.097c0 1.568-.584 2.778-1.752 3.628-1.17.85-2.808 1.276-4.92 1.276-2.234 0-3.975-.353-5.226-1.06v-2.367c.81.41 1.677.733 2.605.97.928.234 1.82.352 2.683.352 1.33 0 2.356-.212 3.074-.638.717-.425 1.076-1.073 1.076-1.945 0-.655-.285-1.216-.854-1.683-.568-.467-1.678-1.018-3.328-1.653-1.567-.584-2.682-1.094-3.343-1.53-.66-.435-1.153-.93-1.476-1.483-.322-.553-.484-1.214-.484-1.983 0-1.372.56-2.456 1.676-3.25 1.115-.794 2.648-1.19 4.595-1.19 1.814 0 3.587.367 5.32 1.105l-.908 2.075c-1.69-.696-3.223-1.045-4.596-1.045-1.21 0-2.12.19-2.736.57-.615.378-.922.9-.922 1.567 0 .45.115.835.346 1.153.23.318.602.62 1.114.907.512.287 1.496.702 2.952 1.245 1.998.727 3.348 1.46 4.05 2.198s1.053 1.665 1.053 2.782M201.17 29.097c0 1.568-.583 2.778-1.752 3.628-1.168.85-2.808 1.276-4.92 1.276-2.233 0-3.975-.353-5.225-1.06v-2.367c.81.41 1.678.733 2.605.97.928.234 1.822.352 2.683.352 1.333 0 2.358-.212 3.075-.638.717-.425 1.076-1.073 1.076-1.945 0-.655-.283-1.216-.852-1.683-.57-.467-1.678-1.018-3.328-1.653-1.568-.584-2.683-1.094-3.343-1.53-.66-.435-1.154-.93-1.476-1.483-.322-.553-.483-1.214-.483-1.983 0-1.372.558-2.456 1.675-3.25s2.65-1.19 4.596-1.19c1.814 0 3.587.367 5.32 1.105l-.908 2.075c-1.69-.696-3.223-1.045-4.596-1.045-1.21 0-2.12.19-2.736.57-.615.378-.923.9-.923 1.567 0 .45.116.835.346 1.153.232.318.603.62 1.116.907.512.287 1.496.702 2.95 1.245 2 .727 3.35 1.46 4.052 2.198.702.738 1.053 1.665 1.053 2.782M205.267 32.064c0-.686.156-1.206.47-1.56.31-.354.76-.53 1.344-.53.595 0 1.06.176 1.392.53.333.354.5.874.5 1.56 0 .667-.17 1.18-.507 1.537-.34.36-.8.54-1.384.54-.522 0-.955-.162-1.298-.485-.343-.323-.515-.853-.515-1.59M219.897 34c-2.44 0-4.328-.75-5.665-2.25-1.337-1.502-2.006-3.626-2.006-6.373 0-2.818.68-4.996 2.037-6.533 1.358-1.537 3.292-2.305 5.803-2.305.81 0 1.62.086 2.428.26.81.174 1.445.38 1.907.615l-.783 2.167c-.564-.225-1.18-.412-1.845-.56-.666-.15-1.255-.224-1.768-.224-3.423 0-5.134 2.183-5.134 6.55 0 2.07.417 3.657 1.252 4.764.836 1.107 2.073 1.66 3.713 1.66 1.404 0 2.844-.302 4.32-.907v2.26c-1.128.584-2.547.876-4.258.876M229.385 25.255c0 2.15.43 3.79 1.292 4.92.86 1.126 2.126 1.69 3.797 1.69 1.67 0 2.938-.562 3.804-1.684.866-1.12 1.3-2.763 1.3-4.925 0-2.142-.434-3.77-1.3-4.88-.866-1.113-2.144-1.67-3.835-1.67-1.67 0-2.93.55-3.782 1.646-.85 1.097-1.275 2.732-1.275 4.905m12.836 0c0 2.746-.69 4.89-2.074 6.433C238.763 33.23 236.85 34 234.412 34c-1.506 0-2.844-.353-4.012-1.06-1.168-.707-2.07-1.72-2.705-3.043-.636-1.322-.953-2.87-.953-4.642 0-2.747.686-4.886 2.06-6.42 1.373-1.53 3.278-2.296 5.718-2.296 2.357 0 4.23.782 5.618 2.35 1.39 1.568 2.083 3.69 2.083 6.365M266.91 33.694v-10.96c0-1.343-.288-2.35-.86-3.02-.576-.672-1.467-1.008-2.676-1.008-1.59 0-2.762.456-3.52 1.368-.76.912-1.138 2.316-1.138 4.212v9.408h-2.55v-10.96c0-1.343-.29-2.35-.863-3.02-.573-.672-1.47-1.008-2.69-1.008-1.598 0-2.77.48-3.512 1.437-.742.958-1.113 2.53-1.113 4.712v8.84h-2.552v-16.85h2.075l.415 2.307h.123c.482-.82 1.16-1.46 2.037-1.922.876-.46 1.857-.69 2.944-.69 2.632 0 4.354.952 5.163 2.858h.123c.502-.882 1.23-1.578 2.183-2.09.952-.513 2.04-.77 3.258-.77 1.906 0 3.333.49 4.28 1.47.95.977 1.423 2.543 1.423 4.695v10.99h-2.55z' })
					)
				)
			),
			_react2.default.createElement(
				_item2.default,
				{ className: 'masterbar__item-title' },
				title
			),
			_react2.default.createElement(
				'div',
				{ className: 'masterbar__login-links' },
				_react2.default.createElement(
					_item2.default,
					{ url: (0, _config2.default)('signup_url') },
					translate('Sign Up', {
						context: 'Toolbar',
						comment: 'Should be shorter than ~12 chars'
					})
				),
				_react2.default.createElement(
					_item2.default,
					{ url: (0, _config2.default)('login_url') },
					translate('Log In', {
						context: 'Toolbar',
						comment: 'Should be shorter than ~12 chars'
					})
				)
			)
		);
	}; /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	MasterbarLoggedOut.propTypes = {
		title: _react2.default.PropTypes.string
	};
	
	MasterbarLoggedOut.defaultProps = {
		title: ''
	};
	
	exports.default = (0, _i18nCalypso.localize)(MasterbarLoggedOut);
	module.exports = exports['default'];

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Masterbar = function Masterbar(_ref) {
		var children = _ref.children;
		return _react2.default.createElement(
			"header",
			{ id: "header", className: "masterbar" },
			children
		);
	}; /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	Masterbar.displayName = 'Masterbar';
	
	Masterbar.propTypes = {
		children: _react2.default.PropTypes.node.isRequired
	};
	
	exports.default = Masterbar;
	module.exports = exports["default"];

/***/ },
/* 185 */
/***/ function(module, exports) {

	module.exports = require("i18n-calypso");

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _noop = __webpack_require__(175);
	
	var _noop2 = _interopRequireDefault(_noop);
	
	var _isFunction = __webpack_require__(20);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _react2.default.createClass({
		displayName: 'MasterbarItem',
	
		propTypes: {
			url: _react2.default.PropTypes.string,
			onClick: _react2.default.PropTypes.func,
			tooltip: _react2.default.PropTypes.string,
			icon: _react2.default.PropTypes.string,
			className: _react2.default.PropTypes.string,
			isActive: _react2.default.PropTypes.bool,
			preloadSection: _react2.default.PropTypes.func
		},
	
		_preloaded: false,
	
		getDefaultProps: function getDefaultProps() {
			return {
				icon: '',
				onClick: _noop2.default
			};
		},
		preload: function preload() {
			if (!this._preloaded && (0, _isFunction2.default)(this.props.preloadSection)) {
				this._preloaded = true;
				this.props.preloadSection();
			}
		},
		render: function render() {
			var itemClasses = (0, _classnames2.default)('masterbar__item', this.props.className, {
				'is-active': this.props.isActive
			});
	
			return _react2.default.createElement(
				'a',
				{
					'data-tip-target': this.props.tipTarget,
					href: this.props.url,
					onClick: this.props.onClick,
					title: this.props.tooltip,
					className: itemClasses,
					onTouchStart: this.preload,
					onMouseEnter: this.preload },
				!!this.props.icon && _react2.default.createElement(_gridicon2.default, { icon: this.props.icon, size: 24 }),
				_react2.default.createElement(
					'span',
					{ className: 'masterbar__item-content' },
					this.props.children
				)
			);
		}
	});
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/

	/**
	 * External dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/* !!!
	IF YOU ARE EDITING gridicon/index.jsx
	THEN YOU ARE EDITING A FILE THAT GETS OUTPUT FROM THE GRIDICONS REPO!
	DO NOT EDIT THAT FILE! EDIT index-header.jsx and index-footer.jsx instead
	OR if you're looking to change now SVGs get output, you'll need to edit strings in the Gruntfile :)
	!!! */
	
	/**
	 * External dependencies
	 */
	var React = __webpack_require__(170),
	    PureRenderMixin = __webpack_require__(188),
	    classNames = __webpack_require__(182);
	
	var Gridicon = React.createClass({
		displayName: 'Gridicon',
	
	
		mixins: [PureRenderMixin],
	
		getDefaultProps: function getDefaultProps() {
			return {
				className: '',
				size: 24
			};
		},
	
		propTypes: {
			icon: React.PropTypes.string.isRequired,
			size: React.PropTypes.number,
			onClick: React.PropTypes.func,
			className: React.PropTypes.string
		},
	
		needsOffset: function needsOffset(icon, size) {
			var iconNeedsOffset = ['gridicons-add-outline', 'gridicons-add', 'gridicons-align-image-center', 'gridicons-align-image-left', 'gridicons-align-image-none', 'gridicons-align-image-right', 'gridicons-attachment', 'gridicons-backspace', 'gridicons-bold', 'gridicons-bookmark-outline', 'gridicons-bookmark', 'gridicons-calendar', 'gridicons-cart', 'gridicons-create', 'gridicons-custom-post-type', 'gridicons-external', 'gridicons-folder', 'gridicons-heading', 'gridicons-help-outline', 'gridicons-help', 'gridicons-history', 'gridicons-info-outline', 'gridicons-info', 'gridicons-italic', 'gridicons-layout-blocks', 'gridicons-link-break', 'gridicons-link', 'gridicons-list-checkmark', 'gridicons-list-ordered', 'gridicons-list-unordered', 'gridicons-menus', 'gridicons-minus', 'gridicons-my-sites', 'gridicons-notice-outline', 'gridicons-notice', 'gridicons-plus-small', 'gridicons-plus', 'gridicons-popout', 'gridicons-posts', 'gridicons-scheduled', 'gridicons-share-ios', 'gridicons-star-outline', 'gridicons-star', 'gridicons-stats', 'gridicons-status', 'gridicons-thumbs-up', 'gridicons-textcolor', 'gridicons-time', 'gridicons-trophy', 'gridicons-user-circle'];
	
			if (iconNeedsOffset.indexOf(icon) >= 0) {
				return size % 18 === 0;
			} else {
				return false;
			}
		},
	
		needsOffsetX: function needsOffsetX(icon, size) {
			var iconNeedsOffsetX = ['gridicons-arrow-down', 'gridicons-arrow-up', 'gridicons-comment', 'gridicons-clear-formatting', 'gridicons-flag', 'gridicons-menu', 'gridicons-reader', 'gridicons-reader-follow', 'gridicons-reader-following', 'gridicons-strikethrough'];
	
			if (iconNeedsOffsetX.indexOf(icon) >= 0) {
				return size % 18 === 0;
			} else {
				return false;
			}
		},
	
		needsOffsetY: function needsOffsetY(icon, size) {
			var iconNeedsOffsetY = ['gridicons-align-center', 'gridicons-align-justify', 'gridicons-align-left', 'gridicons-align-right', 'gridicons-arrow-left', 'gridicons-arrow-right', 'gridicons-house', 'gridicons-indent-left', 'gridicons-indent-right', 'gridicons-minus-small', 'gridicons-print', 'gridicons-sign-out', 'gridicons-stats-alt', 'gridicons-trash', 'gridicons-underline', 'gridicons-video-camera'];
	
			if (iconNeedsOffsetY.indexOf(icon) >= 0) {
				return size % 18 === 0;
			} else {
				return false;
			}
		},
	
		render: function render() {
			var icon = 'gridicons-' + this.props.icon,
			    needsOffset = this.needsOffset(icon, this.props.size),
			    needsOffsetX = this.needsOffsetX(icon, this.props.size),
			    needsOffsetY = this.needsOffsetY(icon, this.props.size),
			    svg,
			    iconClass;
	
			iconClass = classNames('gridicon', icon, this.props.className, {
				'needs-offset': needsOffset,
				'needs-offset-x': needsOffsetX,
				'needs-offset-y': needsOffsetY
			});
	
			switch (icon) {
				default:
					svg = React.createElement('svg', { height: this.props.size, width: this.props.size });
					break;
				case 'gridicons-add-image':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M23 4v2h-3v3h-2V6h-3V4h3V1h2v3h3zm-8.5 7c.828 0 1.5-.672 1.5-1.5S15.328 8 14.5 8 13 8.672 13 9.5s.672 1.5 1.5 1.5zm3.5 3.234l-.513-.57c-.794-.885-2.18-.885-2.976 0l-.655.73L9 9l-3 3.333V6h7V4H6c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h12c1.105 0 2-.895 2-2v-7h-2v3.234z' })
						)
					);
					break;
				case 'gridicons-add-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm5 9h-4V7h-2v4H7v2h4v4h2v-4h4v-2z' })
						)
					);
					break;
				case 'gridicons-add':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z' })
						)
					);
					break;
				case 'gridicons-align-center':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 19h16v-2H4v2zm13-6H7v2h10v-2zM4 9v2h16V9H4zm13-4H7v2h10V5z' })
						)
					);
					break;
				case 'gridicons-align-image-center':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M3 5h18v2H3V5zm0 14h18v-2H3v2zm5-4h8V9H8v6z' })
						)
					);
					break;
				case 'gridicons-align-image-left':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M3 5h18v2H3V5zm0 14h18v-2H3v2zm0-4h8V9H3v6zm10 0h8v-2h-8v2zm0-4h8V9h-8v2z' })
						)
					);
					break;
				case 'gridicons-align-image-none':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 7H3V5h18v2zm0 10H3v2h18v-2zM11 9H3v6h8V9z' })
						)
					);
					break;
				case 'gridicons-align-image-right':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 7H3V5h18v2zm0 10H3v2h18v-2zm0-8h-8v6h8V9zm-10 4H3v2h8v-2zm0-4H3v2h8V9z' })
						)
					);
					break;
				case 'gridicons-align-justify':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 19h16v-2H4v2zm16-6H4v2h16v-2zM4 9v2h16V9H4zm16-4H4v2h16V5z' })
						)
					);
					break;
				case 'gridicons-align-left':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 19h16v-2H4v2zm10-6H4v2h10v-2zM4 9v2h16V9H4zm10-4H4v2h10V5z' })
						)
					);
					break;
				case 'gridicons-align-right':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 17H4v2h16v-2zm-10-2h10v-2H10v2zM4 9v2h16V9H4zm6-2h10V5H10v2z' })
						)
					);
					break;
				case 'gridicons-arrow-down':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M11 4v12.17l-5.59-5.59L4 12l8 8 8-8-1.41-1.41L13 16.17V4h-2z' })
						)
					);
					break;
				case 'gridicons-arrow-left':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z' })
						)
					);
					break;
				case 'gridicons-arrow-right':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z' })
						)
					);
					break;
				case 'gridicons-arrow-up':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M13 20V7.83l5.59 5.59L20 12l-8-8-8 8 1.41 1.41L11 7.83V20h2z' })
						)
					);
					break;
				case 'gridicons-aside':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M14 20l6-6V6c0-1.105-.895-2-2-2H6c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h8zM6 6h12v6h-4c-1.105 0-2 .895-2 2v4H6V6zm10 4H8V8h8v2z' })
						)
					);
					break;
				case 'gridicons-attachment':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M14 1c-2.762 0-5 2.238-5 5v10c0 1.657 1.343 3 3 3s2.99-1.343 2.99-3V6H13v10c0 .553-.447 1-1 1-.553 0-1-.447-1-1V6c0-1.657 1.343-3 3-3s3 1.343 3 3v10.125C17 18.887 14.762 21 12 21s-5-2.238-5-5v-5H5v5c0 3.866 3.134 7 7 7s6.99-3.134 6.99-7V6c0-2.762-2.228-5-4.99-5z' })
						)
					);
					break;
				case 'gridicons-audio':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M8 4v10.184C7.686 14.072 7.353 14 7 14c-1.657 0-3 1.343-3 3s1.343 3 3 3 3-1.343 3-3V7h7v4.184c-.314-.112-.647-.184-1-.184-1.657 0-3 1.343-3 3s1.343 3 3 3 3-1.343 3-3V4H8z' })
						)
					);
					break;
				case 'gridicons-backspace':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 7H8l-5 5 5 5h11c1.104 0 2-.896 2-2V9c0-1.104-.896-2-2-2zm-.647 6.646l-.707.707L16 12.707l-1.647 1.647-.707-.707L15.293 12l-1.647-1.646.707-.707L16 11.293l1.646-1.647.707.707L16.707 12l1.646 1.646z' })
						)
					);
					break;
				case 'gridicons-bell':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M6.14 14.97l2.828 2.827c-.362.362-.862.586-1.414.586-1.105 0-2-.895-2-2 0-.552.224-1.052.586-1.414zm8.867 5.324L14.3 21 3 9.7l.706-.707 1.102.157c.754.108 1.69-.122 2.077-.51l3.885-3.884c2.34-2.34 6.135-2.34 8.475 0s2.34 6.135 0 8.475l-3.885 3.886c-.388.388-.618 1.323-.51 2.077l.157 1.1z' })
						)
					);
					break;
				case 'gridicons-block':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM4 12c0-4.418 3.582-8 8-8 1.848 0 3.545.633 4.9 1.686L5.686 16.9C4.633 15.545 4 13.848 4 12zm8 8c-1.848 0-3.546-.633-4.9-1.686L18.314 7.1C19.367 8.455 20 10.152 20 12c0 4.418-3.582 8-8 8z' })
						)
					);
					break;
				case 'gridicons-bold':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M7 5.01h4.547c2.126 0 3.67.302 4.632.906.96.605 1.44 1.567 1.44 2.887 0 .896-.21 1.63-.63 2.205-.42.574-.98.92-1.678 1.036v.103c.95.212 1.637.608 2.057 1.19.42.58.63 1.35.63 2.315 0 1.367-.494 2.434-1.482 3.2-.99.765-2.332 1.148-4.027 1.148H7V5.01zm3 5.936h2.027c.862 0 1.486-.133 1.872-.4.386-.267.578-.708.578-1.323 0-.574-.21-.986-.63-1.236-.42-.25-1.087-.374-1.996-.374H10v3.333zm0 2.523v3.905h2.253c.876 0 1.52-.167 1.94-.502.416-.335.625-.848.625-1.54 0-1.243-.89-1.864-2.668-1.864H10z' })
						)
					);
					break;
				case 'gridicons-book':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 3h2v18H4zM18 3H7v18h11c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 6h-6V8h6v1zm0-2h-6V6h6v1z' })
						)
					);
					break;
				case 'gridicons-bookmark-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 5v12.554l-5-2.857-5 2.857V5h10m0-2H7c-1.105 0-2 .896-2 2v16l7-4 7 4V5c0-1.104-.896-2-2-2z' })
						)
					);
					break;
				case 'gridicons-bookmark':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 3H7c-1.105 0-2 .896-2 2v16l7-4 7 4V5c0-1.104-.896-2-2-2z' })
						)
					);
					break;
				case 'gridicons-briefcase':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 6h-4V3c0-.5-.5-1-1-1H8c-.5 0-1 .5-1 1v3H3c-.6 0-1 .4-1 1v5h20V7c0-.6-.4-1-1-1zm-6 0H9V4h6v2zM14 15h-4v-2H2v8c0 .6.4 1 1 1h18c.6 0 1-.4 1-1v-8h-8v2z' })
						)
					);
					break;
				case 'gridicons-calendar':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 4h-1V2h-2v2H8V2H6v2H5c-1.105 0-2 .896-2 2v13c0 1.104.895 2 2 2h14c1.104 0 2-.896 2-2V6c0-1.104-.896-2-2-2zm0 15H5V8h14v11z' })
						)
					);
					break;
				case 'gridicons-camera':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 12c0 1.7-1.3 3-3 3s-3-1.3-3-3 1.3-3 3-3 3 1.3 3 3zm5-5v11c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V7c0-1.1.9-2 2-2V4h4v1h2l1-2h6l1 2h2c1.1 0 2 .9 2 2zM7.5 9c0-.8-.7-1.5-1.5-1.5S4.5 8.2 4.5 9s.7 1.5 1.5 1.5S7.5 9.8 7.5 9zM19 12c0-2.8-2.2-5-5-5s-5 2.2-5 5 2.2 5 5 5 5-2.2 5-5z' })
						)
					);
					break;
				case 'gridicons-cart':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M9 20c0 1.1-.9 2-2 2s-1.99-.9-1.99-2S5.9 18 7 18s2 .9 2 2zm8-2c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm.396-5c.937 0 1.75-.65 1.952-1.566L21 5H7V4c0-1.105-.895-2-2-2H3v2h2v11c0 1.105.895 2 2 2h12c0-1.105-.895-2-2-2H7v-2h10.396z' })
						)
					);
					break;
				case 'gridicons-checkmark-circle':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M11 17.768l-4.884-4.884 1.768-1.768L11 14.232l8.658-8.658C17.823 3.39 15.075 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10c0-1.528-.353-2.97-.966-4.266L11 17.768z' })
						)
					);
					break;
				case 'gridicons-checkmark':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M9 19.414l-6.707-6.707 1.414-1.414L9 16.586 20.293 5.293l1.414 1.414' })
						)
					);
					break;
				case 'gridicons-chevron-down':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 9l-8 8-8-8 1.414-1.414L12 14.172l6.586-6.586' })
						)
					);
					break;
				case 'gridicons-chevron-left':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M14 20l-8-8 8-8 1.414 1.414L8.828 12l6.586 6.586' })
						)
					);
					break;
				case 'gridicons-chevron-right':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M10 20l8-8-8-8-1.414 1.414L15.172 12l-6.586 6.586' })
						)
					);
					break;
				case 'gridicons-chevron-up':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 15l8-8 8 8-1.414 1.414L12 9.828l-6.586 6.586' })
						)
					);
					break;
				case 'gridicons-clear-formatting':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M10.837 10.163l-4.6 4.6L10 4h4l.777 2.223-2.144 2.144-.627-2.092-1.17 3.888zm5.495.506L19.244 19H15.82l-1.05-3.5H11.5L5 22l-1.5-1.5 17-17L22 5l-5.668 5.67zm-2.31 2.31l-.032.03.032-.01v-.02z' })
						)
					);
					break;
				case 'gridicons-clipboard':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16 18H8v-2h8v2zm0-6H8v2h8v-2zm2-9h-2v2h2v15H6V5h2V3H6c-1.105 0-2 .895-2 2v15c0 1.105.895 2 2 2h12c1.105 0 2-.895 2-2V5c0-1.105-.895-2-2-2zm-4 2V4c0-1.105-.895-2-2-2s-2 .895-2 2v1c-1.105 0-2 .895-2 2v1h8V7c0-1.105-.895-2-2-2z' })
						)
					);
					break;
				case 'gridicons-cloud-download':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 9c-.01 0-.017.002-.025.003C17.72 5.646 14.922 3 11.5 3 7.91 3 5 5.91 5 9.5c0 .524.07 1.03.186 1.52C5.123 11.015 5.064 11 5 11c-2.21 0-4 1.79-4 4 0 1.202.54 2.267 1.38 3h18.593C22.196 17.09 23 15.643 23 14c0-2.76-2.24-5-5-5zm-6 7l-4-5h3V8h2v3h3l-4 5z' })
						)
					);
					break;
				case 'gridicons-cloud-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M11.5 5c2.336 0 4.304 1.825 4.48 4.154l.142 1.86 1.867-.012h.092C19.698 11.043 21 12.37 21 14c0 .748-.28 1.452-.783 2H3.28c-.156-.256-.28-.59-.28-1 0-1.074.85-1.953 1.915-1.998.06.007.118.012.178.015l2.66.124-.622-2.587C7.044 10.186 7 9.843 7 9.5 7 7.02 9.02 5 11.5 5m0-2C7.91 3 5 5.91 5 9.5c0 .524.07 1.03.186 1.52C5.123 11.015 5.064 11 5 11c-2.21 0-4 1.79-4 4 0 1.202.54 2.267 1.38 3h18.593C22.196 17.09 23 15.643 23 14c0-2.76-2.24-5-5-5l-.025.002C17.72 5.646 14.922 3 11.5 3z' })
						)
					);
					break;
				case 'gridicons-cloud-upload':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 9c-.01 0-.017.002-.025.003C17.72 5.646 14.922 3 11.5 3 7.91 3 5 5.91 5 9.5c0 .524.07 1.03.186 1.52C5.123 11.015 5.064 11 5 11c-2.21 0-4 1.79-4 4 0 1.202.54 2.267 1.38 3h18.593C22.196 17.09 23 15.643 23 14c0-2.76-2.24-5-5-5zm-5 4v3h-2v-3H8l4-5 4 5h-3z' })
						)
					);
					break;
				case 'gridicons-cloud':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 9c-.01 0-.017.002-.025.003C17.72 5.646 14.922 3 11.5 3 7.91 3 5 5.91 5 9.5c0 .524.07 1.03.186 1.52C5.123 11.015 5.064 11 5 11c-2.21 0-4 1.79-4 4 0 1.202.54 2.267 1.38 3h18.593C22.196 17.09 23 15.643 23 14c0-2.76-2.24-5-5-5z' })
						)
					);
					break;
				case 'gridicons-code':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4.83 12l4.58 4.59L8 18l-6-6 6-6 1.41 1.41L4.83 12zm9.76 4.59L16 18l6-6-6-6-1.41 1.41L19.17 12l-4.58 4.59z' })
						)
					);
					break;
				case 'gridicons-cog':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 12c0-.568-.06-1.122-.174-1.656l1.834-1.612-2-3.464-2.322.786c-.82-.736-1.787-1.308-2.86-1.657L14 2h-4l-.48 2.396c-1.07.35-2.04.92-2.858 1.657L4.34 5.268l-2 3.464 1.834 1.612C4.06 10.878 4 11.432 4 12s.06 1.122.174 1.656L2.34 15.268l2 3.464 2.322-.786c.82.736 1.787 1.308 2.86 1.657L10 22h4l.48-2.396c1.07-.35 2.038-.92 2.858-1.657l2.322.786 2-3.464-1.834-1.613c.113-.535.174-1.09.174-1.657zm-8 4c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z' })
						)
					);
					break;
				case 'gridicons-comment':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M3 6v9c0 1.105.895 2 2 2h9v5l5.325-3.804c1.05-.75 1.675-1.963 1.675-3.254V6c0-1.105-.895-2-2-2H5c-1.105 0-2 .895-2 2z' })
						)
					);
					break;
				case 'gridicons-computer':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 2H4c-1.104 0-2 .896-2 2v12c0 1.104.896 2 2 2h6v2H7v2h10v-2h-3v-2h6c1.104 0 2-.896 2-2V4c0-1.104-.896-2-2-2zm0 14H4V4h16v12z' })
						)
					);
					break;
				case 'gridicons-create':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 11v8c0 1.105-.895 2-2 2H5c-1.105 0-2-.895-2-2V5c0-1.105.895-2 2-2h8l-2 2H5v14h14v-6l2-2zM7 17h3l7.5-7.5-3-3L7 14v3zm9.94-12.94L15.5 5.5l3 3 1.44-1.44c.585-.585.585-1.535 0-2.12l-.88-.88c-.585-.585-1.535-.585-2.12 0z' })
						)
					);
					break;
				case 'gridicons-credit-card':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 4H4c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h16c1.105 0 2-.895 2-2V6c0-1.105-.895-2-2-2zm0 2v2H4V6h16zM4 18v-6h16v6H4zm2-4h7v2H6v-2zm9 0h3v2h-3v-2z' })
						)
					);
					break;
				case 'gridicons-crop':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M22 16h-4V8c0-1.105-.895-2-2-2H8V2H6v4H2v2h4v8c0 1.105.895 2 2 2h8v4h2v-4h4v-2zM8 16V8h8v8H8z' })
						)
					);
					break;
				case 'gridicons-cross-small':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17.705 7.705l-1.41-1.41L12 10.59 7.705 6.295l-1.41 1.41L10.59 12l-4.295 4.295 1.41 1.41L12 13.41l4.295 4.295 1.41-1.41L13.41 12l4.295-4.295z' })
						)
					);
					break;
				case 'gridicons-cross':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z' })
						)
					);
					break;
				case 'gridicons-custom-post-type':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 3H5c-1.105 0-2 .895-2 2v14c0 1.105.895 2 2 2h14c1.105 0 2-.895 2-2V5c0-1.105-.895-2-2-2zM6 6h5v5H6V6zm4.5 13C9.12 19 8 17.88 8 16.5S9.12 14 10.5 14s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zm3-6l3-5 3 5h-6z' })
						)
					);
					break;
				case 'gridicons-customize':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M2 6c0-1.505.78-3.08 2-4 0 .845.69 2 2 2 1.657 0 3 1.343 3 3 0 .386-.08.752-.212 1.09.74.594 1.476 1.19 2.19 1.81L8.9 11.98c-.62-.716-1.214-1.454-1.807-2.192C6.753 9.92 6.387 10 6 10c-2.21 0-4-1.79-4-4zm12.152 6.848l1.34-1.34c.607.304 1.283.492 2.008.492 2.485 0 4.5-2.015 4.5-4.5 0-.725-.188-1.4-.493-2.007L18 9l-2-2 3.507-3.507C18.9 3.188 18.225 3 17.5 3 15.015 3 13 5.015 13 7.5c0 .725.188 1.4.493 2.007L3 20l2 2 6.848-6.848c1.885 1.928 3.874 3.753 5.977 5.45l1.425 1.148 1.5-1.5-1.15-1.425c-1.695-2.103-3.52-4.092-5.448-5.977z' })
						)
					);
					break;
				case 'gridicons-dropdown':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M7 10l5 5 5-5' })
						)
					);
					break;
				case 'gridicons-ellipsis':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M7 12c0 1.104-.896 2-2 2s-2-.896-2-2 .896-2 2-2 2 .896 2 2zm12-2c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2zm-7 0c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2z' })
						)
					);
					break;
				case 'gridicons-external':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 13v6c0 1.105-.895 2-2 2H5c-1.105 0-2-.895-2-2V7c0-1.105.895-2 2-2h6v2H5v12h12v-6h2zM13 3v2h4.586l-7.793 7.793 1.414 1.414L19 6.414V11h2V3h-8z' })
						)
					);
					break;
				case 'gridicons-flag':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M15 6c0-1.105-.895-2-2-2H5v17h2v-7h5c0 1.105.895 2 2 2h6V6h-5z' })
						)
					);
					break;
				case 'gridicons-flip-horizontal':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 18v-5h3v-2h-3V6c0-1.105-.895-2-2-2H6c-1.105 0-2 .895-2 2v5H1v2h3v5c0 1.105.895 2 2 2h12c1.105 0 2-.895 2-2zM6 6h12v5H6V6z' })
						)
					);
					break;
				case 'gridicons-flip-vertical':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 4h-5V1h-2v3H6c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h5v3h2v-3h5c1.105 0 2-.895 2-2V6c0-1.105-.895-2-2-2zM6 18V6h5v12H6z' })
						)
					);
					break;
				case 'gridicons-folder-multiple':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 8c-1.105 0-2 .895-2 2v10c0 1.1.9 2 2 2h14c1.105 0 2-.895 2-2H4V8zm16 10H8c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3c1.105 0 2 .895 2 2h7c1.105 0 2 .895 2 2v8c0 1.105-.895 2-2 2z' })
						)
					);
					break;
				case 'gridicons-folder':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 19H6c-1.1 0-2-.9-2-2V7c0-1.1.9-2 2-2h3c1.1 0 2 .9 2 2h7c1.1 0 2 .9 2 2v8c0 1.1-.9 2-2 2z' })
						)
					);
					break;
				case 'gridicons-globe':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm0 18l2-2 1-1v-2h-2v-1l-1-1H9v3l2 2v1.93c-3.94-.494-7-3.858-7-7.93l1 1h2v-2h2l3-3V6h-2L9 5v-.41C9.927 4.21 10.94 4 12 4s2.073.212 3 .59V6l-1 1v2l1 1 3.13-3.13c.752.897 1.304 1.964 1.606 3.13H18l-2 2v2l1 1h2l.286.286C18.03 18.06 15.24 20 12 20z' })
						)
					);
					break;
				case 'gridicons-grid':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M8 8H4V4h4v4zm6-4h-4v4h4V4zm6 0h-4v4h4V4zM8 10H4v4h4v-4zm6 0h-4v4h4v-4zm6 0h-4v4h4v-4zM8 16H4v4h4v-4zm6 0h-4v4h4v-4zm6 0h-4v4h4v-4z' })
						)
					);
					break;
				case 'gridicons-heading':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 20h-3v-6H9v6H6V5.01h3V11h6V5.01h3V20z' })
						)
					);
					break;
				case 'gridicons-heart-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16.5 4.5c2.206 0 4 1.794 4 4 0 4.67-5.543 8.94-8.5 11.023C9.043 17.44 3.5 13.17 3.5 8.5c0-2.206 1.794-4 4-4 1.298 0 2.522.638 3.273 1.706L12 7.953l1.227-1.746c.75-1.07 1.975-1.707 3.273-1.707m0-1.5c-1.862 0-3.505.928-4.5 2.344C11.005 3.928 9.362 3 7.5 3 4.462 3 2 5.462 2 8.5c0 5.72 6.5 10.438 10 12.85 3.5-2.412 10-7.13 10-12.85C22 5.462 19.538 3 16.5 3z' })
						)
					);
					break;
				case 'gridicons-heart':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16.5 3c-1.862 0-3.505.928-4.5 2.344C11.005 3.928 9.362 3 7.5 3 4.462 3 2 5.462 2 8.5c0 5.72 6.5 10.438 10 12.85 3.5-2.412 10-7.13 10-12.85C22 5.462 19.538 3 16.5 3z' })
						)
					);
					break;
				case 'gridicons-help-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm1 13h-2v2h2v-2zm-1.962-2v-.528c0-.4.082-.74.246-1.017.163-.276.454-.546.87-.808.333-.21.572-.397.717-.565.146-.168.22-.36.22-.577 0-.172-.078-.308-.234-.41-.156-.1-.358-.15-.608-.15-.62 0-1.34.22-2.168.658l-.854-1.67c1.02-.58 2.084-.872 3.194-.872.913 0 1.63.202 2.15.603.52.4.78.948.78 1.64 0 .495-.116.924-.347 1.287-.23.362-.6.705-1.11 1.03-.43.278-.7.48-.807.61-.108.13-.163.282-.163.458V13h-1.885z' })
						)
					);
					break;
				case 'gridicons-help':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm1 15h-2v-2h2v2zm2.003-6.41c-.23.36-.6.704-1.108 1.028-.43.28-.7.482-.808.61-.108.13-.163.283-.163.46V13H11.04v-.528c0-.4.08-.74.245-1.017.163-.276.454-.546.872-.808.332-.21.57-.397.716-.565.145-.168.217-.36.217-.577 0-.172-.077-.308-.233-.41-.156-.1-.358-.15-.608-.15-.62 0-1.342.22-2.17.658l-.854-1.67c1.02-.58 2.084-.872 3.194-.872.913 0 1.63.202 2.15.603.52.4.78.948.78 1.64 0 .495-.116.924-.347 1.286z' })
						)
					);
					break;
				case 'gridicons-history':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M2.12 13.526c.742 4.78 4.902 8.47 9.88 8.47 5.5 0 10-4.5 10-9.998S17.5 2 12 2C8.704 2 5.802 3.6 4 6V2H2.003L2 9h7V7H5.8c1.4-1.8 3.702-3 6.202-3C16.4 4 20 7.6 20 11.998s-3.6 8-8 8c-3.877 0-7.13-2.795-7.848-6.472H2.12z' }),
							React.createElement('path', { d: 'M11.002 7v5.3l3.2 4.298 1.6-1.197-2.8-3.7V7' })
						)
					);
					break;
				case 'gridicons-house':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M22 9L12 1 2 9v2h2v10h5v-4c0-1.657 1.343-3 3-3s3 1.343 3 3v4h5V11h2V9z' })
						)
					);
					break;
				case 'gridicons-image-multiple':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M15 7.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5S17.328 9 16.5 9 15 8.328 15 7.5zM4 20h14c0 1.105-.895 2-2 2H4c-1.1 0-2-.9-2-2V8c0-1.105.895-2 2-2v14zM22 4v12c0 1.105-.895 2-2 2H8c-1.105 0-2-.895-2-2V4c0-1.105.895-2 2-2h12c1.105 0 2 .895 2 2zM8 4v6.333L11 7l4.855 5.395.656-.73c.796-.886 2.183-.886 2.977 0l.513.57V4H8z' })
						)
					);
					break;
				case 'gridicons-image':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M13 9.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5zM22 6v12c0 1.105-.895 2-2 2H4c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h16c1.105 0 2 .895 2 2zm-2 0H4v7.444L8 9l5.895 6.55 1.587-1.85c.798-.932 2.24-.932 3.037 0L20 15.426V6z' })
						)
					);
					break;
				case 'gridicons-indent-left':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 20h2V4h-2v16zM2 11h10.172l-2.086-2.086L11.5 7.5 16 12l-4.5 4.5-1.414-1.414L12.172 13H2v-2z' })
						)
					);
					break;
				case 'gridicons-indent-right':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M6 4H4v16h2V4zm16 9H11.828l2.086 2.086L12.5 16.5 8 12l4.5-4.5 1.414 1.414L11.828 11H22v2z' })
						)
					);
					break;
				case 'gridicons-info-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M13 9h-2V7h2v2zm0 2h-2v6h2v-6zm-1-7c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8m0-2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2z' })
						)
					);
					break;
				case 'gridicons-info':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z' })
						)
					);
					break;
				case 'gridicons-ink':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M5 15c0 3.866 3.134 7 7 7s7-3.134 7-7c0-1.387-.41-2.677-1.105-3.765h.007L12 2l-5.903 9.235h.007C5.41 12.323 5 13.613 5 15z' })
						)
					);
					break;
				case 'gridicons-institution':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M2 19h20v3H2zM12 2L2 6v2h20V6M17 10h3v7h-3zM10.5 10h3v7h-3zM4 10h3v7H4z' })
						)
					);
					break;
				case 'gridicons-italic':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M10.536 5l-.427 2h1.5L9.262 18h-1.5l-.427 2h6.128l.426-2h-1.5l2.347-11h1.5l.427-2' })
						)
					);
					break;
				case 'gridicons-layout-blocks':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 7h-2V3c0-1.105-.895-2-2-2H7c-1.105 0-2 .895-2 2v2H3c-1.105 0-2 .895-2 2v4c0 1.105.895 2 2 2h2v8c0 1.105.895 2 2 2h10c1.105 0 2-.895 2-2v-2h2c1.105 0 2-.895 2-2V9c0-1.105-.895-2-2-2zm-4 14H7v-8h2c1.105 0 2-.895 2-2V7c0-1.105-.895-2-2-2H7V3h10v4h-2c-1.105 0-2 .895-2 2v8c0 1.105.895 2 2 2h2v2zm4-4h-6V9h6v8z' })
						)
					);
					break;
				case 'gridicons-layout':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M8 20H5c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3c1.105 0 2 .895 2 2v12c0 1.105-.895 2-2 2zm8-10h4c1.105 0 2-.895 2-2V5c0-1.105-.895-2-2-2h-4c-1.105 0-2 .895-2 2v3c0 1.105.895 2 2 2zm5 10v-6c0-1.105-.895-2-2-2h-5c-1.105 0-2 .895-2 2v6c0 1.105.895 2 2 2h5c1.105 0 2-.895 2-2z' })
						)
					);
					break;
				case 'gridicons-link-break':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M10 11l-2 2H7v-2h3zm9.64-3.64L22 5l-1.5-1.5-17 17L5 22l9-9h3v-2h-1l2-2c1.103 0 2 .897 2 2v2c0 1.103-.897 2-2 2h-4.977c.913 1.208 2.347 2 3.977 2h1c2.21 0 4-1.79 4-4v-2c0-1.623-.97-3.013-2.36-3.64zM4.36 16.64L6 15c-1.103 0-2-.897-2-2v-2c0-1.103.897-2 2-2h4.977C10.065 7.792 8.63 7 7 7H6c-2.21 0-4 1.79-4 4v2c0 1.623.97 3.013 2.36 3.64z' })
						)
					);
					break;
				case 'gridicons-link':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 13H7v-2h10v2zm1-6h-1c-1.63 0-3.065.792-3.977 2H18c1.103 0 2 .897 2 2v2c0 1.103-.897 2-2 2h-4.977c.913 1.208 2.347 2 3.977 2h1c2.21 0 4-1.79 4-4v-2c0-2.21-1.79-4-4-4zM2 11v2c0 2.21 1.79 4 4 4h1c1.63 0 3.065-.792 3.977-2H6c-1.103 0-2-.897-2-2v-2c0-1.103.897-2 2-2h4.977C10.065 7.792 8.63 7 7 7H6c-2.21 0-4 1.79-4 4z' })
						)
					);
					break;
				case 'gridicons-list-checkmark':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M9.5 15.5L5 20l-2.5-2.5 1.06-1.06L5 17.88l3.44-3.44L9.5 15.5zM10 5v2h11V5H10zm0 14h11v-2H10v2zm0-6h11v-2H10v2zM8.44 8.44L5 11.88l-1.44-1.44L2.5 11.5 5 14l4.5-4.5-1.06-1.06zm0-6L5 5.88 3.56 4.44 2.5 5.5 5 8l4.5-4.5-1.06-1.06z' })
						)
					);
					break;
				case 'gridicons-list-ordered':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M8 19h13v-2H8v2zm0-6h13v-2H8v2zm0-8v2h13V5H8zm-4.425.252c.107-.096.197-.188.27-.275-.013.228-.02.48-.02.756V8h1.176V3.717H3.96L2.487 4.915l.6.738.487-.4zm.334 7.764c.474-.426.784-.715.93-.867.145-.153.26-.298.35-.436.087-.138.152-.278.194-.42.042-.143.063-.298.063-.466 0-.225-.06-.427-.18-.608s-.29-.32-.507-.417c-.218-.1-.465-.148-.742-.148-.22 0-.42.022-.596.067s-.34.11-.49.195c-.15.085-.337.226-.558.423l.636.744c.174-.15.33-.264.467-.34.138-.078.274-.117.41-.117.13 0 .232.032.304.097.073.064.11.152.11.264 0 .09-.02.176-.055.258-.036.082-.1.18-.192.294-.092.114-.287.328-.586.64L2.42 13.238V14h3.11v-.955H3.91v-.03zm.53 4.746v-.018c.306-.086.54-.225.702-.414.162-.19.243-.42.243-.685 0-.31-.126-.55-.378-.727-.252-.176-.6-.264-1.043-.264-.307 0-.58.033-.816.1s-.47.178-.696.334l.48.773c.293-.183.576-.274.85-.274.147 0 .263.027.35.082s.13.14.13.252c0 .3-.294.45-.882.45h-.27v.87h.264c.217 0 .393.017.527.05.136.03.233.08.294.143.06.064.09.154.09.27 0 .153-.057.265-.173.337-.115.07-.3.106-.554.106-.164 0-.343-.022-.538-.07-.194-.044-.385-.115-.573-.21v.96c.228.088.44.148.637.182.196.033.41.05.64.05.56 0 .998-.114 1.314-.343.315-.228.473-.542.473-.94.002-.585-.356-.923-1.07-1.013z' })
						)
					);
					break;
				case 'gridicons-list-unordered':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M9 19h12v-2H9v2zm0-6h12v-2H9v2zm0-8v2h12V5H9zm-4-.5c-.828 0-1.5.672-1.5 1.5S4.172 7.5 5 7.5 6.5 6.828 6.5 6 5.828 4.5 5 4.5zm0 6c-.828 0-1.5.672-1.5 1.5s.672 1.5 1.5 1.5 1.5-.672 1.5-1.5-.672-1.5-1.5-1.5zm0 6c-.828 0-1.5.672-1.5 1.5s.672 1.5 1.5 1.5 1.5-.672 1.5-1.5-.672-1.5-1.5-1.5z' })
						)
					);
					break;
				case 'gridicons-location':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 9c0-3.866-3.134-7-7-7S5 5.134 5 9c0 1.387.41 2.677 1.105 3.765h-.008C8.457 16.46 12 22 12 22l5.903-9.235h-.007C18.59 11.677 19 10.387 19 9zm-7 3c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z' })
						)
					);
					break;
				case 'gridicons-lock':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 8h-1V7c0-2.757-2.243-5-5-5S7 4.243 7 7v1H6c-1.105 0-2 .895-2 2v10c0 1.105.895 2 2 2h12c1.105 0 2-.895 2-2V10c0-1.105-.895-2-2-2zM9 7c0-1.654 1.346-3 3-3s3 1.346 3 3v1H9V7zm4 8.723V18h-2v-2.277c-.595-.346-1-.984-1-1.723 0-1.105.895-2 2-2s2 .895 2 2c0 .738-.405 1.376-1 1.723z' })
						)
					);
					break;
				case 'gridicons-mail':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 4H4c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h16c1.105 0 2-.895 2-2V6c0-1.105-.895-2-2-2zm0 4.236l-8 4.882-8-4.882V6h16v2.236z' })
						)
					);
					break;
				case 'gridicons-mention':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10v-2c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8v.5c0 .827-.673 1.5-1.5 1.5s-1.5-.673-1.5-1.5V12c0-2.76-2.24-5-5-5s-5 2.24-5 5 2.24 5 5 5c1.65 0 3.102-.81 4.013-2.043C16.648 15.6 17.527 16 18.5 16c1.93 0 3.5-1.57 3.5-3.5V12c0-5.523-4.477-10-10-10zm0 13c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z' })
						)
					);
					break;
				case 'gridicons-menu':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 6v2H3V6h18zM3 18h18v-2H3v2zm0-5h18v-2H3v2z' })
						)
					);
					break;
				case 'gridicons-menus':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M9 19h10v-2H9v2zm0-6h6v-2H9v2zm0-8v2h12V5H9zm-4-.5c-.828 0-1.5.672-1.5 1.5S4.172 7.5 5 7.5 6.5 6.828 6.5 6 5.828 4.5 5 4.5zm0 6c-.828 0-1.5.672-1.5 1.5s.672 1.5 1.5 1.5 1.5-.672 1.5-1.5-.672-1.5-1.5-1.5zm0 6c-.828 0-1.5.672-1.5 1.5s.672 1.5 1.5 1.5 1.5-.672 1.5-1.5-.672-1.5-1.5-1.5z' })
						)
					);
					break;
				case 'gridicons-microphone':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 13c1.104 0 2-.896 2-2V6c0-1.104-.896-2-2-2-1.105 0-2 .896-2 2v5c0 1.104.895 2 2 2zm4-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6c0 2.972 2.164 5.433 5 5.91V20h2v-3.09c2.836-.478 5-2.94 5-5.91h-2z' })
						)
					);
					break;
				case 'gridicons-minus-small':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M6 11h12v2H6z' })
						)
					);
					break;
				case 'gridicons-minus':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M3 11h18v2H3z' })
						)
					);
					break;
				case 'gridicons-my-sites-horizon':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M10.986 13.928l.762-2.284-1.324-3.63c-.458-.026-.892-.08-.892-.08-.458-.027-.405-.727.054-.7 0 0 1.403.107 2.24.107.888 0 2.265-.107 2.265-.107.46-.027.513.646.055.7 0 0-.46.055-.973.082l2.006 5.966c-.875-.034-1.74-.053-2.6-.06l-.428-1.177-.403 1.17c-.252.002-.508.01-.76.015zm-7.156.393c-.21-.737-.33-1.514-.33-2.32 0-1.232.264-2.402.736-3.46l2.036 5.58c.85-.06 1.69-.104 2.526-.138L6.792 8.015c.512-.027.973-.08.973-.08.458-.055.404-.728-.055-.702 0 0-1.376.108-2.265.108-.16 0-.347-.003-.547-.01C6.418 5.025 9.03 3.5 12 3.5c2.213 0 4.228.846 5.74 2.232-.036-.002-.072-.007-.11-.007-.835 0-1.427.727-1.427 1.51 0 .7.404 1.292.835 1.993.323.566.7 1.293.7 2.344 0 .674-.244 1.463-.572 2.51.3.02.604.043.907.066l.798-2.307c.486-1.212.647-2.18.647-3.043 0-.313-.02-.603-.057-.874.662 1.21 1.04 2.6 1.04 4.077 0 .807-.128 1.58-.34 2.32.5.05 1.006.112 1.51.17.205-.798.33-1.628.33-2.49 0-5.523-4.477-10-10-10S2 6.477 2 12c0 .862.125 1.692.33 2.49.5-.057 1.003-.12 1.5-.17zm14.638 3.168C16.676 19.672 14.118 20.5 12 20.5c-1.876 0-4.55-.697-6.463-3.012-.585.048-1.174.1-1.77.16C5.572 20.272 8.578 22 12 22c3.422 0 6.43-1.73 8.232-4.35-.593-.063-1.18-.114-1.764-.162zM12 15.01c-3.715 0-7.368.266-10.958.733.18.41.35.825.506 1.247 3.427-.43 6.91-.68 10.452-.68s7.025.25 10.452.68c.156-.422.327-.836.506-1.246-3.59-.467-7.243-.734-10.958-.734z' })
						)
					);
					break;
				case 'gridicons-my-sites':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM3.5 12c0-1.232.264-2.402.736-3.46L8.29 19.65C5.456 18.272 3.5 15.365 3.5 12zm8.5 8.5c-.834 0-1.64-.12-2.4-.345l2.55-7.41 2.613 7.157c.017.042.038.08.06.117-.884.31-1.833.48-2.823.48zm1.172-12.485c.512-.027.973-.08.973-.08.458-.055.404-.728-.054-.702 0 0-1.376.108-2.265.108-.835 0-2.24-.107-2.24-.107-.458-.026-.51.674-.053.7 0 0 .434.055.892.082l1.324 3.63-1.86 5.578-3.096-9.208c.512-.027.973-.08.973-.08.458-.055.403-.728-.055-.702 0 0-1.376.108-2.265.108-.16 0-.347-.003-.547-.01C6.418 5.025 9.03 3.5 12 3.5c2.213 0 4.228.846 5.74 2.232-.037-.002-.072-.007-.11-.007-.835 0-1.427.727-1.427 1.51 0 .7.404 1.292.835 1.993.323.566.7 1.293.7 2.344 0 .727-.28 1.572-.646 2.748l-.848 2.833-3.072-9.138zm3.1 11.332l2.597-7.506c.484-1.212.645-2.18.645-3.044 0-.313-.02-.603-.057-.874.664 1.21 1.042 2.6 1.042 4.078 0 3.136-1.7 5.874-4.227 7.347z' })
						)
					);
					break;
				case 'gridicons-not-visible':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M1 12s4.188-6 11-6c.947 0 1.84.12 2.678.322L8.36 12.64C8.133 12.14 8 11.586 8 11c0-.937.335-1.787.875-2.47C6.483 9.344 4.66 10.917 3.62 12c.68.707 1.696 1.62 2.98 2.398L5.15 15.85C2.498 14.13 1 12 1 12zm22 0s-4.188 6-11 6c-.946 0-1.836-.124-2.676-.323L5 22l-1.5-1.5 17-17L22 5l-3.147 3.147C21.5 9.87 23 12 23 12zm-2.615.006c-.678-.708-1.697-1.624-2.987-2.403L16 11c0 2.21-1.79 4-4 4l-.947.947c.31.03.624.053.947.053 3.978 0 6.943-2.478 8.385-3.994z' })
						)
					);
					break;
				case 'gridicons-notice-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm1 13h-2v2h2v-2zm-2-2h2l.5-6h-3l.5 6z' })
						)
					);
					break;
				case 'gridicons-notice':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm1 15h-2v-2h2v2zm0-4h-2l-.5-6h3l-.5 6z' })
						)
					);
					break;
				case 'gridicons-pages':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16 8H8V6h8v2zm0 2H8v2h8v-2zm4-6v12l-6 6H6c-1.105 0-2-.895-2-2V4c0-1.105.895-2 2-2h12c1.105 0 2 .895 2 2zm-2 10V4H6v16h6v-4c0-1.105.895-2 2-2h4z' })
						)
					);
					break;
				case 'gridicons-pencil':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M13 6l5 5-9.507 9.507c-.686-.686-.69-1.794-.012-2.485l-.002-.003c-.69.676-1.8.673-2.485-.013-.677-.677-.686-1.762-.036-2.455l-.008-.008c-.694.65-1.78.64-2.456-.036L13 6zm7.586-.414l-2.172-2.172c-.78-.78-2.047-.78-2.828 0L14 5l5 5 1.586-1.586c.78-.78.78-2.047 0-2.828zM3 18v3h3c0-1.657-1.343-3-3-3z' })
						)
					);
					break;
				case 'gridicons-phone':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16 2H8c-1.104 0-2 .896-2 2v16c0 1.104.896 2 2 2h8c1.104 0 2-.896 2-2V4c0-1.104-.896-2-2-2zm-3 19h-2v-1h2v1zm3-2H8V5h8v14z' })
						)
					);
					break;
				case 'gridicons-plugins':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16 8V3c0-.552-.448-1-1-1s-1 .448-1 1v5h-4V3c0-.552-.448-1-1-1s-1 .448-1 1v5H5v4c0 2.79 1.637 5.193 4 6.317V22h6v-3.683c2.363-1.124 4-3.527 4-6.317V8h-3z' })
						)
					);
					break;
				case 'gridicons-plus-small':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 11h-5V6h-2v5H6v2h5v5h2v-5h5' })
						)
					);
					break;
				case 'gridicons-plus':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 13h-7v7h-2v-7H4v-2h7V4h2v7h7v2z' })
						)
					);
					break;
				case 'gridicons-popout':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M6 7V5c0-1.105.895-2 2-2h11c1.105 0 2 .895 2 2v14c0 1.105-.895 2-2 2H8c-1.105 0-2-.895-2-2v-2h2v2h11V5H8v2H6zm5.5-.5l-1.414 1.414L13.172 11H3v2h10.172l-3.086 3.086L11.5 17.5 17 12l-5.5-5.5z' })
						)
					);
					break;
				case 'gridicons-posts':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16 19H3v-2h13v2zm5-10H3v2h18V9zM3 5v2h11V5H3zm14 0v2h4V5h-4zm-6 8v2h10v-2H11zm-8 0v2h5v-2H3z' })
						)
					);
					break;
				case 'gridicons-print':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M9 16h6v2H9v-2zm13 1h-3v3c0 1.105-.895 2-2 2H7c-1.105 0-2-.895-2-2v-3H2V9c0-1.105.895-2 2-2h1V5c0-1.105.895-2 2-2h10c1.105 0 2 .895 2 2v2h1c1.105 0 2 .895 2 2v8zM7 7h10V5H7v2zm10 7H7v6h10v-6zm3-3.5c0-.828-.672-1.5-1.5-1.5s-1.5.672-1.5 1.5.672 1.5 1.5 1.5 1.5-.672 1.5-1.5z' })
						)
					);
					break;
				case 'gridicons-quote':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M11.192 15.757c0-.88-.23-1.618-.69-2.217-.326-.412-.768-.683-1.327-.812-.55-.128-1.07-.137-1.54-.028-.16-.95.1-1.956.76-3.022.66-1.065 1.515-1.867 2.558-2.403L9.373 5c-.8.396-1.56.898-2.26 1.505-.71.607-1.34 1.305-1.9 2.094s-.98 1.68-1.25 2.69-.346 2.04-.217 3.1c.168 1.4.62 2.52 1.356 3.35.735.84 1.652 1.26 2.748 1.26.965 0 1.766-.29 2.4-.878.628-.576.94-1.365.94-2.368l.002.003zm9.124 0c0-.88-.23-1.618-.69-2.217-.326-.42-.77-.692-1.327-.817-.56-.124-1.074-.13-1.54-.022-.16-.94.09-1.95.75-3.02.66-1.06 1.514-1.86 2.557-2.4L18.49 5c-.8.396-1.555.898-2.26 1.505-.708.607-1.34 1.305-1.894 2.094-.556.79-.97 1.68-1.24 2.69-.273 1-.345 2.04-.217 3.1.165 1.4.615 2.52 1.35 3.35.732.833 1.646 1.25 2.742 1.25.967 0 1.768-.29 2.402-.876.627-.576.942-1.365.942-2.368v.01z' })
						)
					);
					break;
				case 'gridicons-reader':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M3 4v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4H3zm7 11H5v-1h5v1zm2-2H5v-1h7v1zm0-2H5v-1h7v1zm7 4h-5v-5h5v5zm0-7H5V6h14v2z' })
						)
					);
					break;
				case 'gridicons-reader-follow':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M23,16v2h-3v3h-2v-3h-3v-2h3v-3h2v3H23z M20,2v9h-4v3h-3v4H4c-1.1,0-2-0.9-2-2V2H20z M8,13v-1H4v1H8z M11,10H4v1h7V10z M11,8H4v1h7V8z M18,4H4v2h14V4z' })
						)
					);
					break;
				case 'gridicons-reader-following':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M23,13.482L15.508,21L12,17.4l1.412-1.388l2.106,2.188l6.094-6.094L23,13.482z M15.545,15.344L20,10.889V2H2v14 c0,1.1,0.9,2,2,2h4.538l4.913-4.832L15.545,15.344z M8,13H4v-1h4V13z M11,11H4v-1h7V11z M11,9H4V8h7V9z M18,6H4V4h14V6z' })
						)
					);
					break;
				case 'gridicons-reblog':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M22.086 9.914L20 7.828V18c0 1.105-.895 2-2 2h-7v-2h7V7.828l-2.086 2.086L14.5 8.5 19 4l4.5 4.5-1.414 1.414zM6 16.172V6h7V4H6c-1.105 0-2 .895-2 2v10.172l-2.086-2.086L.5 15.5 5 20l4.5-4.5-1.414-1.414L6 16.172z' })
						)
					);
					break;
				case 'gridicons-redo':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 6v3.586L14.343 5.93C13.17 4.756 11.636 4.17 10.1 4.17s-3.07.585-4.242 1.757c-2.343 2.342-2.343 6.14 0 8.484l5.364 5.364 1.414-1.414L7.272 13c-1.56-1.56-1.56-4.097 0-5.657.755-.755 1.76-1.172 2.828-1.172 1.068 0 2.073.417 2.828 1.173L16.586 11H13v2h7V6h-2z' })
						)
					);
					break;
				case 'gridicons-refresh':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17.91 14c-.478 2.833-2.943 5-5.91 5-3.308 0-6-2.692-6-6s2.692-6 6-6h2.172l-2.086 2.086L13.5 10.5 18 6l-4.5-4.5-1.414 1.414L14.172 5H12c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.08 0 7.438-3.055 7.93-7h-2.02z' })
						)
					);
					break;
				case 'gridicons-reply':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M14 8H6.828l2.586-2.586L8 4 3 9l5 5 1.414-1.414L6.828 10H14c2.206 0 4 1.794 4 4s-1.794 4-4 4h-2v2h2c3.314 0 6-2.686 6-6s-2.686-6-6-6z' })
						)
					);
					break;
				case 'gridicons-rotate':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 14v6c0 1.105-.895 2-2 2H6c-1.105 0-2-.895-2-2v-6c0-1.105.895-2 2-2h10c1.105 0 2 .895 2 2zM13.914 2.914L11.828 5H14c4.418 0 8 3.582 8 8h-2c0-3.308-2.692-6-6-6h-2.172l2.086 2.086L12.5 10.5 8 6l1.414-1.414L12.5 1.5l1.414 1.414z' })
						)
					);
					break;
				case 'gridicons-scheduled':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M10.498 18l-3.705-3.704 1.415-1.415 2.294 2.295 5.293-5.293 1.415 1.415L10.498 18zM21 6v13c0 1.104-.896 2-2 2H5c-1.104 0-2-.896-2-2V6c0-1.104.896-2 2-2h1V2h2v2h8V2h2v2h1c1.104 0 2 .896 2 2zm-2 2H5v11h14V8z' })
						)
					);
					break;
				case 'gridicons-search':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 19l-5.154-5.154C16.574 12.742 17 11.42 17 10c0-3.866-3.134-7-7-7s-7 3.134-7 7 3.134 7 7 7c1.42 0 2.742-.426 3.846-1.154L19 21l2-2zM5 10c0-2.757 2.243-5 5-5s5 2.243 5 5-2.243 5-5 5-5-2.243-5-5z' })
						)
					);
					break;
				case 'gridicons-share-ios':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 8h2c1.105 0 2 .895 2 2v9c0 1.105-.895 2-2 2H5c-1.105 0-2-.895-2-2v-9c0-1.105.895-2 2-2h2v2H5v9h14v-9h-2V8zM6.5 5.5l1.414 1.414L11 3.828V14h2V3.828l3.086 3.086L17.5 5.5 12 0 6.5 5.5z' })
						)
					);
					break;
				case 'gridicons-share':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 16c-.788 0-1.5.31-2.034.807L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.048 4.118c-.053.223-.088.453-.088.692 0 1.657 1.343 3 3 3s3-1.343 3-3-1.343-3-3-3z' })
						)
					);
					break;
				case 'gridicons-sign-out':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M16 17v2c0 1.105-.895 2-2 2H5c-1.105 0-2-.895-2-2V5c0-1.105.895-2 2-2h9c1.105 0 2 .895 2 2v2h-2V5H5v14h9v-2h2zm2.5-10.5l-1.414 1.414L20.172 11H10v2h10.172l-3.086 3.086L18.5 17.5 24 12l-5.5-5.5z' })
						)
					);
					break;
				case 'gridicons-spam':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 2H7L2 7v10l5 5h10l5-5V7l-5-5zm-4 15h-2v-2h2v2zm0-4h-2l-.5-6h3l-.5 6z' })
						)
					);
					break;
				case 'gridicons-speaker':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 8v6c1.7 0 3-1.3 3-3s-1.3-3-3-3zM11 7H4c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h1v3c0 1.1.9 2 2 2h2v-5h2l4 4h2V3h-2l-4 4z' })
						)
					);
					break;
				case 'gridicons-special-character':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12.005 7.418c-1.237 0-2.19.376-2.86 1.128s-1.005 1.812-1.005 3.18c0 1.387.226 2.513.677 3.377.45.865 1.135 1.543 2.05 2.036V20H5v-2.666h3.12c-1.04-.636-1.842-1.502-2.405-2.6-.564-1.097-.846-2.322-.846-3.676 0-1.258.29-2.363.875-3.317.585-.952 1.417-1.685 2.497-2.198s2.334-.77 3.763-.77c2.18 0 3.915.572 5.204 1.713s1.932 2.673 1.932 4.594c0 1.353-.283 2.57-.852 3.65-.567 1.08-1.38 1.947-2.44 2.603H19V20h-5.908v-2.86c.95-.493 1.65-1.18 2.102-2.062s.677-2.006.677-3.374c0-1.36-.336-2.415-1.01-3.164-.672-.747-1.624-1.122-2.855-1.122z' })
						)
					);
					break;
				case 'gridicons-star-outline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 6.308l1.176 3.167.347.936.997.042 3.374.14-2.647 2.09-.784.62.27.963.91 3.25-2.813-1.872-.83-.553-.83.552-2.814 1.87.91-3.248.27-.962-.783-.62-2.648-2.092 3.374-.14.996-.04.347-.936L12 6.308M12 2L9.418 8.953 2 9.257l5.822 4.602L5.82 21 12 16.89 18.18 21l-2.002-7.14L22 9.256l-7.418-.305L12 2z' })
						)
					);
					break;
				case 'gridicons-star':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2l2.582 6.953L22 9.257l-5.822 4.602L18.18 21 12 16.89 5.82 21l2.002-7.14L2 9.256l7.418-.304' })
						)
					);
					break;
				case 'gridicons-stats-alt':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M21 21H3v-2h18v2zM8 10H4v7h4v-7zm6-7h-4v14h4V3zm6 3h-4v11h4V6z' })
						)
					);
					break;
				case 'gridicons-stats':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M19 3H5c-1.105 0-2 .895-2 2v14c0 1.105.895 2 2 2h14c1.105 0 2-.895 2-2V5c0-1.105-.895-2-2-2zm0 16H5V5h14v14zM9 17H7v-5h2v5zm4 0h-2V7h2v10zm4 0h-2v-7h2v7z' })
						)
					);
					break;
				case 'gridicons-status':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM7.55 13c-.02.166-.05.33-.05.5 0 2.485 2.015 4.5 4.5 4.5s4.5-2.015 4.5-4.5c0-.17-.032-.334-.05-.5h-8.9zM10 10V8c0-.552-.448-1-1-1s-1 .448-1 1v2c0 .552.448 1 1 1s1-.448 1-1zm6 0V8c0-.552-.448-1-1-1s-1 .448-1 1v2c0 .552.448 1 1 1s1-.448 1-1z' })
						)
					);
					break;
				case 'gridicons-strikethrough':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M14.348 12H21v2h-4.613c.24.515.368 1.094.368 1.748 0 1.317-.474 2.355-1.423 3.114-.947.76-2.266 1.138-3.956 1.138-1.557 0-2.934-.293-4.132-.878v-2.874c.985.44 1.818.75 2.5.928.682.18 1.306.27 1.872.27.68 0 1.2-.13 1.562-.39.363-.26.545-.644.545-1.158 0-.285-.08-.54-.24-.763-.16-.222-.394-.437-.704-.643-.18-.12-.483-.287-.88-.49H3v-2H14.347zm-3.528-2c-.073-.077-.143-.155-.193-.235-.126-.202-.19-.44-.19-.713 0-.44.157-.795.47-1.068.313-.273.762-.41 1.348-.41.492 0 .993.064 1.502.19.51.127 1.153.35 1.93.67l1-2.405c-.753-.327-1.473-.58-2.16-.76-.69-.18-1.414-.27-2.173-.27-1.544 0-2.753.37-3.628 1.108-.874.738-1.312 1.753-1.312 3.044 0 .302.036.58.088.848h3.318z' })
						)
					);
					break;
				case 'gridicons-sync':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M23.5 13.5l-3.086 3.086L19 18l-4.5-4.5 1.414-1.414L18 14.172V12c0-3.308-2.692-6-6-6V4c4.418 0 8 3.582 8 8v2.172l2.086-2.086L23.5 13.5zM6 12V9.828l2.086 2.086L9.5 10.5 5 6 3.586 7.414.5 10.5l1.414 1.414L4 9.828V12c0 4.418 3.582 8 8 8v-2c-3.308 0-6-2.692-6-6z' })
						)
					);
					break;
				case 'gridicons-tablet':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 2H6c-1.104 0-2 .896-2 2v16c0 1.104.896 2 2 2h12c1.104 0 2-.896 2-2V4c0-1.104-.896-2-2-2zm-5 19h-2v-1h2v1zm5-2H6V5h12v14z' })
						)
					);
					break;
				case 'gridicons-tag':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 2.007h-7.087c-.53 0-1.04.21-1.414.586L2.592 11.5c-.78.78-.78 2.046 0 2.827l7.086 7.086c.78.78 2.046.78 2.827 0l8.906-8.906c.376-.374.587-.883.587-1.413V4.007c0-1.105-.895-2-2-2zM17.007 9c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2z' })
						)
					);
					break;
				case 'gridicons-text-color':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M3 19h18v3H3v-3zM15.82 17h3.424L14 3h-4L4.756 17H8.18l1.067-3.5h5.506L15.82 17zm-1.952-6h-3.73l1.868-5.725L13.868 11z' })
						)
					);
					break;
				case 'gridicons-themes':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 6c-1.105 0-2 .895-2 2v12c0 1.1.9 2 2 2h12c1.105 0 2-.895 2-2H4V6zm16-4H8c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2h12c1.105 0 2-.895 2-2V4c0-1.105-.895-2-2-2zm-5 14H8V9h7v7zm5 0h-3V9h3v7zm0-9H8V4h12v3z' })
						)
					);
					break;
				case 'gridicons-thumbs-up':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M6.7 22H2v-9h2l2.7 9zM20 9h-6V5c0-1.657-1.343-3-3-3h-1v4L7.1 9.625c-.712.89-1.1 1.996-1.1 3.135V14l2.1 7h8.337c1.836 0 3.435-1.25 3.88-3.03l1.622-6.485C22.254 10.223 21.3 9 20 9z' })
						)
					);
					break;
				case 'gridicons-time':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm3.8 13.4L13 11.667V7h-2v5.333l3.2 4.266 1.6-1.2z' })
						)
					);
					break;
				case 'gridicons-trash':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M6.187 8h11.625l-.695 11.125C17.05 20.18 16.177 21 15.12 21H8.88c-1.057 0-1.93-.82-1.997-1.875L6.187 8zM19 5v2H5V5h3V4c0-1.105.895-2 2-2h4c1.105 0 2 .895 2 2v1h3zm-9 0h4V4h-4v1z' })
						)
					);
					break;
				case 'gridicons-trophy':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18 5.062V3H6v2.062H2V8c0 2.525 1.89 4.598 4.324 4.932.7 2.058 2.485 3.61 4.676 3.978V18c0 1.105-.895 2-2 2H8v2h8v-2h-1c-1.105 0-2-.895-2-2v-1.09c2.19-.368 3.976-1.92 4.676-3.978C20.11 12.598 22 10.525 22 8V5.062h-4zM4 8v-.938h2v3.766C4.836 10.416 4 9.304 4 8zm16 0c0 1.304-.836 2.416-2 2.83V7.06h2V8z' })
						)
					);
					break;
				case 'gridicons-types':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M22 17c0 2.76-2.24 5-5 5s-5-2.24-5-5 2.24-5 5-5 5 2.24 5 5zM6.5 6.5h3.8L7 1 1 11h5.5V6.5zm9.5 4.085V8H8v8h2.585c.433-2.783 2.632-4.982 5.415-5.415z' })
						)
					);
					break;
				case 'gridicons-underline':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M4 19v2h16v-2H4zM18 3v8c0 3.314-2.686 6-6 6s-6-2.686-6-6V3h3v8c0 1.654 1.346 3 3 3s3-1.346 3-3V3h3z' })
						)
					);
					break;
				case 'gridicons-undo':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M18.142 5.93C16.97 4.756 15.435 4.17 13.9 4.17s-3.072.586-4.244 1.757L6 9.585V6H4v7h7v-2H7.414l3.657-3.657c.756-.755 1.76-1.172 2.83-1.172 1.067 0 2.072.417 2.827 1.173 1.56 1.56 1.56 4.097 0 5.657l-5.364 5.364 1.414 1.414 5.364-5.364c2.345-2.343 2.345-6.142.002-8.485z' })
						)
					);
					break;
				case 'gridicons-user-circle':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm0 18.5c-4.694 0-8.5-3.806-8.5-8.5S7.306 3.5 12 3.5s8.5 3.806 8.5 8.5-3.806 8.5-8.5 8.5zm0-8c-3.038 0-5.5 1.728-5.5 3.5s2.462 3.5 5.5 3.5 5.5-1.728 5.5-3.5-2.462-3.5-5.5-3.5zm0-.5c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3z' })
						)
					);
					break;
				case 'gridicons-user':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 4c2.21 0 4 1.79 4 4s-1.79 4-4 4-4-1.79-4-4 1.79-4 4-4zm0 16s8 0 8-2c0-2.4-3.9-5-8-5s-8 2.6-8 5c0 2 8 2 8 2z' })
						)
					);
					break;
				case 'gridicons-video-camera':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M17 9V7c0-1.105-.895-2-2-2H4c-1.105 0-2 .895-2 2v10c0 1.105.895 2 2 2h11c1.105 0 2-.895 2-2v-2l5 4V5l-5 4z' })
						)
					);
					break;
				case 'gridicons-video':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M20 4v2h-2V4H6v2H4V4c-1.105 0-2 .895-2 2v12c0 1.105.895 2 2 2v-2h2v2h12v-2h2v2c1.105 0 2-.895 2-2V6c0-1.105-.895-2-2-2zM6 16H4v-3h2v3zm0-5H4V8h2v3zm4 4V9l4.5 3-4.5 3zm10 1h-2v-3h2v3zm0-5h-2V8h2v3z' })
						)
					);
					break;
				case 'gridicons-visible':
					svg = React.createElement(
						'svg',
						{ className: iconClass, height: this.props.size, width: this.props.size, onClick: this.props.onClick, xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 24 24' },
						React.createElement(
							'g',
							null,
							React.createElement('path', { d: 'M12 6C5.188 6 1 12 1 12s4.188 6 11 6 11-6 11-6-4.188-6-11-6zm0 10c-3.943 0-6.926-2.484-8.38-4 1.04-1.085 2.863-2.657 5.255-3.47C8.335 9.214 8 10.064 8 11c0 2.21 1.79 4 4 4s4-1.79 4-4c0-.937-.335-1.787-.875-2.47 2.393.813 4.216 2.386 5.254 3.47-1.456 1.518-4.438 4-8.38 4z' })
						)
					);
					break;
			}
	
			return svg;
		}
	});
	
	module.exports = Gridicon;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _function = __webpack_require__(189);
	
	var _function2 = _interopRequireDefault(_function);
	
	exports['default'] = {
	  shouldComponentUpdate: _function2['default']
	};
	module.exports = exports['default'];

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = shouldPureComponentUpdate;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _shallowEqual = __webpack_require__(190);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	function shouldPureComponentUpdate(nextProps, nextState) {
	  return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);
	}
	
	module.exports = exports['default'];

/***/ },
/* 190 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = shallowEqual;
	
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = exports['default'];

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getCurrentUser = getCurrentUser;
	exports.getCurrentUserLocale = getCurrentUserLocale;
	exports.canCurrentUser = canCurrentUser;
	
	var _selectors = __webpack_require__(192);
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the user object for the current user.
	 *
	 * @param  {Object}  state  Global state tree
	 * @return {?Object}        Current user
	 */
	/**
	 * Internal dependencies
	 */
	function getCurrentUser(state) {
	  if (!state.currentUser.id) {
	    return null;
	  }
	
	  return (0, _selectors.getUser)(state, state.currentUser.id);
	}
	
	/**
	 * Returns the locale slug for the current user.
	 *
	 * @param  {Object}  state  Global state tree
	 * @return {?String}        Current user locale
	 */
	function getCurrentUserLocale(state) {
	  var user = getCurrentUser(state);
	  if (!user) {
	    return null;
	  }
	
	  return user.localeSlug || null;
	}
	
	/**
	 * Returns true if the current user has the specified capability for the site,
	 * false if the user does not have the capability, or null if the capability
	 * cannot be determined (if the site is not currently known, or if specifying
	 * an invalid capability).
	 *
	 * @see https://codex.wordpress.org/Function_Reference/current_user_can
	 *
	 * @param  {Object}   state      Global state tree
	 * @param  {Number}   siteId     Site ID
	 * @param  {String}   capability Capability label
	 * @return {?Boolean}            Whether current user has capability
	 */
	function canCurrentUser(state, siteId, capability) {
	  return (0, _get2.default)(state.currentUser.capabilities, [siteId, capability], null);
	}

/***/ },
/* 192 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getUser = getUser;
	/**
	 * Returns a user object by user ID.
	 *
	 * @param  {Object} state  Global state tree
	 * @param  {Number} userId User ID
	 * @return {Object}        User object
	 */
	function getUser(state, userId) {
	  return state.users.items[userId];
	}

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _map = __webpack_require__(194);
	
	var _map2 = _interopRequireDefault(_map);
	
	exports.makeElement = makeElement;
	exports.fetchThemeDetailsData = fetchThemeDetailsData;
	exports.details = details;
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(172);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _startsWith = __webpack_require__(251);
	
	var _startsWith2 = _interopRequireDefault(_startsWith);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _main = __webpack_require__(253);
	
	var _main2 = _interopRequireDefault(_main);
	
	var _themeDetails = __webpack_require__(495);
	
	var _themeDetails2 = _interopRequireDefault(_themeDetails);
	
	var _selectors = __webpack_require__(191);
	
	var _selectors2 = __webpack_require__(496);
	
	var _clientSideEffects = __webpack_require__(497);
	
	var _clientSideEffects2 = _interopRequireDefault(_clientSideEffects);
	
	var _actions = __webpack_require__(330);
	
	var _wp = __webpack_require__(392);
	
	var _wp2 = _interopRequireDefault(_wp);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _formatting = __webpack_require__(498);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var debug = (0, _debug2.default)('calypso:themes');
	
	/**
	 * Internal Dependencies
	 */
	/**
	 * External Dependencies
	 */
	
	var themeDetailsCache = new _map2.default();
	
	function makeElement(ThemesComponent, Head, store, props) {
		return _react2.default.createElement(
			_reactRedux.Provider,
			{ store: store },
			_react2.default.createElement(
				Head,
				{ title: props.title, tier: props.tier || 'all' },
				_react2.default.createElement(ThemesComponent, (0, _omit2.default)(props, ['title', 'runClientAnalytics'])),
				_react2.default.createElement(
					_clientSideEffects2.default,
					null,
					props.runClientAnalytics
				)
			)
		);
	}
	
	function fetchThemeDetailsData(context, next) {
		if (!_config2.default.isEnabled('manage/themes/details') || !context.isServerSide) {
			return next();
		}
	
		var themeSlug = context.params.slug;
		var theme = themeDetailsCache.get(themeSlug);
	
		var HOUR_IN_MS = 3600000;
		if (theme && theme.timestamp + HOUR_IN_MS > Date.now()) {
			debug('found theme!', theme.id);
			context.store.dispatch((0, _actions.receiveThemeDetails)(theme));
			context.renderCacheKey = context.path + theme.timestamp;
			return next();
		}
	
		_wp2.default.undocumented().themeDetails(themeSlug).then(function (themeDetails) {
			debug('caching', themeSlug);
			themeDetails.timestamp = Date.now();
			themeDetailsCache.set(themeSlug, themeDetails);
			context.store.dispatch((0, _actions.receiveThemeDetails)(themeDetails));
			context.renderCacheKey = context.path + themeDetails.timestamp;
			next();
		}).catch(function (error) {
			debug('Error fetching theme ' + themeSlug + ' details: ', error.message || error);
			context.store.dispatch((0, _actions.receiveThemeDetailsFailure)(themeSlug, error));
			context.renderCacheKey = 'theme not found';
			next();
		});
	}
	
	function details(context, next) {
		var slug = context.params.slug;
	
		var user = (0, _selectors.getCurrentUser)(context.store.getState());
		var themeName = ((0, _selectors2.getThemeDetails)(context.store.getState(), slug) || false).name;
		var title = _i18nCalypso2.default.translate('%(themeName)s Theme', {
			args: { themeName: themeName }
		});
		var Head = user ? __webpack_require__(505) : __webpack_require__(507);
	
		var props = {
			themeSlug: slug,
			contentSection: context.params.section,
			title: (0, _formatting.decodeEntities)(title) + ' — WordPress.com', // TODO: Use lib/screen-title's buildTitle. Cf. https://github.com/Automattic/wp-calypso/issues/3796
			isLoggedIn: !!user
		};
	
		if ((0, _startsWith2.default)(context.prevPath, '/design')) {
			context.store.dispatch((0, _actions.setBackPath)(context.prevPath));
		}
	
		var ConnectedComponent = function ConnectedComponent(_ref) {
			var themeSlug = _ref.themeSlug;
			var contentSection = _ref.contentSection;
			var isLoggedIn = _ref.isLoggedIn;
			return _react2.default.createElement(
				_themeDetails2.default,
				{ id: themeSlug },
				_react2.default.createElement(_main2.default, { section: contentSection, isLoggedIn: isLoggedIn })
			);
		};
	
		context.primary = makeElement(ConnectedComponent, Head, context.store, props);
		context.secondary = null; // When we're logged in, we need to remove the sidebar.
		next();
	}

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(195), __esModule: true };

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(196);
	__webpack_require__(197);
	__webpack_require__(210);
	__webpack_require__(214);
	__webpack_require__(230);
	module.exports = __webpack_require__(47).Map;

/***/ },
/* 196 */
/***/ function(module, exports) {



/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(198)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(199)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(70)
	  , defined   = __webpack_require__(67);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(200)
	  , $export        = __webpack_require__(45)
	  , redefine       = __webpack_require__(201)
	  , hide           = __webpack_require__(50)
	  , has            = __webpack_require__(63)
	  , Iterators      = __webpack_require__(202)
	  , $iterCreate    = __webpack_require__(203)
	  , setToStringTag = __webpack_require__(207)
	  , getPrototypeOf = __webpack_require__(209)
	  , ITERATOR       = __webpack_require__(208)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 200 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(50);

/***/ },
/* 202 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(204)
	  , descriptor     = __webpack_require__(59)
	  , setToStringTag = __webpack_require__(207)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(50)(IteratorPrototype, __webpack_require__(208)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(52)
	  , dPs         = __webpack_require__(205)
	  , enumBugKeys = __webpack_require__(75)
	  , IE_PROTO    = __webpack_require__(72)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(57)('iframe')
	    , i      = enumBugKeys.length
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(206).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write('<script>document.F=Object</script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(51)
	  , anObject = __webpack_require__(52)
	  , getKeys  = __webpack_require__(61);
	
	module.exports = __webpack_require__(55) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(46).document && document.documentElement;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(51).f
	  , has = __webpack_require__(63)
	  , TAG = __webpack_require__(208)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(73)('wks')
	  , uid        = __webpack_require__(74)
	  , Symbol     = __webpack_require__(46).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(63)
	  , toObject    = __webpack_require__(78)
	  , IE_PROTO    = __webpack_require__(72)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(211);
	var global        = __webpack_require__(46)
	  , hide          = __webpack_require__(50)
	  , Iterators     = __webpack_require__(202)
	  , TO_STRING_TAG = __webpack_require__(208)('toStringTag');
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(212)
	  , step             = __webpack_require__(213)
	  , Iterators        = __webpack_require__(202)
	  , toIObject        = __webpack_require__(64);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(199)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 212 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 213 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(215);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(225)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(51).f
	  , create      = __webpack_require__(204)
	  , hide        = __webpack_require__(50)
	  , redefineAll = __webpack_require__(216)
	  , ctx         = __webpack_require__(48)
	  , anInstance  = __webpack_require__(217)
	  , defined     = __webpack_require__(67)
	  , forOf       = __webpack_require__(218)
	  , $iterDefine = __webpack_require__(199)
	  , step        = __webpack_require__(213)
	  , setSpecies  = __webpack_require__(223)
	  , DESCRIPTORS = __webpack_require__(55)
	  , fastKey     = __webpack_require__(224).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var hide = __webpack_require__(50);
	module.exports = function(target, src, safe){
	  for(var key in src){
	    if(safe && target[key])target[key] = src[key];
	    else hide(target, key, src[key]);
	  } return target;
	};

/***/ },
/* 217 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(48)
	  , call        = __webpack_require__(219)
	  , isArrayIter = __webpack_require__(220)
	  , anObject    = __webpack_require__(52)
	  , toLength    = __webpack_require__(69)
	  , getIterFn   = __webpack_require__(221)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(52);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(202)
	  , ITERATOR   = __webpack_require__(208)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(222)
	  , ITERATOR  = __webpack_require__(208)('iterator')
	  , Iterators = __webpack_require__(202);
	module.exports = __webpack_require__(47).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(66)
	  , TAG = __webpack_require__(208)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(46)
	  , core        = __webpack_require__(47)
	  , dP          = __webpack_require__(51)
	  , DESCRIPTORS = __webpack_require__(55)
	  , SPECIES     = __webpack_require__(208)('species');
	
	module.exports = function(KEY){
	  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(74)('meta')
	  , isObject = __webpack_require__(53)
	  , has      = __webpack_require__(63)
	  , setDesc  = __webpack_require__(51).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(56)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(46)
	  , $export        = __webpack_require__(45)
	  , meta           = __webpack_require__(224)
	  , fails          = __webpack_require__(56)
	  , hide           = __webpack_require__(50)
	  , redefineAll    = __webpack_require__(216)
	  , forOf          = __webpack_require__(218)
	  , anInstance     = __webpack_require__(217)
	  , isObject       = __webpack_require__(53)
	  , setToStringTag = __webpack_require__(207)
	  , dP             = __webpack_require__(51).f
	  , each           = __webpack_require__(226)(0)
	  , DESCRIPTORS    = __webpack_require__(55);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    C = wrapper(function(target, iterable){
	      anInstance(target, C, NAME, '_c');
	      target._c = new Base;
	      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);
	    });
	    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){
	      var IS_ADDER = KEY == 'add' || KEY == 'set';
	      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){
	        anInstance(this, C, KEY);
	        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;
	        var result = this._c[KEY](a === 0 ? 0 : a, b);
	        return IS_ADDER ? this : result;
	      });
	    });
	    if('size' in proto)dP(C.prototype, 'size', {
	      get: function(){
	        return this._c.size;
	      }
	    });
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F, O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(48)
	  , IObject  = __webpack_require__(65)
	  , toObject = __webpack_require__(78)
	  , toLength = __webpack_require__(69)
	  , asc      = __webpack_require__(227);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(228);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(53)
	  , isArray  = __webpack_require__(229)
	  , SPECIES  = __webpack_require__(208)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(66);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(45);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(231)('Map')});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(222)
	  , from    = __webpack_require__(232);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(218);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(150),
	    baseDifference = __webpack_require__(234),
	    baseFlatten = __webpack_require__(243),
	    basePick = __webpack_require__(245),
	    keysIn = __webpack_require__(247),
	    rest = __webpack_require__(24);
	
	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable properties of `object` that are not omitted.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [props] The property names to omit, specified
	 *  individually or in arrays.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = rest(function(object, props) {
	  if (object == null) {
	    return {};
	  }
	  props = arrayMap(baseFlatten(props, 1), String);
	  return basePick(object, baseDifference(keysIn(object), props));
	});
	
	module.exports = omit;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(235),
	    arrayIncludes = __webpack_require__(237),
	    arrayIncludesWith = __webpack_require__(240),
	    arrayMap = __webpack_require__(150),
	    baseUnary = __webpack_require__(241),
	    cacheHas = __webpack_require__(242);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support for
	 * excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(111),
	    cachePush = __webpack_require__(236);
	
	/**
	 *
	 * Creates a set cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.push(values[index]);
	  }
	}
	
	// Add functions to the `SetCache`.
	SetCache.prototype.push = cachePush;
	
	module.exports = SetCache;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(125);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the set cache.
	 *
	 * @private
	 * @name push
	 * @memberOf SetCache
	 * @param {*} value The value to cache.
	 */
	function cachePush(value) {
	  var map = this.__data__;
	  if (isKeyable(value)) {
	    var data = map.__data__,
	        hash = typeof value == 'string' ? data.string : data.hash;
	
	    hash[value] = HASH_UNDEFINED;
	  }
	  else {
	    map.set(value, HASH_UNDEFINED);
	  }
	}
	
	module.exports = cachePush;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(238);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  return !!array.length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var indexOfNaN = __webpack_require__(239);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  if (value !== value) {
	    return indexOfNaN(array, fromIndex);
	  }
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseIndexOf;


/***/ },
/* 239 */
/***/ function(module, exports) {

	/**
	 * Gets the index at which the first occurrence of `NaN` is found in `array`.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	 */
	function indexOfNaN(array, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 0 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    var other = array[index];
	    if (other !== other) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = indexOfNaN;


/***/ },
/* 240 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.includesWith` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ },
/* 241 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing wrapper metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(125);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Checks if `value` is in `cache`.
	 *
	 * @private
	 * @param {Object} cache The set cache to search.
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function cacheHas(cache, value) {
	  var map = cache.__data__;
	  if (isKeyable(value)) {
	    var data = map.__data__,
	        hash = typeof value == 'string' ? data.string : data.hash;
	
	    return hash[value] === HASH_UNDEFINED;
	  }
	  return map.has(value);
	}
	
	module.exports = cacheHas;


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(244),
	    isArguments = __webpack_require__(33),
	    isArray = __webpack_require__(36),
	    isArrayLikeObject = __webpack_require__(34);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, isStrict, result) {
	  result || (result = []);
	
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && isArrayLikeObject(value) &&
	        (isStrict || isArray(value) || isArguments(value))) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ },
/* 244 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(246);
	
	/**
	 * The base implementation of `_.pick` without support for individual
	 * property names.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} props The property names to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, props) {
	  object = Object(object);
	  return arrayReduce(props, function(result, key) {
	    if (key in object) {
	      result[key] = object[key];
	    }
	    return result;
	  }, {});
	}
	
	module.exports = basePick;


/***/ },
/* 246 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var baseKeysIn = __webpack_require__(248),
	    indexKeys = __webpack_require__(31),
	    isIndex = __webpack_require__(23),
	    isPrototype = __webpack_require__(38);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  var index = -1,
	      isProto = isPrototype(object),
	      props = baseKeysIn(object),
	      propsLength = props.length,
	      indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  while (++index < propsLength) {
	    var key = props[index];
	    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keysIn;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var Reflect = __webpack_require__(249),
	    iteratorToArray = __webpack_require__(250);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var enumerate = Reflect ? Reflect.enumerate : undefined,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  object = object == null ? object : Object(object);
	
	  var result = [];
	  for (var key in object) {
	    result.push(key);
	  }
	  return result;
	}
	
	// Fallback for IE < 9 with es6-shim.
	if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
	  baseKeysIn = function(object) {
	    return iteratorToArray(enumerate(object));
	  };
	}
	
	module.exports = baseKeysIn;


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(119);
	
	/** Built-in value references. */
	var Reflect = root.Reflect;
	
	module.exports = Reflect;


/***/ },
/* 250 */
/***/ function(module, exports) {

	/**
	 * Converts `iterator` to an array.
	 *
	 * @private
	 * @param {Object} iterator The iterator to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function iteratorToArray(iterator) {
	  var data,
	      result = [];
	
	  while (!(data = iterator.next()).done) {
	    result.push(data.value);
	  }
	  return result;
	}
	
	module.exports = iteratorToArray;


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(252),
	    toInteger = __webpack_require__(26),
	    toString = __webpack_require__(156);
	
	/**
	 * Checks if `string` starts with the given target string.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to search.
	 * @param {string} [target] The string to search for.
	 * @param {number} [position=0] The position to search from.
	 * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.
	 * @example
	 *
	 * _.startsWith('abc', 'a');
	 * // => true
	 *
	 * _.startsWith('abc', 'b');
	 * // => false
	 *
	 * _.startsWith('abc', 'b', 1);
	 * // => true
	 */
	function startsWith(string, target, position) {
	  string = toString(string);
	  position = baseClamp(toInteger(position), 0, string.length);
	  return string.lastIndexOf(target, position) == position;
	}
	
	module.exports = startsWith;


/***/ },
/* 252 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
	 *
	 * @private
	 * @param {number} number The number to clamp.
	 * @param {number} [lower] The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the clamped number.
	 */
	function baseClamp(number, lower, upper) {
	  if (number === number) {
	    if (upper !== undefined) {
	      number = number <= upper ? number : upper;
	    }
	    if (lower !== undefined) {
	      number = number >= lower ? number : lower;
	    }
	  }
	  return number;
	}
	
	module.exports = baseClamp;


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(172);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _main = __webpack_require__(254);
	
	var _main2 = _interopRequireDefault(_main);
	
	var _headerCake = __webpack_require__(255);
	
	var _headerCake2 = _interopRequireDefault(_headerCake);
	
	var _sectionHeader = __webpack_require__(294);
	
	var _sectionHeader2 = _interopRequireDefault(_sectionHeader);
	
	var _themeDownloadCard = __webpack_require__(297);
	
	var _themeDownloadCard2 = _interopRequireDefault(_themeDownloadCard);
	
	var _themesRelatedCard = __webpack_require__(298);
	
	var _themesRelatedCard2 = _interopRequireDefault(_themesRelatedCard);
	
	var _button = __webpack_require__(292);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _sectionNav = __webpack_require__(312);
	
	var _sectionNav2 = _interopRequireDefault(_sectionNav);
	
	var _tabs = __webpack_require__(314);
	
	var _tabs2 = _interopRequireDefault(_tabs);
	
	var _item = __webpack_require__(327);
	
	var _item2 = _interopRequireDefault(_item);
	
	var _card = __webpack_require__(286);
	
	var _card2 = _interopRequireDefault(_card);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	var _actions = __webpack_require__(330);
	
	var _selectors = __webpack_require__(480);
	
	var _selectors2 = __webpack_require__(481);
	
	var _helpers = __webpack_require__(309);
	
	var _activatingTheme = __webpack_require__(485);
	
	var _activatingTheme2 = _interopRequireDefault(_activatingTheme);
	
	var _thanksModal = __webpack_require__(486);
	
	var _thanksModal2 = _interopRequireDefault(_thanksModal);
	
	var _queryCurrentTheme = __webpack_require__(487);
	
	var _queryCurrentTheme2 = _interopRequireDefault(_queryCurrentTheme);
	
	var _selectors3 = __webpack_require__(356);
	
	var _themesSiteSelectorModal = __webpack_require__(486);
	
	var _themesSiteSelectorModal2 = _interopRequireDefault(_themesSiteSelectorModal);
	
	var _actionLabels = __webpack_require__(488);
	
	var _actionLabels2 = _interopRequireDefault(_actionLabels);
	
	var _selectors4 = __webpack_require__(489);
	
	var _emptyContent = __webpack_require__(490);
	
	var _emptyContent2 = _interopRequireDefault(_emptyContent);
	
	var _themePreview = __webpack_require__(491);
	
	var _themePreview2 = _interopRequireDefault(_themePreview);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var ThemeSheet = _react2.default.createClass({
		displayName: 'ThemeSheet',
	
		propTypes: {
			id: _react2.default.PropTypes.string,
			name: _react2.default.PropTypes.string,
			author: _react2.default.PropTypes.string,
			screenshot: _react2.default.PropTypes.string,
			price: _react2.default.PropTypes.string,
			description: _react2.default.PropTypes.string,
			descriptionLong: _react2.default.PropTypes.string,
			supportDocumentation: _react2.default.PropTypes.string,
			download: _react2.default.PropTypes.string,
			taxonomies: _react2.default.PropTypes.object,
			stylesheet: _react2.default.PropTypes.string,
			isLoggedIn: _react2.default.PropTypes.bool,
			// Connected props
			selectedSite: _react2.default.PropTypes.object,
			siteSlug: _react2.default.PropTypes.string,
			currentTheme: _react2.default.PropTypes.object,
			backPath: _react2.default.PropTypes.string
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				section: 'overview'
			};
		},
		getInitialState: function getInitialState() {
			return { selectedAction: null };
		},
		componentDidMount: function componentDidMount() {
			window.scroll(0, 0);
		},
		hideSiteSelectorModal: function hideSiteSelectorModal() {
			this.setState({ selectedAction: null });
		},
		isActive: function isActive() {
			var _props = this.props;
			var id = _props.id;
			var currentTheme = _props.currentTheme;
	
			return currentTheme && currentTheme.id === id;
		},
		onPrimaryClick: function onPrimaryClick() {
			if (!this.props.isLoggedIn) {
				this.props.signup(this.props);
			} else if (this.isActive()) {
				this.props.customize(this.props, this.props.selectedSite);
			} else if ((0, _helpers.isPremium)(this.props)) {
				// TODO: check theme is not already purchased
				this.selectSiteAndDispatch('purchase');
			} else {
				this.selectSiteAndDispatch('activate');
			}
		},
		onPreviewButtonClick: function onPreviewButtonClick() {
			if (!this.props.isLoggedIn) {
				this.props.signup(this.props);
			} else {
				this.selectSiteAndDispatch('customize');
			}
		},
		selectSiteAndDispatch: function selectSiteAndDispatch(action) {
			if (this.props.selectedSite) {
				this.props[action](this.props, this.props.selectedSite, 'showcase-sheet');
			} else {
				this.setState({ selectedAction: action });
			}
		},
		getValidSections: function getValidSections() {
			var validSections = [];
			validSections.push('overview');
			this.props.supportDocumentation && validSections.push('setup');
			validSections.push('support');
			return validSections;
		},
		validateSection: function validateSection(section) {
			if (this.getValidSections().indexOf(section) === -1) {
				return this.getValidSections()[0];
			}
			return section;
		},
		togglePreview: function togglePreview() {
			this.setState({ showPreview: !this.state.showPreview });
		},
		renderBar: function renderBar() {
			var placeholder = _react2.default.createElement(
				'span',
				{ className: 'themes__sheet-placeholder' },
				'loading.....'
			);
			var title = this.props.name || placeholder;
			var tag = this.props.author ? _i18nCalypso2.default.translate('by %(author)s', { args: { author: this.props.author } }) : placeholder;
	
			return _react2.default.createElement(
				'div',
				{ className: 'themes__sheet-bar' },
				_react2.default.createElement(
					'span',
					{ className: 'themes__sheet-bar-title' },
					title
				),
				_react2.default.createElement(
					'span',
					{ className: 'themes__sheet-bar-tag' },
					tag
				)
			);
		},
		renderScreenshot: function renderScreenshot() {
			var img = _react2.default.createElement('img', { className: 'themes__sheet-img', src: this.props.screenshot + '?=w680' });
			return _react2.default.createElement(
				'div',
				{ className: 'themes__sheet-screenshot' },
				_react2.default.createElement(
					'a',
					{ className: 'themes__sheet-preview-link', onClick: this.togglePreview },
					_react2.default.createElement(_gridicon2.default, { icon: 'themes', size: 18 }),
					_react2.default.createElement(
						'span',
						{ className: 'themes__sheet-preview-link-text' },
						_i18nCalypso2.default.translate('Open Live Demo', { context: 'Individual theme live preview button' })
					)
				),
				this.props.screenshot && img
			);
		},
		renderSectionNav: function renderSectionNav(currentSection) {
			var filterStrings = {
				overview: _i18nCalypso2.default.translate('Overview', { context: 'Filter label for theme content' }),
				setup: _i18nCalypso2.default.translate('Setup', { context: 'Filter label for theme content' }),
				support: _i18nCalypso2.default.translate('Support', { context: 'Filter label for theme content' })
			};
	
			var _props2 = this.props;
			var siteSlug = _props2.siteSlug;
			var id = _props2.id;
	
			var sitePart = siteSlug ? '/' + siteSlug : '';
	
			var nav = _react2.default.createElement(
				_tabs2.default,
				{ label: 'Details' },
				this.getValidSections().map(function (section) {
					return _react2.default.createElement(
						_item2.default,
						{ key: section,
							path: '/theme/' + id + '/' + section + sitePart,
							selected: section === currentSection },
						filterStrings[section]
					);
				})
			);
	
			return _react2.default.createElement(
				_sectionNav2.default,
				{ className: 'themes__sheet-section-nav', selectedText: filterStrings[currentSection] },
				this.props.name && nav
			);
		},
		renderSectionContent: function renderSectionContent(section) {
			return {
				overview: this.renderOverviewTab(),
				setup: this.renderSetupTab(),
				support: this.renderSupportTab()
			}[section];
		},
		renderOverviewTab: function renderOverviewTab() {
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					_card2.default,
					{ className: 'themes__sheet-content' },
					_react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: this.props.descriptionLong } })
				),
				this.renderFeaturesCard(),
				this.renderDownload(),
				this.renderRelatedThemes()
			);
		},
		renderSetupTab: function renderSetupTab() {
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					_card2.default,
					{ className: 'themes__sheet-content' },
					_react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: this.props.supportDocumentation } })
				)
			);
		},
		renderSupportTab: function renderSupportTab() {
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					_card2.default,
					{ className: 'themes__sheet-card-support' },
					_react2.default.createElement(_gridicon2.default, { icon: 'comment', size: 48 }),
					_react2.default.createElement(
						'div',
						{ className: 'themes__sheet-card-support-details' },
						_i18nCalypso2.default.translate('Need extra help?'),
						_react2.default.createElement(
							'small',
							null,
							_i18nCalypso2.default.translate('Visit the theme support forum')
						)
					),
					_react2.default.createElement(
						_button2.default,
						{ primary: true, href: (0, _helpers.getForumUrl)(this.props) },
						'Visit forum'
					)
				),
				_react2.default.createElement(
					_card2.default,
					{ className: 'themes__sheet-card-support' },
					_react2.default.createElement(_gridicon2.default, { icon: 'briefcase', size: 48 }),
					_react2.default.createElement(
						'div',
						{ className: 'themes__sheet-card-support-details' },
						_i18nCalypso2.default.translate('Need CSS help? '),
						_react2.default.createElement(
							'small',
							null,
							_i18nCalypso2.default.translate('Visit the CSS customization forum')
						)
					),
					_react2.default.createElement(
						_button2.default,
						{ href: '//en.forums.wordpress.com/forum/css-customization' },
						'Visit forum'
					)
				)
			);
		},
		renderFeaturesCard: function renderFeaturesCard() {
			var themeFeatures = this.props.taxonomies && this.props.taxonomies.features instanceof Array ? this.props.taxonomies.features.map(function (item, i) {
				return _react2.default.createElement(
					'li',
					{ key: 'theme-features-item-' + i++ },
					_react2.default.createElement(
						'span',
						null,
						item.name
					)
				);
			}) : [];
	
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_sectionHeader2.default, { label: _i18nCalypso2.default.translate('Features') }),
				_react2.default.createElement(
					_card2.default,
					null,
					_react2.default.createElement(
						'ul',
						{ className: 'themes__sheet-features-list' },
						themeFeatures
					)
				)
			);
		},
		renderDownload: function renderDownload() {
			if ('Free' !== this.props.price) {
				return null;
			}
			return _react2.default.createElement(_themeDownloadCard2.default, { theme: this.props.id, href: this.props.download });
		},
		renderPreview: function renderPreview() {
			var buttonLabel = this.props.isLoggedIn ? _i18nCalypso2.default.translate('Try & Customize') : _i18nCalypso2.default.translate('Pick this design');
			return _react2.default.createElement(_themePreview2.default, { showPreview: this.state.showPreview,
				theme: this.props,
				onClose: this.togglePreview,
				buttonLabel: buttonLabel,
				onButtonClick: this.onPreviewButtonClick });
		},
		renderError: function renderError() {
			var emptyContentTitle = _i18nCalypso2.default.translate('Looking for great WordPress designs?', {
				comment: 'Message displayed when requested theme was not found'
			});
			var emptyContentMessage = _i18nCalypso2.default.translate('Check our theme showcase', {
				comment: 'Message displayed when requested theme was not found'
			});
	
			return _react2.default.createElement(
				_main2.default,
				null,
				_react2.default.createElement(_emptyContent2.default, {
					title: emptyContentTitle,
					line: emptyContentMessage,
					action: _i18nCalypso2.default.translate('View the showcase'),
					actionURL: '/design' })
			);
		},
		renderRelatedThemes: function renderRelatedThemes() {
			return _react2.default.createElement(_themesRelatedCard2.default, { currentTheme: this.props.id });
		},
		renderSheet: function renderSheet() {
			var actionTitle = _react2.default.createElement(
				'span',
				{ className: 'themes__sheet-button-placeholder' },
				'loading......'
			);
			if (this.isActive()) {
				actionTitle = _i18nCalypso2.default.translate('Customize');
			} else if (this.props.name) {
				actionTitle = _i18nCalypso2.default.translate('Pick this design');
			}
	
			var section = this.validateSection(this.props.section);
			var priceElement = _react2.default.createElement(
				'span',
				{ className: 'themes__sheet-action-bar-cost' },
				this.props.price
			);
			var siteID = this.props.selectedSite && this.props.selectedSite.ID;
	
			return _react2.default.createElement(
				_main2.default,
				{ className: 'themes__sheet' },
				this.renderBar(),
				siteID && _react2.default.createElement(_queryCurrentTheme2.default, { siteId: siteID }),
				_react2.default.createElement(
					_activatingTheme2.default,
					{ siteId: siteID },
					_react2.default.createElement(_thanksModal2.default, {
						site: this.props.selectedSite,
						source: 'details',
						clearActivated: this.props.clearActivated })
				),
				this.state.selectedAction && _react2.default.createElement(_themesSiteSelectorModal2.default, {
					name: this.state.selectedAction,
					label: _actionLabels2.default[this.state.selectedAction].label,
					header: _actionLabels2.default[this.state.selectedAction].header,
					selectedTheme: this.props,
					onHide: this.hideSiteSelectorModal,
					action: this.props[this.state.selectedAction],
					sourcePath: '/theme/' + this.props.id + '/' + section
				}),
				this.state.showPreview && this.renderPreview(),
				_react2.default.createElement(
					_headerCake2.default,
					{ className: 'themes__sheet-action-bar',
						backHref: this.props.backPath,
						backText: _i18nCalypso2.default.translate('All Themes') },
					_react2.default.createElement(
						_button2.default,
						{ className: 'themes__sheet-primary-button', onClick: this.onPrimaryClick },
						actionTitle,
						!this.isActive() && priceElement
					)
				),
				_react2.default.createElement(
					'div',
					{ className: 'themes__sheet-columns' },
					_react2.default.createElement(
						'div',
						{ className: 'themes__sheet-column-left' },
						_react2.default.createElement(
							'div',
							{ className: 'themes__sheet-content' },
							this.renderSectionNav(section),
							this.renderSectionContent(section),
							_react2.default.createElement(
								'div',
								{ className: 'footer__line' },
								_react2.default.createElement(_gridicon2.default, { icon: 'my-sites' })
							)
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'themes__sheet-column-right' },
						this.renderScreenshot()
					)
				)
			);
		},
		render: function render() {
			if (this.props.error) {
				return this.renderError();
			}
			return this.renderSheet();
		}
	}); /** @ssr-ready **/
	
	/* eslint-disable react/no-danger  */
	// FIXME!!!^ we want to ensure we have sanitised data…
	
	/**
	 * External dependencies
	 */
	
	
	exports.default = (0, _reactRedux.connect)(function (state) {
		var selectedSite = (0, _selectors.getSelectedSite)(state);
		var siteSlug = selectedSite ? (0, _selectors2.getSiteSlug)(state, selectedSite.ID) : '';
		var currentTheme = (0, _selectors3.getCurrentTheme)(state, selectedSite && selectedSite.ID);
		var backPath = (0, _selectors4.getBackPath)(state);
		return { selectedSite: selectedSite, siteSlug: siteSlug, currentTheme: currentTheme, backPath: backPath };
	}, { signup: _actions.signup, purchase: _actions.purchase, activate: _actions.activate, clearActivated: _actions.clearActivated, customize: _actions.customize })(ThemeSheet);
	module.exports = exports['default'];

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var React = __webpack_require__(170),
	    classnames = __webpack_require__(182);
	
	module.exports = React.createClass({
		displayName: 'Main',
	
		render: function render() {
			return React.createElement(
				'main',
				{ className: classnames(this.props.className, 'main'), role: 'main' },
				this.props.children
			);
		}
	});

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _card = __webpack_require__(286);
	
	var _card2 = _interopRequireDefault(_card);
	
	var _back = __webpack_require__(287);
	
	var _back2 = _interopRequireDefault(_back);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	var HeaderCake = function (_Component) {
		(0, _inherits3.default)(HeaderCake, _Component);
	
		function HeaderCake() {
			(0, _classCallCheck3.default)(this, HeaderCake);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(HeaderCake).apply(this, arguments));
		}
	
		(0, _createClass3.default)(HeaderCake, [{
			key: 'render',
			value: function render() {
				var _props = this.props;
				var backText = _props.backText;
				var backHref = _props.backHref;
	
				var classes = (0, _classnames2.default)('header-cake', this.props.className, { 'is-compact': this.props.isCompact });
	
				return _react2.default.createElement(
					_card2.default,
					{ className: classes },
					_react2.default.createElement(_back2.default, {
						text: backText,
						href: backHref,
						onClick: this.props.onClick
					}),
					_react2.default.createElement(
						'div',
						{
							className: 'header-cake__title',
							onClick: this.props.onTitleClick
						},
						this.props.children
					),
					_react2.default.createElement(_back2.default, { text: backText, href: backHref, spacer: true })
				);
			}
		}]);
		return HeaderCake;
	}(_react.Component);
	
	exports.default = HeaderCake;
	
	
	HeaderCake.displayName = 'HeaderCake';
	
	HeaderCake.propTypes = {
		onClick: _react.PropTypes.func,
		onTitleClick: _react.PropTypes.func,
		backText: _react.PropTypes.string,
		backHref: _react.PropTypes.string
	};
	
	HeaderCake.defaultProps = {
		isCompact: false
	};
	module.exports = exports['default'];

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(257), __esModule: true };

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(258);
	module.exports = __webpack_require__(47).Object.getPrototypeOf;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(78)
	  , $getPrototypeOf = __webpack_require__(209);
	
	__webpack_require__(259)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(45)
	  , core    = __webpack_require__(47)
	  , fails   = __webpack_require__(56);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 260 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(179);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(264);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(267);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(265), __esModule: true };

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(197);
	__webpack_require__(210);
	module.exports = __webpack_require__(266).f('iterator');

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(208);

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(268), __esModule: true };

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(269);
	__webpack_require__(196);
	__webpack_require__(276);
	__webpack_require__(277);
	module.exports = __webpack_require__(47).Symbol;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(46)
	  , has            = __webpack_require__(63)
	  , DESCRIPTORS    = __webpack_require__(55)
	  , $export        = __webpack_require__(45)
	  , redefine       = __webpack_require__(201)
	  , META           = __webpack_require__(224).KEY
	  , $fails         = __webpack_require__(56)
	  , shared         = __webpack_require__(73)
	  , setToStringTag = __webpack_require__(207)
	  , uid            = __webpack_require__(74)
	  , wks            = __webpack_require__(208)
	  , wksExt         = __webpack_require__(266)
	  , wksDefine      = __webpack_require__(270)
	  , keyOf          = __webpack_require__(271)
	  , enumKeys       = __webpack_require__(272)
	  , isArray        = __webpack_require__(229)
	  , anObject       = __webpack_require__(52)
	  , toIObject      = __webpack_require__(64)
	  , toPrimitive    = __webpack_require__(58)
	  , createDesc     = __webpack_require__(59)
	  , _create        = __webpack_require__(204)
	  , gOPNExt        = __webpack_require__(273)
	  , $GOPD          = __webpack_require__(275)
	  , $DP            = __webpack_require__(51)
	  , $keys          = __webpack_require__(61)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(274).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(77).f  = $propertyIsEnumerable;
	  __webpack_require__(76).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(200)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(50)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(46)
	  , core           = __webpack_require__(47)
	  , LIBRARY        = __webpack_require__(200)
	  , wksExt         = __webpack_require__(266)
	  , defineProperty = __webpack_require__(51).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(61)
	  , toIObject = __webpack_require__(64);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(61)
	  , gOPS    = __webpack_require__(76)
	  , pIE     = __webpack_require__(77);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(64)
	  , gOPN      = __webpack_require__(274).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(62)
	  , hiddenKeys = __webpack_require__(75).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(77)
	  , createDesc     = __webpack_require__(59)
	  , toIObject      = __webpack_require__(64)
	  , toPrimitive    = __webpack_require__(58)
	  , has            = __webpack_require__(63)
	  , IE8_DOM_DEFINE = __webpack_require__(54)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(55) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(270)('asyncIterator');

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(270)('observable');

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(279);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(283);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(280), __esModule: true };

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(281);
	module.exports = __webpack_require__(47).Object.setPrototypeOf;

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(45);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(282).set});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(53)
	  , anObject = __webpack_require__(52);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(48)(Function.call, __webpack_require__(275).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(284), __esModule: true };

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(285);
	var $Object = __webpack_require__(47).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(45)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(204)});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _assign = __webpack_require__(10);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	exports.default = _react2.default.createClass({
		displayName: 'Card',
	
		propTypes: {
			className: _react2.default.PropTypes.string,
			href: _react2.default.PropTypes.string,
			tagName: _react2.default.PropTypes.string,
			target: _react2.default.PropTypes.string,
			compact: _react2.default.PropTypes.bool
		},
	
		render: function render() {
			var className = (0, _classnames2.default)('card', this.props.className, {
				'is-card-link': !!this.props.href,
				'is-compact': this.props.compact
			});
	
			var element = this.props.tagName || 'div';
			var linkIndicator = void 0;
			if (this.props.href) {
				element = 'a';
				linkIndicator = _react2.default.createElement(_gridicon2.default, {
					className: 'card__link-indicator',
					icon: this.props.target ? 'external' : 'chevron-right' });
			}
	
			return _react2.default.createElement(element, (0, _assign2.default)({}, this.props, { className: className }), this.props.href ? linkIndicator : null, this.props.children);
		}
	});
	
	/**
	 * Internal dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _observeWindowResize = __webpack_require__(288);
	
	var _observeWindowResize2 = _interopRequireDefault(_observeWindowResize);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	var _button = __webpack_require__(292);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _viewport = __webpack_require__(293);
	
	var _viewport2 = _interopRequireDefault(_viewport);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	
	
	/**
	 * Internal dependencies
	 */
	var HIDE_BACK_CRITERIA = {
		windowWidth: 480,
		characterLength: 8
	}; /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	exports.default = _react2.default.createClass({
	
		displayName: 'HeaderCakeBack',
	
		mixins: [_observeWindowResize2.default],
	
		propTypes: {
			onClick: _react.PropTypes.func,
			href: _react.PropTypes.string,
			text: _react.PropTypes.string,
			spacer: _react.PropTypes.bool
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				spacer: false
			};
		},
		hideText: function hideText(text) {
			var windowWidth = _viewport2.default.getWindowInnerWidth();
	
			if (windowWidth <= HIDE_BACK_CRITERIA.windowWidth && text.length >= HIDE_BACK_CRITERIA.characterLength || windowWidth <= 300) {
				return true;
			}
	
			return false;
		},
		render: function render() {
			var _props = this.props;
			var _props$text = _props.text;
			var text = _props$text === undefined ? _i18nCalypso2.default.translate('Back') : _props$text;
			var href = _props.href;
			var onClick = _props.onClick;
			var spacer = _props.spacer;
	
			var linkClasses = (0, _classnames2.default)({
				'header-cake__back': true,
				'is-spacer': spacer
			});
	
			return _react2.default.createElement(
				_button2.default,
				{ compact: true, borderless: true, className: linkClasses, href: href, onClick: onClick },
				_react2.default.createElement(_gridicon2.default, { icon: 'arrow-left', size: 18 }),
				!this.hideText(text) && text
			);
		},
		onWindowResize: function onWindowResize() {
			this.forceUpdate();
		}
	});
	module.exports = exports['default'];

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var throttle = __webpack_require__(289);
	
	/**
	 * A mixin that listens for window::resize events and informs a component
	 *
	 * The host should expose a `onWindowResize` method to be called when the window resizes
	 */
	var ObserveWindowSizeMixin = {
		componentDidMount: function componentDidMount() {
			// the throttled function has to be per instance
			this._handleWindowResize = throttle(this.onWindowResize, 100);
			window.addEventListener('resize', this._handleWindowResize);
		},
	
		componentWillUnmount: function componentWillUnmount() {
			window.removeEventListener('resize', this._handleWindowResize);
		}
	
		/* DO NOT DO THIS. It shares the debounce across all instances of the mixin.
	 _handleWindowResize: throttle( function() {
	 	this.onWindowResize();
	 }, 500 )
	 */
	};
	
	module.exports = ObserveWindowSizeMixin;

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var debounce = __webpack_require__(290),
	    isObject = __webpack_require__(21);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed `func` invocations and a `flush` method to
	 * immediately invoke them. Provide an options object to indicate whether
	 * `func` should be invoked on the leading and/or trailing edge of the `wait`
	 * timeout. The `func` is invoked with the last arguments provided to the
	 * throttled function. Subsequent calls to the throttled function return the
	 * result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	 * on the trailing edge of the timeout only if the throttled function is
	 * invoked more than once during the `wait` timeout.
	 *
	 * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.leading=true] Specify invoking on the leading
	 *  edge of the timeout.
	 * @param {boolean} [options.trailing=true] Specify invoking on the trailing
	 *  edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // Avoid excessively updating the position while scrolling.
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	 * jQuery(element).on('click', throttled);
	 *
	 * // Cancel the trailing throttled invocation.
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, {
	    'leading': leading,
	    'maxWait': wait,
	    'trailing': trailing
	  });
	}
	
	module.exports = throttle;


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(21),
	    now = __webpack_require__(291),
	    toNumber = __webpack_require__(27);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide an options object to indicate whether `func` should be invoked on
	 * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent calls
	 * to the debounced function return the result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	 * on the trailing edge of the timeout only if the debounced function is
	 * invoked more than once during the `wait` timeout.
	 *
	 * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.leading=false] Specify invoking on the leading
	 *  edge of the timeout.
	 * @param {number} [options.maxWait] The maximum time `func` is allowed to be
	 *  delayed before it's invoked.
	 * @param {boolean} [options.trailing=true] Specify invoking on the trailing
	 *  edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var args,
	      maxTimeoutId,
	      result,
	      stamp,
	      thisArg,
	      timeoutId,
	      trailingCall,
	      lastCalled = 0,
	      leading = false,
	      maxWait = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function cancel() {
	    if (timeoutId) {
	      clearTimeout(timeoutId);
	    }
	    if (maxTimeoutId) {
	      clearTimeout(maxTimeoutId);
	    }
	    lastCalled = 0;
	    args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;
	  }
	
	  function complete(isCalled, id) {
	    if (id) {
	      clearTimeout(id);
	    }
	    maxTimeoutId = timeoutId = trailingCall = undefined;
	    if (isCalled) {
	      lastCalled = now();
	      result = func.apply(thisArg, args);
	      if (!timeoutId && !maxTimeoutId) {
	        args = thisArg = undefined;
	      }
	    }
	  }
	
	  function delayed() {
	    var remaining = wait - (now() - stamp);
	    if (remaining <= 0 || remaining > wait) {
	      complete(trailingCall, maxTimeoutId);
	    } else {
	      timeoutId = setTimeout(delayed, remaining);
	    }
	  }
	
	  function flush() {
	    if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {
	      result = func.apply(thisArg, args);
	    }
	    cancel();
	    return result;
	  }
	
	  function maxDelayed() {
	    complete(trailing, timeoutId);
	  }
	
	  function debounced() {
	    args = arguments;
	    stamp = now();
	    thisArg = this;
	    trailingCall = trailing && (timeoutId || !leading);
	
	    if (maxWait === false) {
	      var leadingCall = leading && !timeoutId;
	    } else {
	      if (!lastCalled && !maxTimeoutId && !leading) {
	        lastCalled = stamp;
	      }
	      var remaining = maxWait - (stamp - lastCalled);
	
	      var isCalled = (remaining <= 0 || remaining > maxWait) &&
	        (leading || maxTimeoutId);
	
	      if (isCalled) {
	        if (maxTimeoutId) {
	          maxTimeoutId = clearTimeout(maxTimeoutId);
	        }
	        lastCalled = stamp;
	        result = func.apply(thisArg, args);
	      }
	      else if (!maxTimeoutId) {
	        maxTimeoutId = setTimeout(maxDelayed, remaining);
	      }
	    }
	    if (isCalled && timeoutId) {
	      timeoutId = clearTimeout(timeoutId);
	    }
	    else if (!timeoutId && wait !== maxWait) {
	      timeoutId = setTimeout(delayed, wait);
	    }
	    if (leadingCall) {
	      isCalled = true;
	      result = func.apply(thisArg, args);
	    }
	    if (isCalled && !timeoutId && !maxTimeoutId) {
	      args = thisArg = undefined;
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}
	
	module.exports = debounce;


/***/ },
/* 291 */
/***/ function(module, exports) {

	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @type {Function}
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => logs the number of milliseconds it took for the deferred function to be invoked
	 */
	var now = Date.now;
	
	module.exports = now;


/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _assign = __webpack_require__(10);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _noop = __webpack_require__(175);
	
	var _noop2 = _interopRequireDefault(_noop);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	exports.default = _react2.default.createClass({
	
		displayName: 'Button',
	
		propTypes: {
			disabled: _react2.default.PropTypes.bool,
			compact: _react2.default.PropTypes.bool,
			primary: _react2.default.PropTypes.bool,
			scary: _react2.default.PropTypes.bool,
			type: _react2.default.PropTypes.string,
			href: _react2.default.PropTypes.string,
			onClick: _react2.default.PropTypes.func,
			borderless: _react2.default.PropTypes.bool
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				disabled: false,
				type: 'button',
				onClick: _noop2.default,
				borderless: false
			};
		},
		render: function render() {
			var element = this.props.href ? 'a' : 'button';
			var buttonClasses = (0, _classnames2.default)({
				button: true,
				'is-compact': this.props.compact,
				'is-primary': this.props.primary,
				'is-scary': this.props.scary,
				'is-borderless': this.props.borderless
			});
	
			var props = (0, _assign2.default)({}, this.props, {
				className: (0, _classnames2.default)(this.props.className, buttonClasses)
			});
	
			return _react2.default.createElement(element, props, this.props.children);
		}
	});
	module.exports = exports['default'];

/***/ },
/* 293 */
/***/ function(module, exports) {

	'use strict';
	
	/** @ssr-ready **/
	
	// Determine whether a user is viewing calypso from a device within a
	// particular mobile-first responsive breakpoint, matching our existing media
	// queries. [1]
	//
	// This function takes a string matching one of our mobile-first breakpoints
	// and returns a boolean based on whether the current `window.innerWidth`
	// matches. This is used to segment behavior based on device or browser size,
	// but should not be used in place of css for design.
	//
	// Valid breakpoints include:
	// - '<480px'
	// - '<660px'
	// - '<960px'
	// - '>480px'
	// - '>660px'
	// - '>960px'
	// - '480px-660px'
	// - '480px-960px'
	// - '660px-960px'
	//
	// As implemented in our sass media query mixins, minimums are exclusive, while
	// maximums are inclusive. i.e.,
	//
	// - '>480px' is equivalent to `@media (min-width: 481px)`
	// - '<960px' is equivalent to `@media (max-width: 960px)`
	// - '480px-960px' is equivalent to `@media (max-width: 960px) and (min-width: 481px)`
	//
	// [1] https://github.com/Automattic/wp-calypso/blob/master/docs/coding-guidelines/css.md#media-queries
	//
	function isWithinBreakpoint(breakpoint) {
		var screenWidth = getWindowInnerWidth(),
		    breakpoints = {
			'<480px': function px() {
				return screenWidth <= 480;
			},
			'<660px': function px() {
				return screenWidth <= 660;
			},
			'<960px': function px() {
				return screenWidth <= 960;
			},
			'>480px': function px() {
				return screenWidth > 480;
			},
			'>660px': function px() {
				return screenWidth > 660;
			},
			'>960px': function px() {
				return screenWidth > 960;
			},
			'480px-660px': function px660px() {
				return screenWidth > 480 && screenWidth <= 660;
			},
			'660px-960px': function px960px() {
				return screenWidth > 660 && screenWidth <= 960;
			},
			'480px-960px': function px960px() {
				return screenWidth > 480 && screenWidth <= 960;
			}
		};
	
		if (!breakpoints.hasOwnProperty(breakpoint)) {
			try {
				global.window.console.warn('Undefined breakpoint used in `mobile-first-breakpoint`', breakpoint);
			} catch (e) {}
			return undefined;
		}
		return breakpoints[breakpoint]();
	}
	
	function isMobile() {
		return isWithinBreakpoint('<480px');
	}
	
	function isDesktop() {
		return isWithinBreakpoint('>960px');
	}
	
	// FIXME: We can't detect window size on the server, so until we have more intelligent detection,
	// use 769, which is just above the general maximum mobile screen width.
	function getWindowInnerWidth() {
		return global.window ? global.window.innerWidth : 769;
	}
	
	module.exports = {
		isMobile: isMobile,
		isDesktop: isDesktop,
		isWithinBreakpoint: isWithinBreakpoint,
		getWindowInnerWidth: getWindowInnerWidth
	};

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _compact = __webpack_require__(295);
	
	var _compact2 = _interopRequireDefault(_compact);
	
	var _count = __webpack_require__(296);
	
	var _count2 = _interopRequireDefault(_count);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	exports.default = _react2.default.createClass({
		displayName: 'section-header',
		getDefaultProps: function getDefaultProps() {
			return {
				label: '',
				href: null
			};
		},
		render: function render() {
			var classes = (0, _classnames2.default)(this.props.className, 'section-header');
	
			return _react2.default.createElement(
				_compact2.default,
				{ className: classes, href: this.props.href },
				_react2.default.createElement(
					'div',
					{ className: 'section-header__label' },
					this.props.label,
					'number' === typeof this.props.count && _react2.default.createElement(_count2.default, { count: this.props.count })
				),
				_react2.default.createElement(
					'div',
					{ className: 'section-header__actions' },
					this.props.children
				)
			);
		}
	});
	module.exports = exports['default'];

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var React = __webpack_require__(170),
	    assign = __webpack_require__(10),
	    classnames = __webpack_require__(182);
	
	/**
	 * Internal dependencies
	 */
	var Card = __webpack_require__(286);
	
	module.exports = React.createClass({
		displayName: 'CompactCard',
	
		render: function render() {
			var props = assign({}, this.props, { className: classnames(this.props.className, 'is-compact') });
	
			return React.createElement(
				Card,
				props,
				this.props.children
			);
		}
	});

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _mixin = __webpack_require__(188);
	
	var _mixin2 = _interopRequireDefault(_mixin);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	exports.default = _react2.default.createClass({
	
		displayName: 'Count',
	
		mixins: [_mixin2.default],
	
		propTypes: {
			count: _react2.default.PropTypes.number.isRequired
		},
	
		render: function render() {
			return _react2.default.createElement(
				'span',
				{ className: 'count' },
				this.numberFormat(this.props.count)
			);
		}
	});
	module.exports = exports['default'];

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _button = __webpack_require__(292);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _card = __webpack_require__(286);
	
	var _card2 = _interopRequireDefault(_card);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemeDownloadCard = _react2.default.createClass({
		displayName: 'ThemeDownloadCard',
	
	
		propTypes: {
			theme: _react2.default.PropTypes.string.isRequired,
			href: _react2.default.PropTypes.string
		},
	
		render: function render() {
			// When we don't generate zips, it's because we have released the theme on .org.
			var downloadURI = this.props.href || 'https://downloads.wordpress.org/theme/' + this.props.theme + '.zip';
			var downloadText = _i18nCalypso2.default.translate('This theme is available for download to be used on your {{a}}WordPress self-hosted{{/a}} installation.', {
				components: {
					a: _react2.default.createElement('a', { href: 'https://wordpress.org' })
				}
			});
			return _react2.default.createElement(
				_card2.default,
				{ className: 'themes__sheet-download' },
				_react2.default.createElement(_gridicon2.default, { icon: 'cloud-download', size: 48 }),
				_react2.default.createElement(
					'p',
					null,
					downloadText
				),
				_react2.default.createElement(
					_button2.default,
					{ href: downloadURI },
					_i18nCalypso2.default.translate('Download')
				)
			);
		}
	});
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	module.exports = ThemeDownloadCard;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _set = __webpack_require__(305);
	
	var _set2 = _interopRequireDefault(_set);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _card = __webpack_require__(286);
	
	var _card2 = _interopRequireDefault(_card);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _sectionHeader = __webpack_require__(294);
	
	var _sectionHeader2 = _interopRequireDefault(_sectionHeader);
	
	var _helpers = __webpack_require__(309);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var ThemesRelatedCard = _react2.default.createClass({
		displayName: 'ThemesRelatedCard',
	
	
		propTypes: {
			currentTheme: _react2.default.PropTypes.string.isRequired
		},
	
		getRelatedThemes: function getRelatedThemes() {
			var themes = new _set2.default(['twentysixteen', 'rowling', 'hemingway-rewritten', 'gazette', 'ecto', 'isola', 'edin', 'sela', 'pique', 'harmonic']);
	
			//Remove current theme so we will not show it as related
			themes.delete(this.props.currentTheme);
			themes = [].concat((0, _toConsumableArray3.default)(themes));
	
			var randomThemeIndex = this.props.currentTheme.charCodeAt(0) % themes.length;
			var theme = themes.splice(randomThemeIndex, 1)[0];
			var selectedThemes = [theme];
			selectedThemes.push(themes[theme.charCodeAt(0) % themes.length]);
	
			return selectedThemes;
		},
		render: function render() {
			var themes = this.getRelatedThemes().map(function (slug) {
				return {
					id: slug,
					screenshot: 'https://i1.wp.com/s0.wp.com/wp-content/themes/pub/' + slug + '/screenshot.png'
				};
			});
	
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_sectionHeader2.default, { label: _i18nCalypso2.default.translate('You might also like') }),
				_react2.default.createElement(
					'ul',
					{ className: 'themes__sheet-related-themes' },
					themes.map(function (theme) {
						return _react2.default.createElement(
							'li',
							{ key: theme.id },
							_react2.default.createElement(
								_card2.default,
								{ className: 'themes__sheet-related-themes-card' },
								_react2.default.createElement(
									'a',
									{ href: (0, _helpers.getDetailsUrl)(theme) },
									_react2.default.createElement('img', { src: theme.screenshot + '?w=' + '660' })
								)
							)
						);
					})
				)
			);
		}
	}); /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	exports.default = ThemesRelatedCard;
	module.exports = exports['default'];

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _from = __webpack_require__(300);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(301), __esModule: true };

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(197);
	__webpack_require__(302);
	module.exports = __webpack_require__(47).Array.from;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(48)
	  , $export        = __webpack_require__(45)
	  , toObject       = __webpack_require__(78)
	  , call           = __webpack_require__(219)
	  , isArrayIter    = __webpack_require__(220)
	  , toLength       = __webpack_require__(69)
	  , createProperty = __webpack_require__(303)
	  , getIterFn      = __webpack_require__(221);
	
	$export($export.S + $export.F * !__webpack_require__(304)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(51)
	  , createDesc      = __webpack_require__(59);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(208)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(306), __esModule: true };

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(196);
	__webpack_require__(197);
	__webpack_require__(210);
	__webpack_require__(307);
	__webpack_require__(308);
	module.exports = __webpack_require__(47).Set;

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(215);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(225)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(45);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(231)('Set')});

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.getSignupUrl = getSignupUrl;
	exports.getPreviewUrl = getPreviewUrl;
	exports.getCustomizeUrl = getCustomizeUrl;
	exports.getDetailsUrl = getDetailsUrl;
	exports.getSupportUrl = getSupportUrl;
	exports.getForumUrl = getForumUrl;
	exports.getExternalThemesUrl = getExternalThemesUrl;
	exports.isPremium = isPremium;
	exports.trackClick = trackClick;
	exports.addTracking = addTracking;
	exports.navigateTo = navigateTo;
	exports.getAnalyticsData = getAnalyticsData;
	
	var _analytics = __webpack_require__(175);
	
	var _analytics2 = _interopRequireDefault(_analytics);
	
	var _toTitleCase = __webpack_require__(310);
	
	var _toTitleCase2 = _interopRequireDefault(_toTitleCase);
	
	var _page = __webpack_require__(176);
	
	var _page2 = _interopRequireDefault(_page);
	
	var _startsWith = __webpack_require__(251);
	
	var _startsWith2 = _interopRequireDefault(_startsWith);
	
	var _assign = __webpack_require__(10);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _mapValues = __webpack_require__(311);
	
	var _mapValues2 = _interopRequireDefault(_mapValues);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _route = __webpack_require__(175);
	
	var _route2 = _interopRequireDefault(_route);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	var oldShowcaseUrl = '//wordpress.com/themes/';
	
	function getSignupUrl(theme) {
		var url = '/start/with-theme?ref=calypshowcase&theme=' + theme.id;
	
		if (isPremium(theme)) {
			url += '&premium=true';
		}
	
		return url;
	}
	
	function getPreviewUrl(theme, site) {
		if (site && site.jetpack) {
			return site.options.admin_url + 'customize.php?theme=' + theme.id + '&return=' + encodeURIComponent(window.location);
		}
	
		return theme.demo_uri + '?demo=true&iframe=true&theme_preview=true';
	}
	
	function getCustomizeUrl(theme, site) {
		if (!site) {
			return '/customize/';
		}
	
		if (site.jetpack) {
			return site.options.admin_url + 'customize.php?return=' + encodeURIComponent(window.location) + (theme ? '&theme=' + theme.id : '');
		}
	
		return '/customize/' + site.slug + (theme ? '?theme=' + theme.stylesheet : '');
	}
	
	function getDetailsUrl(theme, site) {
		if (site && site.jetpack) {
			return site.options.admin_url + 'themes.php?theme=' + theme.id;
		}
	
		var baseUrl = oldShowcaseUrl + theme.id;
		if (_config2.default.isEnabled('manage/themes/details')) {
			baseUrl = '/theme/' + theme.id + '/overview';
		}
	
		return baseUrl + (site ? '/' + site.slug : '');
	}
	
	function getSupportUrl(theme, site) {
		if (site && site.jetpack) {
			return '//wordpress.org/support/theme/' + theme.id;
		}
	
		if (_config2.default.isEnabled('manage/themes/details')) {
			var _sitePart = site ? '/' + site.slug : '';
			return '/theme/' + theme.id + '/setup' + _sitePart;
		}
	
		var sitePart = site ? site.slug + '/' : '';
		return '' + oldShowcaseUrl + sitePart + theme.id + '/support';
	}
	
	function getForumUrl(theme) {
		return isPremium(theme) ? '//premium-themes.forums.wordpress.com/forum/' + theme.id : '//en.forums.wordpress.com/forum/themes';
	}
	
	function getExternalThemesUrl(site) {
		if (!site) {
			return oldShowcaseUrl;
		}
		if (site.jetpack) {
			return site.options.admin_url + 'theme-install.php';
		}
		return oldShowcaseUrl + site.slug;
	}
	
	function isPremium(theme) {
		if (!theme) {
			return false;
		}
	
		if (theme.stylesheet && (0, _startsWith2.default)(theme.stylesheet, 'premium/')) {
			return true;
		}
		// The /v1.1/sites/:site_id/themes/mine endpoint (which is used by the
		// current-theme reducer, selector, and component) does not return a
		// `stylesheet` attribute. However, it does return a `cost` field (which
		// contains the correct price even if the user has already purchased that
		// theme, or if they have an upgrade that includes all premium themes).
		return !!(theme.cost && theme.cost.number);
	}
	
	function trackClick(componentName, eventName) {
		var verb = arguments.length <= 2 || arguments[2] === undefined ? 'click' : arguments[2];
	
		var stat = componentName + ' ' + eventName + ' ' + verb;
		_analytics2.default.ga.recordEvent('Themes', (0, _toTitleCase2.default)(stat));
	}
	
	function addTracking(options) {
		return (0, _mapValues2.default)(options, appendActionTracking);
	}
	
	function appendActionTracking(option, name) {
		var _action = option.action;
	
	
		if (!_action) {
			return option;
		}
	
		return (0, _assign2.default)({}, option, {
			action: function action(t) {
				_action(t);
				trackClick('more button', name);
			}
		});
	}
	
	function navigateTo(url, external) {
		if (external) {
			window.open(url);
		} else {
			(0, _page2.default)(url);
		}
	}
	
	function getAnalyticsData(path, tier, site_id) {
		var basePath = _route2.default.sectionify(path);
		var analyticsPageTitle = 'Themes';
	
		if (site_id) {
			basePath = basePath + '/:site_id';
			analyticsPageTitle += ' > Single Site';
		}
	
		if (tier) {
			analyticsPageTitle += ' > Type > ' + (0, _toTitleCase2.default)(tier);
		}
	
		return { basePath: basePath, analyticsPageTitle: analyticsPageTitle };
	}

/***/ },
/* 310 */
/***/ function(module, exports) {

	module.exports = require("to-title-case");

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(92),
	    baseIteratee = __webpack_require__(98);
	
	/**
	 * Creates an object with the same keys as `object` and values generated by
	 * running each own enumerable property of `object` through `iteratee`. The
	 * iteratee function is invoked with three arguments: (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    result[key] = iteratee(value, key, object);
	  });
	  return result;
	}
	
	module.exports = mapValues;


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var React = __webpack_require__(170),
	    isEqual = __webpack_require__(313),
	    classNames = __webpack_require__(182);
	
	/**
	 * Internal Dependencies
	 */
	var NavTabs = __webpack_require__(314),
	    NavItem = __webpack_require__(327),
	    Search = __webpack_require__(328);
	
	/**
	 * Main
	 */
	var SectionNav = React.createClass({
		displayName: 'SectionNav',
	
	
		propTypes: {
			children: React.PropTypes.node,
			selectedText: React.PropTypes.node,
			selectedCount: React.PropTypes.number,
			hasPinnedItems: React.PropTypes.bool,
			onMobileNavPanelOpen: React.PropTypes.func
		},
	
		getInitialState: function getInitialState() {
			return {
				mobileOpen: false
			};
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				onMobileNavPanelOpen: function onMobileNavPanelOpen() {}
			};
		},
	
		componentWillMount: function componentWillMount() {
			this.checkForSiblingControls(this.props.children);
		},
	
		componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
			if (isEqual(this.props, nextProps)) {
				return;
			}
	
			this.checkForSiblingControls(nextProps.children);
	
			if (!this.hasSiblingControls) {
				this.closeMobilePanel();
			}
		},
	
		render: function render() {
			var children = this.getChildren(),
			    className;
	
			if (!children) {
				className = classNames({
					'section-nav': true,
					'is-empty': true
				});
	
				return React.createElement(
					'div',
					{ className: className },
					React.createElement(
						'div',
						{ className: 'section-nav__panel' },
						React.createElement(NavItem, null)
					)
				);
			}
	
			className = classNames({
				'section-nav': true,
				'is-open': this.state.mobileOpen,
				'has-pinned-items': this.hasPinnedSearch || this.props.hasPinnedItems
			});
	
			return React.createElement(
				'div',
				{ className: className },
				React.createElement(
					'div',
					{
						className: 'section-nav__mobile-header',
						onTouchTap: this.toggleMobileOpenState
					},
					React.createElement(
						'span',
						{ className: 'section-nav__mobile-header-text' },
						this.props.selectedText
					)
				),
				React.createElement(
					'div',
					{ className: 'section-nav__panel' },
					children
				)
			);
		},
	
		getChildren: function getChildren() {
			return React.Children.map(this.props.children, function (child) {
				var extraProps = {
					hasSiblingControls: this.hasSiblingControls,
					closeSectionNavMobilePanel: this.closeMobilePanel
				};
	
				if (!child) {
					return null;
				}
	
				// Propagate 'selectedText' to NavItem component
				if (child.type === NavTabs && !child.props.selectedText && typeof this.props.selectedText === 'string') {
					extraProps.selectedText = this.props.selectedText;
				}
	
				// Propagate 'selectedCount' to NavItem component
				if (child.type === NavTabs && this.props.selectedCount) {
					extraProps.selectedCount = this.props.selectedCount;
				}
	
				if (child.type === Search) {
					if (child.props.pinned) {
						this.hasPinnedSearch = true;
					}
	
					extraProps.onSearch = this.generateOnSearch(child.props.onSearch);
				}
	
				return React.cloneElement(child, extraProps);
			}.bind(this));
		},
	
		closeMobilePanel: function closeMobilePanel() {
			if (window.innerWidth < 480 && this.state.mobileOpen) {
				this.setState({
					mobileOpen: false
				});
			}
		},
	
		toggleMobileOpenState: function toggleMobileOpenState() {
			var mobileOpen = !this.state.mobileOpen;
	
			this.setState({
				mobileOpen: mobileOpen
			});
	
			if (mobileOpen) {
				this.props.onMobileNavPanelOpen();
			}
		},
	
		generateOnSearch: function generateOnSearch(existingOnSearch) {
			return function () {
				existingOnSearch.apply(this, arguments);
				this.closeMobilePanel();
			}.bind(this);
		},
	
		checkForSiblingControls: function checkForSiblingControls(children) {
			this.hasSiblingControls = false;
	
			React.Children.forEach(children, function (child, index) {
				// Checking for at least 2 controls groups that are not search or null
				if (index && child && child.type !== Search) {
					this.hasSiblingControls = true;
				}
			}.bind(this));
		}
	});
	
	module.exports = SectionNav;

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(132);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are **not** supported.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var other = { 'user': 'fred' };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends2 = __webpack_require__(315);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var ReactDom = __webpack_require__(171),
	    React = __webpack_require__(170),
	    debounce = __webpack_require__(290),
	    classNames = __webpack_require__(182);
	
	/**
	 * Internal Dependencies
	 */
	var SelectDropdown = __webpack_require__(316),
	    DropdownItem = __webpack_require__(324),
	    viewport = __webpack_require__(293);
	
	/**
	 * Internal Variables
	 */
	var MOBILE_PANEL_THRESHOLD = 480;
	
	/**
	 * Main
	 */
	var NavTabs = React.createClass({
		displayName: 'NavTabs',
	
	
		propTypes: {
			selectedText: React.PropTypes.string,
			selectedCount: React.PropTypes.number,
			label: React.PropTypes.string,
			hasSiblingControls: React.PropTypes.bool
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				hasSiblingControls: false
			};
		},
	
		getInitialState: function getInitialState() {
			return {
				isDropdown: false
			};
		},
	
		componentDidMount: function componentDidMount() {
			this.setDropdown();
			this.debouncedAfterResize = debounce(this.setDropdown, 300);
	
			window.addEventListener('resize', this.debouncedAfterResize);
		},
	
		componentWillReceiveProps: function componentWillReceiveProps() {
			this.setDropdown();
		},
	
		componentWillUnmount: function componentWillUnmount() {
			window.removeEventListener('resize', this.debouncedAfterResize);
		},
	
		render: function render() {
			var tabs = React.Children.map(this.props.children, function (child, index) {
				return child && React.cloneElement(child, { ref: 'tab-' + index });
			});
	
			var tabsClassName = classNames({
				'section-nav-tabs': true,
				'is-dropdown': this.state.isDropdown,
				'is-open': this.state.isDropdownOpen,
				'has-siblings': this.props.hasSiblingControls
			});
	
			var innerWidth = viewport.getWindowInnerWidth();
	
			return React.createElement(
				'div',
				{ className: 'section-nav-group', ref: 'navGroup' },
				React.createElement(
					'div',
					{ className: tabsClassName },
					this.props.label && React.createElement(
						'h6',
						{ className: 'section-nav-group__label' },
						this.props.label
					),
					React.createElement(
						'ul',
						{
							className: 'section-nav-tabs__list',
							role: 'menu',
							onKeyDown: this.keyHandler
						},
						tabs
					),
					this.state.isDropdown && innerWidth > MOBILE_PANEL_THRESHOLD && this.getDropdown()
				)
			);
		},
	
		getTabWidths: function getTabWidths() {
			var totalWidth = 0;
	
			React.Children.forEach(this.props.children, function (child, index) {
				if (!child) {
					return;
				}
				var tabWidth = ReactDom.findDOMNode(this.refs['tab-' + index]).offsetWidth;
				totalWidth += tabWidth;
			}.bind(this));
	
			this.tabsWidth = totalWidth;
		},
	
		getDropdown: function getDropdown() {
			var dropdownOptions = React.Children.map(this.props.children, function (child, index) {
				if (!child) {
					return null;
				}
				return React.createElement(
					DropdownItem,
					(0, _extends3.default)({}, child.props, { key: 'navTabsDropdown-' + index }),
					child.props.children
				);
			});
	
			return React.createElement(
				SelectDropdown,
				{
					className: 'section-nav-tabs__dropdown',
					selectedText: this.props.selectedText,
					selectedCount: this.props.selectedCount
				},
				dropdownOptions
			);
		},
	
		setDropdown: function setDropdown() {
			var navGroupWidth;
	
			if (window.innerWidth > MOBILE_PANEL_THRESHOLD) {
				if (!this.refs.navGroup) {
					return;
				}
	
				navGroupWidth = this.refs.navGroup.offsetWidth;
	
				if (!this.tabsWidth) {
					this.getTabWidths();
				}
	
				if (navGroupWidth <= this.tabsWidth && !this.state.isDropdown) {
					this.setState({
						isDropdown: true
					});
				} else if (navGroupWidth > this.tabsWidth && this.state.isDropdown) {
					this.setState({
						isDropdown: false
					});
				}
			} else if (window.innerWidth <= MOBILE_PANEL_THRESHOLD && this.state.isDropdown) {
				this.setState({
					isDropdown: false
				});
			}
		},
	
		keyHandler: function keyHandler(event) {
			switch (event.keyCode) {
				case 32: // space
				case 13:
					// enter
					event.preventDefault();
					document.activeElement.click();
					break;
			}
		}
	});
	
	module.exports = NavTabs;

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _reactDom = __webpack_require__(171);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _find = __webpack_require__(90);
	
	var _find2 = _interopRequireDefault(_find);
	
	var _filter = __webpack_require__(317);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _findIndex = __webpack_require__(320);
	
	var _findIndex2 = _interopRequireDefault(_findIndex);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _result = __webpack_require__(323);
	
	var _result2 = _interopRequireDefault(_result);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _item = __webpack_require__(324);
	
	var _item2 = _interopRequireDefault(_item);
	
	var _separator = __webpack_require__(325);
	
	var _separator2 = _interopRequireDefault(_separator);
	
	var _label = __webpack_require__(326);
	
	var _label2 = _interopRequireDefault(_label);
	
	var _count = __webpack_require__(296);
	
	var _count2 = _interopRequireDefault(_count);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var Component = _react2.default.Component;
	var PropTypes = _react2.default.PropTypes;
	
	var noop = function noop() {};
	
	/**
	 * SelectDropdown
	 */
	
	var SelectDropdown = function (_Component) {
		(0, _inherits3.default)(SelectDropdown, _Component);
	
		function SelectDropdown(props) {
			(0, _classCallCheck3.default)(this, SelectDropdown);
	
	
			// bounds
	
			var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(SelectDropdown).call(this, props));
	
			_this.navigateItem = _this.navigateItem.bind(_this);
			_this.toggleDropdown = _this.toggleDropdown.bind(_this);
			_this.handleOutsideClick = _this.handleOutsideClick.bind(_this);
	
			// state
			var initialState = { isOpen: false };
	
			if (props.options.length) {
				initialState.selected = _this.getInitialSelectedItem(props);
			}
	
			_this.state = initialState;
			return _this;
		}
	
		(0, _createClass3.default)(SelectDropdown, [{
			key: 'componentWillMount',
			value: function componentWillMount() {
				this.setState({
					instanceId: ++SelectDropdown.instances
				});
			}
		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				if (this.state.isOpen) {
					this.closeDropdown();
				}
	
				if (typeof this.state.selected !== 'undefined' && this.props.initialSelected !== nextProps.initialSelected) {
					this.setState({ selected: nextProps.initialSelected });
				}
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				window.removeEventListener('click', this.handleOutsideClick);
			}
		}, {
			key: 'componentDidUpdate',
			value: function componentDidUpdate(prevProps, prevState) {
				if (this.state.isOpen) {
					window.addEventListener('click', this.handleOutsideClick);
				} else {
					window.removeEventListener('click', this.handleOutsideClick);
				}
	
				if (this.state.isOpen !== prevState.isOpen) {
					this.props.onToggle({
						target: this,
						open: this.state.isOpen
					});
				}
			}
		}, {
			key: 'getInitialSelectedItem',
			value: function getInitialSelectedItem(props) {
				props = props || this.props;
	
				if (props.initialSelected) {
					return props.initialSelected;
				}
	
				if (!props.options.length) {
					return;
				}
	
				var selectedItem = (0, _find2.default)(props.options, function (value) {
					return !value.isLabel;
				});
				return selectedItem && selectedItem.value;
			}
		}, {
			key: 'dropdownOptions',
			value: function dropdownOptions() {
				var refIndex = 0;
				var self = this;
	
				if (this.props.children) {
					// add keys and refs to children
					return _react2.default.Children.map(this.props.children, function (child, index) {
						if (!child) {
							return null;
						}
	
						var newChild = _react2.default.cloneElement(child, {
							ref: child.type === _item2.default ? 'item-' + refIndex : null,
							key: 'item-' + index,
							onClick: function onClick(event) {
								self.refs.dropdownContainer.focus();
								if (typeof child.props.onClick === 'function') {
									child.props.onClick(event);
								}
							}
						});
	
						if (child.type === _item2.default) {
							refIndex++;
						}
	
						return newChild;
					}, this);
				}
	
				return this.props.options.map(function (item, index) {
					if (!item) {
						return _react2.default.createElement(_separator2.default, {
							key: 'dropdown-separator-' + this.state.instanceId + '-' + index
						});
					}
	
					if (item.isLabel) {
						return _react2.default.createElement(
							_label2.default,
							{
								key: 'dropdown-label-' + this.state.instanceId + '-' + index
							},
							item.label
						);
					}
	
					var dropdownItem = _react2.default.createElement(
						_item2.default,
						{
							key: 'dropdown-item-' + this.state.instanceId + '-' + item.value,
							ref: 'item-' + refIndex,
							selected: this.state.selected === item.value,
							onClick: this.onSelectItem(item),
							path: item.path
						},
						item.label
					);
	
					refIndex++;
	
					return dropdownItem;
				}, this);
			}
		}, {
			key: 'render',
			value: function render() {
				var dropdownClasses = {
					'select-dropdown': true,
					'is-compact': this.props.compact,
					'is-open': this.state.isOpen
				};
	
				if (this.props.className) {
					this.props.className.split(' ').forEach(function (className) {
						dropdownClasses[className] = true;
					});
				}
	
				var dropdownClassName = (0, _classnames2.default)(dropdownClasses);
				var selectedText = this.props.selectedText ? this.props.selectedText : (0, _result2.default)((0, _find2.default)(this.props.options, { value: this.state.selected }), 'label');
	
				return _react2.default.createElement(
					'div',
					{ style: this.props.style, className: dropdownClassName },
					_react2.default.createElement(
						'div',
						{
							ref: 'dropdownContainer',
							className: 'select-dropdown__container',
							valueLink: this.props.valueLink,
							onKeyDown: this.navigateItem,
							tabIndex: this.props.tabIndex || 0,
							'aria-haspopup': 'true',
							'aria-owns': 'select-submenu-' + this.state.instanceId,
							'aria-controls': 'select-submenu-' + this.state.instanceId,
							'aria-expanded': this.state.isOpen,
							onClick: this.toggleDropdown
						},
						_react2.default.createElement(
							'div',
							{
								id: 'select-dropdown-' + this.state.instanceId,
								className: 'select-dropdown__header'
							},
							_react2.default.createElement(
								'span',
								{ className: 'select-dropdown__header-text' },
								selectedText,
								'number' === typeof this.props.selectedCount && _react2.default.createElement(_count2.default, { count: this.props.selectedCount })
							)
						),
						_react2.default.createElement(
							'ul',
							{
								id: 'select-submenu-' + this.state.instanceId,
								className: 'select-dropdown__options',
								role: 'menu',
								'aria-labelledby': 'select-dropdown-' + this.state.instanceId,
								'aria-expanded': this.state.isOpen
							},
							this.dropdownOptions()
						)
					)
				);
			}
		}, {
			key: 'toggleDropdown',
			value: function toggleDropdown() {
				this.setState({
					isOpen: !this.state.isOpen
				});
			}
		}, {
			key: 'openDropdown',
			value: function openDropdown() {
				this.setState({
					isOpen: true
				});
			}
		}, {
			key: 'closeDropdown',
			value: function closeDropdown() {
				if (this.state.isOpen) {
					delete this.focused;
					this.setState({
						isOpen: false
					});
				}
			}
		}, {
			key: 'onSelectItem',
			value: function onSelectItem(option) {
				return this.selectItem.bind(this, option);
			}
		}, {
			key: 'selectItem',
			value: function selectItem(option) {
				if (!option) {
					return;
				}
	
				if (this.props.onSelect) {
					this.props.onSelect(option);
				}
	
				this.setState({
					selected: option.value
				});
	
				this.refs.dropdownContainer.focus();
			}
		}, {
			key: 'navigateItem',
			value: function navigateItem(event) {
				switch (event.keyCode) {
					case 9:
						//tab
						this.navigateItemByTabKey(event);
						break;
					case 32: // space
					case 13:
						// enter
						event.preventDefault();
						this.activateItem();
						break;
					case 38:
						// up arrow
						event.preventDefault();
						this.focusSibling('previous');
						this.openDropdown();
						break;
					case 40:
						// down arrow
						event.preventDefault();
						this.focusSibling('next');
						this.openDropdown();
						break;
					case 27:
						// escape
						event.preventDefault();
						this.closeDropdown();
						this.refs.dropdownContainer.focus();
						break;
				}
			}
		}, {
			key: 'navigateItemByTabKey',
			value: function navigateItemByTabKey(event) {
				var direction;
				if (!this.state.isOpen) {
					return;
				}
				event.preventDefault();
				direction = event.shiftKey ? 'previous' : 'next';
				this.focusSibling(direction);
			}
		}, {
			key: 'activateItem',
			value: function activateItem() {
				if (!this.state.isOpen) {
					return this.openDropdown();
				}
				document.activeElement.click();
			}
		}, {
			key: 'focusSibling',
			value: function focusSibling(direction) {
				var increment, items, focusedIndex, newIndex;
	
				// the initial up-arrow/down-arrow should only open the menu
				if (!this.state.isOpen) {
					return;
				}
	
				if (this.props.options.length) {
					items = (0, _map2.default)((0, _filter2.default)(this.props.options, function (item) {
						return item && !item.isLabel;
					}), 'value');
	
					focusedIndex = typeof this.focused === 'number' ? this.focused : items.indexOf(this.state.selected);
				} else {
					items = (0, _filter2.default)(this.props.children, function (item) {
						return item.type === _item2.default;
					});
	
					focusedIndex = typeof this.focused === 'number' ? this.focused : (0, _findIndex2.default)(items, function (item) {
						return item.props.selected;
					});
				}
	
				increment = direction === 'previous' ? -1 : 1;
				newIndex = focusedIndex + increment;
	
				if (newIndex >= items.length || newIndex < 0) {
					return;
				}
	
				_reactDom2.default.findDOMNode(this.refs['item-' + newIndex].refs.itemLink).focus();
				this.focused = newIndex;
			}
		}, {
			key: 'handleOutsideClick',
			value: function handleOutsideClick(event) {
				if (!_reactDom2.default.findDOMNode(this.refs.dropdownContainer).contains(event.target)) {
					this.closeDropdown();
				}
			}
		}]);
		return SelectDropdown;
	}(Component);
	
	;
	
	SelectDropdown.defaultProps = {
		options: [],
		onSelect: noop,
		onToggle: noop,
		style: {}
	};
	
	SelectDropdown.propTypes = {
		selectedText: PropTypes.string,
		selectedCount: PropTypes.number,
		initialSelected: PropTypes.string,
		className: PropTypes.string,
		style: PropTypes.object,
		onSelect: PropTypes.func,
		onToggle: PropTypes.func,
		focusSibling: PropTypes.func,
		tabIndex: PropTypes.number,
		options: PropTypes.arrayOf(PropTypes.shape({
			value: PropTypes.string.isRequired,
			label: PropTypes.string.isRequired,
			path: PropTypes.string
		}))
	};
	
	// statics
	SelectDropdown.instances = 0;
	
	exports.default = SelectDropdown;
	module.exports = exports['default'];

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(318),
	    baseFilter = __webpack_require__(319),
	    baseIteratee = __webpack_require__(98),
	    isArray = __webpack_require__(36);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ },
/* 318 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array.length,
	      resIndex = -1,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[++resIndex] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(91);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(97),
	    baseIteratee = __webpack_require__(98);
	
	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to search.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate) {
	  return (array && array.length)
	    ? baseFindIndex(array, baseIteratee(predicate, 3))
	    : -1;
	}
	
	module.exports = findIndex;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(150),
	    baseIteratee = __webpack_require__(98),
	    baseMap = __webpack_require__(322),
	    isArray = __webpack_require__(36);
	
	/**
	 * Creates an array of values by running each element in `collection` through
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	 *
	 * The guarded methods are:
	 * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,
	 * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,
	 * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,
	 * and `words`
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * _.map([4, 8], square);
	 * // => [16, 64]
	 *
	 * _.map({ 'a': 4, 'b': 8 }, square);
	 * // => [16, 64] (iteration order is not guaranteed)
	 *
	 * var users = [
	 *   { 'user': 'barney' },
	 *   { 'user': 'fred' }
	 * ];
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, 'user');
	 * // => ['barney', 'fred']
	 */
	function map(collection, iteratee) {
	  var func = isArray(collection) ? arrayMap : baseMap;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = map;


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(91),
	    isArrayLike = __webpack_require__(17);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	var baseCastPath = __webpack_require__(154),
	    get = __webpack_require__(152),
	    isFunction = __webpack_require__(20),
	    isKey = __webpack_require__(158),
	    parent = __webpack_require__(163);
	
	/**
	 * This method is like `_.get` except that if the resolved value is a function
	 * it's invoked with the `this` binding of its parent object and its result
	 * is returned.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to resolve.
	 * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	 *
	 * _.result(object, 'a[0].b.c1');
	 * // => 3
	 *
	 * _.result(object, 'a[0].b.c2');
	 * // => 4
	 *
	 * _.result(object, 'a[0].b.c3', 'default');
	 * // => 'default'
	 *
	 * _.result(object, 'a[0].b.c3', _.constant('default'));
	 * // => 'default'
	 */
	function result(object, path, defaultValue) {
	  if (!isKey(path, object)) {
	    path = baseCastPath(path);
	    var result = get(object, path);
	    object = parent(object, path);
	  } else {
	    result = object == null ? undefined : object[path];
	  }
	  if (result === undefined) {
	    result = defaultValue;
	  }
	  return isFunction(result) ? result.call(object) : result;
	}
	
	module.exports = result;


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var React = __webpack_require__(170),
	    classNames = __webpack_require__(182);
	
	/**
	 * Internal dependencies
	 */
	var Count = __webpack_require__(296);
	
	var SelectDropdownItem = React.createClass({
		displayName: 'SelectDropdownItem',
	
		propTypes: {
			children: React.PropTypes.string.isRequired,
			path: React.PropTypes.string,
			selected: React.PropTypes.bool,
			onClick: React.PropTypes.func,
			count: React.PropTypes.number
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				selected: false
			};
		},
	
		render: function render() {
			var optionClassName = classNames(this.props.className, {
				'select-dropdown__item': true,
				'is-selected': this.props.selected,
				'is-disabled': this.props.disabled
			});
	
			return React.createElement(
				'li',
				{ className: 'select-dropdown__option' },
				React.createElement(
					'a',
					{
						ref: 'itemLink',
						href: this.props.path,
						className: optionClassName,
						onClick: this.props.disabled ? null : this.props.onClick,
						'data-bold-text': this.props.value || this.props.children,
						role: 'menuitem',
						tabIndex: 0,
						'aria-selected': this.props.selected },
					React.createElement(
						'span',
						{ className: 'select-dropdown__item-text' },
						this.props.children,
						'number' === typeof this.props.count && React.createElement(Count, { count: this.props.count })
					)
				)
			);
		}
	});
	
	module.exports = SelectDropdownItem;

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var React = __webpack_require__(170);
	
	var SelectDropdownSeparator = React.createClass({
		displayName: "SelectDropdownSeparator",
	
	
		render: function render() {
			return React.createElement("li", { className: "select-dropdown__separator" });
		}
	});
	
	module.exports = SelectDropdownSeparator;

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	var Component = _react2.default.Component; /** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	
	var stopPropagation = function stopPropagation(event) {
		return event.stopPropagation();
	};
	
	var SelectDropdownLabel = function (_Component) {
		(0, _inherits3.default)(SelectDropdownLabel, _Component);
	
		function SelectDropdownLabel() {
			(0, _classCallCheck3.default)(this, SelectDropdownLabel);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(SelectDropdownLabel).apply(this, arguments));
		}
	
		(0, _createClass3.default)(SelectDropdownLabel, [{
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					"li",
					{
						onClick: stopPropagation,
						className: "select-dropdown__label"
					},
					_react2.default.createElement(
						"label",
						null,
						this.props.children
					)
				);
			}
		}]);
		return SelectDropdownLabel;
	}(Component);
	
	exports.default = SelectDropdownLabel;
	;
	module.exports = exports["default"];

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External Dependencies
	 */
	var React = __webpack_require__(170),
	    PureRenderMixin = __webpack_require__(188),
	    classNames = __webpack_require__(182);
	
	/**
	 * Internal Dependencies
	 */
	var Count = __webpack_require__(296);
	
	/**
	 * Main
	 */
	var NavItem = React.createClass({
		displayName: 'NavItem',
	
	
		mixins: [PureRenderMixin],
	
		propTypes: {
			itemType: React.PropTypes.string,
			path: React.PropTypes.string,
			selected: React.PropTypes.bool,
			tabIndex: React.PropTypes.number,
			onClick: React.PropTypes.func,
			isExternalLink: React.PropTypes.bool,
			disabled: React.PropTypes.bool,
			count: React.PropTypes.number
		},
	
		render: function render() {
			var itemClassPrefix = this.props.itemType ? this.props.itemType : 'tab',
			    itemClassName,
			    target,
			    onClick,
			    itemClasses = {
				'is-selected': this.props.selected,
				'is-external': this.props.isExternalLink
			};
	
			itemClasses['section-nav-' + itemClassPrefix] = true;
			itemClassName = classNames(itemClasses);
	
			if (this.props.isExternalLink) {
				target = '_blank';
			}
	
			if (!this.props.disabled) {
				onClick = this.props.onClick;
			}
	
			return React.createElement(
				'li',
				{ className: itemClassName },
				React.createElement(
					'a',
					{
						href: this.props.path,
						target: target,
						className: 'section-nav-' + itemClassPrefix + '__link',
						onTouchTap: onClick,
						tabIndex: this.props.tabIndex || 0,
						'aria-selected': this.props.selected,
						disabled: this.props.disabled,
						role: 'menuitem',
						rel: this.props.isExternalLink ? 'external' : null },
					React.createElement(
						'span',
						{ className: 'section-nav-' + itemClassPrefix + '__text' },
						this.props.children,
						'number' === typeof this.props.count && React.createElement(Count, { count: this.props.count })
					)
				)
			);
		}
	});
	
	module.exports = NavItem;

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends2 = __webpack_require__(315);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _reactDom = __webpack_require__(171);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _debounce = __webpack_require__(290);
	
	var _debounce2 = _interopRequireDefault(_debounce);
	
	var _noop = __webpack_require__(175);
	
	var _noop2 = _interopRequireDefault(_noop);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _analytics = __webpack_require__(175);
	
	var _analytics2 = _interopRequireDefault(_analytics);
	
	var _spinner = __webpack_require__(329);
	
	var _spinner2 = _interopRequireDefault(_spinner);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	var _viewport = __webpack_require__(293);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal variables
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var SEARCH_DEBOUNCE_MS = 300;
	
	var Search = _react2.default.createClass({
	
		displayName: 'Search',
	
		statics: {
			instances: 0
		},
	
		propTypes: {
			additionalClasses: _react.PropTypes.string,
			initialValue: _react.PropTypes.string,
			placeholder: _react.PropTypes.string,
			pinned: _react.PropTypes.bool,
			delaySearch: _react.PropTypes.bool,
			delayTimeout: _react.PropTypes.number,
			onSearch: _react.PropTypes.func.isRequired,
			onSearchChange: _react.PropTypes.func,
			onSearchClose: _react.PropTypes.func,
			analyticsGroup: _react.PropTypes.string,
			autoFocus: _react.PropTypes.bool,
			disabled: _react.PropTypes.bool,
			onKeyDown: _react.PropTypes.func,
			disableAutocorrect: _react.PropTypes.bool,
			onBlur: _react.PropTypes.func,
			searching: _react.PropTypes.bool,
			isOpen: _react.PropTypes.bool,
			dir: _react.PropTypes.string,
			fitsContainer: _react.PropTypes.bool
		},
	
		getInitialState: function getInitialState() {
			return {
				keyword: this.props.initialValue || '',
				isOpen: !!this.props.isOpen
			};
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				pinned: false,
				delaySearch: false,
				delayTimeout: SEARCH_DEBOUNCE_MS,
				autoFocus: false,
				disabled: false,
				onSearchChange: _noop2.default,
				onSearchClose: _noop2.default,
				onKeyDown: _noop2.default,
				disableAutocorrect: false,
				searching: false,
				isOpen: false,
				dir: undefined,
				fitsContainer: false
			};
		},
	
		componentWillMount: function componentWillMount() {
			this.setState({
				instanceId: ++Search.instances
			});
		},
	
		componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
			if (nextProps.onSearch !== this.props.onSearch || nextProps.delaySearch !== this.props.delaySearch) {
				this.onSearch = this.props.delaySearch ? (0, _debounce2.default)(this.props.onSearch, this.props.delayTimeout) : this.props.onSearch;
			}
	
			if (nextProps.isOpen) {
				this.setState({ isOpen: nextProps.isOpen });
			}
		},
	
		componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
			// Focus if the search box was opened or the autoFocus prop has changed
			if (this.state.isOpen && !prevState.isOpen || this.props.autoFocus && !prevProps.autoFocus) {
				this.focus();
			}
	
			if (this.state.keyword === prevState.keyword) {
				return;
			}
			// if there's a keyword change: trigger search
			if (this.state.keyword) {
				// this.onSearch is debounced when this.props.delaySearch === true
				// this avoids unnecessary fetches while user types
				this.onSearch(this.state.keyword);
			} else {
				// this.props.onSearch is _not_ debounced
				// no need to debounce if ! this.state.keyword
				if (this.props.delaySearch) {
					// Cancel any pending debounce
					this.onSearch.cancel();
				}
				this.props.onSearch(this.state.keyword);
			}
			this.props.onSearchChange(this.state.keyword);
		},
	
		componentDidMount: function componentDidMount() {
			this.onSearch = this.props.delaySearch ? (0, _debounce2.default)(this.props.onSearch, this.props.delayTimeout) : this.props.onSearch;
	
			if (this.props.autoFocus) {
				this.focus();
			}
		},
	
		focus: function focus() {
			_reactDom2.default.findDOMNode(this.refs.searchInput).focus();
		},
	
		blur: function blur() {
			_reactDom2.default.findDOMNode(this.refs.searchInput).blur();
		},
	
		getCurrentSearchValue: function getCurrentSearchValue() {
			return _reactDom2.default.findDOMNode(this.refs.searchInput).value;
		},
	
		clear: function clear() {
			this.setState({ keyword: '' });
		},
	
		onBlur: function onBlur() {
			if (this.props.onBlur) {
				this.props.onBlur();
			}
		},
	
		onChange: function onChange() {
			this.setState({
				keyword: this.getCurrentSearchValue()
			});
		},
	
		openSearch: function openSearch(event) {
			event.preventDefault();
			this.setState({
				keyword: '',
				isOpen: true
			});
	
			_analytics2.default.ga.recordEvent(this.props.analyticsGroup, 'Clicked Open Search');
		},
	
		closeSearch: function closeSearch(event) {
			event.preventDefault();
	
			if (this.props.disabled) {
				return;
			}
	
			var input = _reactDom2.default.findDOMNode(this.refs.searchInput);
	
			this.setState({
				keyword: '',
				isOpen: this.props.isOpen || false
			});
	
			input.value = ''; // will not trigger onChange
			input.blur();
	
			if (this.props.pinned) {
				_reactDom2.default.findDOMNode(this.refs.openIcon).focus();
			}
	
			this.props.onSearchClose(event);
	
			_analytics2.default.ga.recordEvent(this.props.analyticsGroup, 'Clicked Close Search');
		},
	
		keyUp: function keyUp(event) {
			if (event.key === 'Enter' && (0, _viewport.isMobile)()) {
				//dismiss soft keyboards
				this.blur();
			}
	
			if (!this.props.pinned) {
				return;
			}
	
			if (event.key === 'Escape') {
				this.closeSearch(event);
			}
		},
	
		keyDown: function keyDown(event) {
			if (event.key === 'Escape' && event.target.value === '') {
				this.closeSearch(event);
			}
			this.props.onKeyDown(event);
		},
	
		// Puts the cursor at end of the text when starting
		// with `initialValue` set.
		onFocus: function onFocus() {
			var input = _reactDom2.default.findDOMNode(this.refs.searchInput),
			    setValue = input.value;
	
			if (setValue) {
				// Firefox needs clear or won't move cursor to end
				input.value = '';
				input.value = setValue;
			}
		},
	
		render: function render() {
			var searchClass,
			    searchValue = this.state.keyword,
			    placeholder = this.props.placeholder || _i18nCalypso2.default.translate('Search…', { textOnly: true }),
			    enableOpenIcon = this.props.pinned && !this.state.isOpen,
			    isOpenUnpinnedOrQueried = this.state.isOpen || !this.props.pinned || this.props.initialValue;
	
			var autocorrect = this.props.disableAutocorrect && {
				autoComplete: 'off',
				autoCorrect: 'off',
				spellCheck: 'false'
			};
	
			searchClass = (0, _classnames2.default)(this.props.additionalClasses, {
				'is-expanded-to-container': this.props.fitsContainer,
				'is-open': isOpenUnpinnedOrQueried,
				'is-searching': this.props.searching,
				rtl: this.props.dir === 'rtl',
				ltr: this.props.dir === 'ltr',
				search: true
			});
	
			return _react2.default.createElement(
				'div',
				{ className: searchClass, role: 'search' },
				_react2.default.createElement(_spinner2.default, null),
				_react2.default.createElement(
					'div',
					{
						ref: 'openIcon',
						onTouchTap: enableOpenIcon ? this.openSearch : this.focus,
						tabIndex: enableOpenIcon ? '0' : null,
						onKeyDown: enableOpenIcon ? this._keyListener.bind(this, 'openSearch') : null,
						'aria-controls': 'search-component-' + this.state.instanceId,
						'aria-label': _i18nCalypso2.default.translate('Open Search', { context: 'button label' }) },
					_react2.default.createElement(_gridicon2.default, { icon: 'search', className: 'search-open__icon' + (this.props.dir ? ' ' + this.props.dir : '') })
				),
				_react2.default.createElement('input', (0, _extends3.default)({
					type: 'search',
					id: 'search-component-' + this.state.instanceId,
					className: 'search__input' + (this.props.dir ? ' ' + this.props.dir : ''),
					placeholder: placeholder,
					role: 'search',
					value: searchValue,
					ref: 'searchInput',
					onChange: this.onChange,
					onKeyUp: this.keyUp,
					onKeyDown: this.keyDown,
					onFocus: this.onFocus,
					onBlur: this.onBlur,
					disabled: this.props.disabled,
					'aria-hidden': !isOpenUnpinnedOrQueried,
					autoCapitalize: 'none',
					dir: this.props.dir
				}, autocorrect)),
				searchValue || this.state.isOpen ? this.closeButton() : null
			);
		},
	
		closeButton: function closeButton() {
			return _react2.default.createElement(
				'span',
				{
					onTouchTap: this.closeSearch,
					tabIndex: '0',
					onKeyDown: this._keyListener.bind(this, 'closeSearch'),
					'aria-controls': 'search-component-' + this.state.instanceId,
					'aria-label': _i18nCalypso2.default.translate('Close Search', { context: 'button label' }) },
				_react2.default.createElement(_gridicon2.default, { icon: 'cross', className: 'search-close__icon' + (this.props.dir ? ' ' + this.props.dir : '') })
			);
		},
	
		_keyListener: function _keyListener(methodToCall, event) {
			switch (event.key) {
				case ' ':
				case 'Enter':
					this[methodToCall](event);
					break;
			}
		}
	});
	
	module.exports = Search;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var React = __webpack_require__(170),
	    classNames = __webpack_require__(182);
	
	/**
	 * Module variables
	 */
	var Spinner;
	
	Spinner = React.createClass({
		displayName: 'Spinner',
	
		propTypes: {
			className: React.PropTypes.string,
			size: React.PropTypes.number,
			duration: React.PropTypes.number
		},
	
		statics: {
			instances: 0
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				size: 20,
				duration: 3000
			};
		},
	
		componentWillMount: function componentWillMount() {
			this.setState({
				instanceId: ++Spinner.instances
			});
		},
	
		/**
	  * Returns whether the current browser supports CSS animations for SVG
	  * elements. Specifically, this returns false for Internet Explorer
	  * versions 11 and below.
	  *
	  * @see http://dev.modern.ie/platform/status/csstransitionsanimationsforsvgelements/
	  * @return {Boolean} True if the browser supports CSS animations for SVG
	  *                   elements, or false otherwise.
	  */
		isSVGCSSAnimationSupported: function isSVGCSSAnimationSupported() {
			var navigator = global.window ? global.window.navigator.userAgent : ''; // FIXME: replace with UA from server
			return !/(MSIE |Trident\/)/.test(navigator);
		},
	
		getClassName: function getClassName() {
			return classNames('spinner', this.props.className, {
				'is-fallback': !this.isSVGCSSAnimationSupported()
			});
		},
	
		renderFallback: function renderFallback() {
			var style = {
				width: this.props.size,
				height: this.props.size
			};
	
			return React.createElement(
				'div',
				{ className: this.getClassName(), style: style },
				React.createElement('span', { className: 'spinner__progress is-left' }),
				React.createElement('span', { className: 'spinner__progress is-right' })
			);
		},
	
		render: function render() {
			var instanceId = parseInt(this.state.instanceId, 10);
	
			if (!this.isSVGCSSAnimationSupported()) {
				return this.renderFallback();
			}
	
			// We're using `dangerouslySetInnerHTML` for the SVG, as React unfortunately doesn't support
			// SVG's `mask` attribute, see https://github.com/facebook/react/issues/1657#issuecomment-63209488
			// The only variable we're using inside is `instanceId`, which is an (integer) counter
			// we generate ourselves, so we're fine.
			/*eslint-disable react/no-danger*/
			return React.createElement(
				'div',
				{ className: this.getClassName() },
				React.createElement('svg', { className: 'spinner__image',
					width: this.props.size,
					height: this.props.size,
					viewBox: '0 0 100 100',
					dangerouslySetInnerHTML: { __html: '\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<mask id="maskBorder' + instanceId + '">\n\t\t\t\t\t\t\t<rect x="0" y="0" width="100%" height="100%" fill="white" />\n\t\t\t\t\t\t\t<circle r="46%" cx="50%" cy="50%" fill="black" />\n\t\t\t\t\t\t</mask>\n\t\t\t\t\t\t<mask id="maskDonut' + instanceId + '">\n\t\t\t\t\t\t\t<rect x="0" y="0" width="100%" height="100%" fill="black" />\n\t\t\t\t\t\t\t<circle r="46%" cx="50%" cy="50%" fill="white" />\n\t\t\t\t\t\t\t<circle r="30%" cx="50%" cy="50%" fill="black" />\n\t\t\t\t\t\t</mask>\n\t\t\t\t\t\t<mask id="maskLeft' + instanceId + '">\n\t\t\t\t\t\t\t<rect x="0" y="0" width="50%" height="100%" fill="white" />\n\t\t\t\t\t\t</mask>\n\t\t\t\t\t\t<mask id="maskRight' + instanceId + '">\n\t\t\t\t\t\t\t<rect x="50%" y="0" width="50%" height="100%" fill="white" />\n\t\t\t\t\t\t</mask>\n\t\t\t\t\t</defs>\n\t\t\t\t\t<circle class="spinner__border" r="50%" cx="50%" cy="50%" mask="url( #maskBorder' + instanceId + ' )" />\n\t\t\t\t\t<g mask="url( #maskDonut' + instanceId + ' )">\n\t\t\t\t\t\t<g mask="url( #maskLeft' + instanceId + ' )">\n\t\t\t\t\t\t\t<rect class="spinner__progress is-left" x="0" y="0" width="50%" height="100%" />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g mask="url( #maskRight' + instanceId + ' )">\n\t\t\t\t\t\t\t<rect class="spinner__progress is-right" x="50%" y="0" width="50%" height="100%" />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t' } })
			);
			/*eslint-enable react/no-danger*/
		}
	});
	
	module.exports = Spinner;

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	exports.fetchThemes = fetchThemes;
	exports.fetchNextPage = fetchNextPage;
	exports.query = query;
	exports.incrementThemesPage = incrementThemesPage;
	exports.fetchCurrentTheme = fetchCurrentTheme;
	exports.fetchThemeDetails = fetchThemeDetails;
	exports.receiveThemeDetails = receiveThemeDetails;
	exports.receiveThemeDetailsFailure = receiveThemeDetailsFailure;
	exports.receiveServerError = receiveServerError;
	exports.receiveThemes = receiveThemes;
	exports.activate = activate;
	exports.activated = activated;
	exports.clearActivated = clearActivated;
	exports.signup = signup;
	exports.customize = customize;
	exports.purchase = purchase;
	exports.setBackPath = setBackPath;
	
	var _page = __webpack_require__(176);
	
	var _page2 = _interopRequireDefault(_page);
	
	var _conforms = __webpack_require__(331);
	
	var _conforms2 = _interopRequireDefault(_conforms);
	
	var _defer = __webpack_require__(354);
	
	var _defer2 = _interopRequireDefault(_defer);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _property = __webpack_require__(166);
	
	var _property2 = _interopRequireDefault(_property);
	
	var _actionTypes = __webpack_require__(174);
	
	var _helpers = __webpack_require__(309);
	
	var _selectors = __webpack_require__(356);
	
	var _actions = __webpack_require__(357);
	
	var _selectors2 = __webpack_require__(389);
	
	var _selectors3 = __webpack_require__(390);
	
	var _selectors4 = __webpack_require__(391);
	
	var _wp = __webpack_require__(392);
	
	var _wp2 = _interopRequireDefault(_wp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	var debug = (0, _debug2.default)('calypso:themes:actions'); //eslint-disable-line no-unused-vars
	
	
	/**
	 * Internal dependencies
	 */
	function fetchThemes(site) {
		return function (dispatch, getState) {
			var queryParams = (0, _selectors3.getQueryParams)(getState());
			var startTime = new Date().getTime();
	
			debug('Query params', queryParams);
	
			_wp2.default.undocumented().themes(site, queryParams).then(function (themes) {
				var responseTime = new Date().getTime() - startTime;
				dispatch(receiveThemes(themes, site, queryParams, responseTime));
			}).catch(function (error) {
				return receiveServerError(error);
			});
		};
	}
	
	function fetchNextPage(site) {
		return function (dispatch) {
			dispatch(incrementThemesPage(site));
			dispatch(fetchThemes(site));
		};
	}
	
	function query(params) {
		return {
			type: _actionTypes.THEMES_QUERY,
			params: params
		};
	}
	
	function incrementThemesPage(site) {
		return {
			type: _actionTypes.THEMES_INCREMENT_PAGE,
			site: site
		};
	}
	
	function fetchCurrentTheme(siteId) {
		return function (dispatch) {
			dispatch({
				type: _actionTypes.THEME_REQUEST_CURRENT,
				siteId: siteId
			});
	
			_wp2.default.undocumented().activeTheme(siteId).then(function (theme) {
				debug('Received current theme', theme);
				dispatch({
					type: _actionTypes.THEME_RECEIVE_CURRENT,
					siteId: siteId,
					themeId: theme.id,
					themeName: theme.name,
					themeCost: theme.cost
				});
			}).catch(function (error) {
				dispatch({
					type: _actionTypes.THEME_REQUEST_CURRENT_FAILURE,
					siteId: siteId,
					error: error
				});
			});
		};
	}
	
	function fetchThemeDetails(id) {
		return function (dispatch) {
			_wp2.default.undocumented().themeDetails(id).then(function (themeDetails) {
				debug('Received theme details', themeDetails);
				dispatch(receiveThemeDetails(themeDetails));
			}).catch(function (error) {
				dispatch(receiveThemeDetailsFailure(id, error));
			});
		};
	}
	
	function receiveThemeDetails(theme) {
		return {
			type: _actionTypes.THEME_DETAILS_RECEIVE,
			themeId: theme.id,
			themeName: theme.name,
			themeAuthor: theme.author,
			themePrice: theme.price,
			themeScreenshot: theme.screenshot,
			themeDescription: theme.description,
			themeDescriptionLong: theme.description_long,
			themeSupportDocumentation: theme.extended ? theme.extended.support_documentation : undefined,
			themeDownload: theme.download_uri || undefined,
			themeTaxonomies: theme.taxonomies,
			themeStylesheet: theme.stylesheet,
			themeDemoUri: theme.demo_uri
		};
	}
	
	function receiveThemeDetailsFailure(id, error) {
		debug('Received error for theme ' + id + ':', error);
		return {
			type: _actionTypes.THEME_DETAILS_RECEIVE_FAILURE,
			themeId: id,
			error: error
		};
	}
	
	function receiveServerError(error) {
		return {
			type: _actionTypes.THEMES_RECEIVE_SERVER_ERROR,
			error: error
		};
	}
	
	var isFirstPageOfSearch = (0, _conforms2.default)({
		search: function search(a) {
			return undefined !== a;
		},
		page: function page(a) {
			return a === 1;
		}
	});
	
	function receiveThemes(data, site, queryParams, responseTime) {
		return function (dispatch, getState) {
			var themeAction = {
				type: _actionTypes.THEMES_RECEIVE,
				siteId: site.ID,
				isJetpack: !!site.jetpack,
				wasJetpack: (0, _selectors2.isJetpack)(getState()),
				themes: data.themes,
				found: data.found,
				queryParams: queryParams
			};
	
			var trackShowcaseSearch = (0, _actions.recordTracksEvent)('calypso_themeshowcase_search', {
				search_term: queryParams.search || null,
				tier: queryParams.tier,
				response_time_in_ms: responseTime,
				result_count: data.found,
				results_first_page: data.themes.map((0, _property2.default)('id'))
			});
	
			var action = isFirstPageOfSearch(queryParams) ? (0, _actions.withAnalytics)(trackShowcaseSearch, themeAction) : themeAction;
	
			dispatch(action);
		};
	}
	
	function activate(theme, site) {
		var source = arguments.length <= 2 || arguments[2] === undefined ? 'unknown' : arguments[2];
	
		return function (dispatch) {
			dispatch({
				type: _actionTypes.THEME_ACTIVATE,
				theme: theme,
				site: site
			});
	
			_wp2.default.undocumented().activateTheme(theme, site.ID).then(function () {
				dispatch(activated(theme, site, source));
			}).catch(function (error) {
				dispatch(receiveServerError(error));
			});
		};
	}
	
	function activated(theme, site) {
		var source = arguments.length <= 2 || arguments[2] === undefined ? 'unknown' : arguments[2];
		var purchased = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];
	
		return function (dispatch, getState) {
			var previousTheme = (0, _selectors.getCurrentTheme)(getState(), site.ID);
			var queryParams = getState().themes.themesList.get('query');
	
			if ((typeof theme === 'undefined' ? 'undefined' : (0, _typeof3.default)(theme)) !== 'object') {
				theme = (0, _selectors4.getThemeById)(getState(), theme);
			}
	
			(0, _defer2.default)(function () {
				var action = {
					type: _actionTypes.THEME_ACTIVATED,
					theme: theme,
					site: site
				};
	
				var trackThemeActivation = (0, _actions.recordTracksEvent)('calypso_themeshowcase_theme_activate', {
					theme: theme.id,
					previous_theme: previousTheme.id,
					source: source,
					purchased: purchased,
					search_term: queryParams.get('search') || null
				});
	
				dispatch((0, _actions.withAnalytics)(trackThemeActivation, action));
			});
		};
	}
	
	function clearActivated() {
		return {
			type: _actionTypes.THEME_CLEAR_ACTIVATED
		};
	}
	
	function signup(theme) {
		return function (dispatch) {
			var signupUrl = (0, _helpers.getSignupUrl)(theme);
	
			dispatch({
				type: _actionTypes.THEME_SIGNUP_WITH,
				theme: theme
			});
	
			// `navigateTo` uses `page()` here, which messes with `pushState`,
			// which we don't want here, since we're navigating away from Calypso.
			window.location = signupUrl;
		};
	}
	
	function customize(theme, site) {
		return function (dispatch) {
			var customizeUrl = (0, _helpers.getCustomizeUrl)(theme, site);
	
			dispatch({
				type: _actionTypes.THEME_CUSTOMIZE,
				site: site.id
			});
	
			(0, _helpers.navigateTo)(customizeUrl, site.jetpack);
		};
	}
	
	function purchase(theme, site) {
		var source = arguments.length <= 2 || arguments[2] === undefined ? 'unknown' : arguments[2];
	
		var CartActions = __webpack_require__(175);
		var themeItem = __webpack_require__(444).themeItem;
	
		return function (dispatch) {
			CartActions.addItem(themeItem(theme.id, source));
	
			(0, _defer2.default)(function () {
				(0, _page2.default)('/checkout/' + site.slug);
	
				dispatch({
					type: _actionTypes.THEME_PURCHASE,
					id: theme.id,
					site: site
				});
			});
		};
	}
	
	// Set destination for 'back' button on theme sheet
	function setBackPath(path) {
		return {
			type: _actionTypes.THEME_BACK_PATH_SET,
			path: path
		};
	}

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(332),
	    baseConforms = __webpack_require__(353);
	
	/**
	 * Creates a function that invokes the predicate properties of `source` with
	 * the corresponding property values of a given object, returning `true` if
	 * all predicates return truthy, else `false`.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @param {Object} source The object of property predicates to conform to.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 40 }
	 * ];
	 *
	 * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));
	 * // => [{ 'user': 'fred', 'age': 40 }]
	 */
	function conforms(source) {
	  return baseConforms(baseClone(source, true));
	}
	
	module.exports = conforms;


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(101),
	    arrayEach = __webpack_require__(333),
	    assignValue = __webpack_require__(13),
	    baseAssign = __webpack_require__(334),
	    baseForOwn = __webpack_require__(92),
	    cloneBuffer = __webpack_require__(335),
	    copyArray = __webpack_require__(336),
	    copySymbols = __webpack_require__(337),
	    getTag = __webpack_require__(142),
	    initCloneArray = __webpack_require__(339),
	    initCloneByTag = __webpack_require__(340),
	    initCloneObject = __webpack_require__(349),
	    isArray = __webpack_require__(36),
	    isBuffer = __webpack_require__(351),
	    isHostObject = __webpack_require__(117),
	    isObject = __webpack_require__(21);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =
	cloneableTags[dateTag] = cloneableTags[float32Tag] =
	cloneableTags[float64Tag] = cloneableTags[int8Tag] =
	cloneableTags[int16Tag] = cloneableTags[int32Tag] =
	cloneableTags[mapTag] = cloneableTags[numberTag] =
	cloneableTags[objectTag] = cloneableTags[regexpTag] =
	cloneableTags[setTag] = cloneableTags[stringTag] =
	cloneableTags[symbolTag] = cloneableTags[uint8Tag] =
	cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =
	cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, isDeep, customizer, key, object, stack) {
	  var result;
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      if (isHostObject(value)) {
	        return object ? value : {};
	      }
	      result = initCloneObject(isFunc ? {} : value);
	      if (!isDeep) {
	        return copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  // Recursively populate clone (susceptible to call stack limits).
	  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {
	    assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));
	  });
	  return isArr ? result : copySymbols(value, result);
	}
	
	module.exports = baseClone;


/***/ },
/* 333 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(11),
	    keys = __webpack_require__(28);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ },
/* 335 */
/***/ function(module, exports) {

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var Ctor = buffer.constructor,
	      result = new Ctor(buffer.length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;


/***/ },
/* 336 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(11),
	    getSymbols = __webpack_require__(338);
	
	/**
	 * Copies own symbol properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ },
/* 338 */
/***/ function(module, exports) {

	/** Built-in value references. */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own symbol properties of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = getOwnPropertySymbols || function() {
	  return [];
	};
	
	module.exports = getSymbols;


/***/ },
/* 339 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(341),
	    cloneMap = __webpack_require__(342),
	    cloneRegExp = __webpack_require__(344),
	    cloneSet = __webpack_require__(345),
	    cloneSymbol = __webpack_require__(347),
	    cloneTypedArray = __webpack_require__(348);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return cloneMap(object);
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return cloneSet(object);
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(138);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var Ctor = arrayBuffer.constructor,
	      result = new Ctor(arrayBuffer.byteLength),
	      view = new Uint8Array(result);
	
	  view.set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	var addMapEntry = __webpack_require__(343),
	    arrayReduce = __webpack_require__(246),
	    mapToArray = __webpack_require__(139);
	
	/**
	 * Creates a clone of `map`.
	 *
	 * @private
	 * @param {Object} map The map to clone.
	 * @returns {Object} Returns the cloned map.
	 */
	function cloneMap(map) {
	  var Ctor = map.constructor;
	  return arrayReduce(mapToArray(map), addMapEntry, new Ctor);
	}
	
	module.exports = cloneMap;


/***/ },
/* 343 */
/***/ function(module, exports) {

	/**
	 * Adds the key-value `pair` to `map`.
	 *
	 * @private
	 * @param {Object} map The map to modify.
	 * @param {Array} pair The key-value pair to add.
	 * @returns {Object} Returns `map`.
	 */
	function addMapEntry(map, pair) {
	  map.set(pair[0], pair[1]);
	  return map;
	}
	
	module.exports = addMapEntry;


/***/ },
/* 344 */
/***/ function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var Ctor = regexp.constructor,
	      result = new Ctor(regexp.source, reFlags.exec(regexp));
	
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	var addSetEntry = __webpack_require__(346),
	    arrayReduce = __webpack_require__(246),
	    setToArray = __webpack_require__(140);
	
	/**
	 * Creates a clone of `set`.
	 *
	 * @private
	 * @param {Object} set The set to clone.
	 * @returns {Object} Returns the cloned set.
	 */
	function cloneSet(set) {
	  var Ctor = set.constructor;
	  return arrayReduce(setToArray(set), addSetEntry, new Ctor);
	}
	
	module.exports = cloneSet;


/***/ },
/* 346 */
/***/ function(module, exports) {

	/**
	 * Adds `value` to `set`.
	 *
	 * @private
	 * @param {Object} set The set to modify.
	 * @param {*} value The value to add.
	 * @returns {Object} Returns `set`.
	 */
	function addSetEntry(set, value) {
	  set.add(value);
	  return set;
	}
	
	module.exports = addSetEntry;


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(137);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return Symbol ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(341);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var arrayBuffer = typedArray.buffer,
	      buffer = isDeep ? cloneArrayBuffer(arrayBuffer) : arrayBuffer,
	      Ctor = typedArray.constructor;
	
	  return new Ctor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(350),
	    isFunction = __webpack_require__(20),
	    isPrototype = __webpack_require__(38);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  if (isPrototype(object)) {
	    return {};
	  }
	  var Ctor = object.constructor;
	  return baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);
	}
	
	module.exports = initCloneObject;


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(21);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} prototype The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	function baseCreate(proto) {
	  return isObject(proto) ? objectCreate(proto) : {};
	}
	
	module.exports = baseCreate;


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var constant = __webpack_require__(352),
	    root = __webpack_require__(119);
	
	/** Used to determine if values are of the language type `Object`. */
	var objectTypes = {
	  'function': true,
	  'object': true
	};
	
	/** Detect free variable `exports`. */
	var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	  ? exports
	  : undefined;
	
	/** Detect free variable `module`. */
	var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	  ? module
	  : undefined;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = (freeModule && freeModule.exports === freeExports)
	  ? freeExports
	  : undefined;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = !Buffer ? constant(false) : function(value) {
	  return value instanceof Buffer;
	};
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(120)(module)))

/***/ },
/* 352 */
/***/ function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var getter = _.constant(object);
	 *
	 * getter() === object;
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	var keys = __webpack_require__(28);
	
	/**
	 * The base implementation of `_.conforms` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property predicates to conform to.
	 * @returns {Function} Returns the new function.
	 */
	function baseConforms(source) {
	  var props = keys(source),
	      length = props.length;
	
	  return function(object) {
	    if (object == null) {
	      return !length;
	    }
	    var index = length;
	    while (index--) {
	      var key = props[index],
	          predicate = source[key],
	          value = object[key];
	
	      if ((value === undefined && !(key in Object(object))) || !predicate(value)) {
	        return false;
	      }
	    }
	    return true;
	  };
	}
	
	module.exports = baseConforms;


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	var baseDelay = __webpack_require__(355),
	    rest = __webpack_require__(24);
	
	/**
	 * Defers invoking the `func` until the current call stack has cleared. Any
	 * additional arguments are provided to `func` when it's invoked.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to defer.
	 * @param {...*} [args] The arguments to invoke `func` with.
	 * @returns {number} Returns the timer id.
	 * @example
	 *
	 * _.defer(function(text) {
	 *   console.log(text);
	 * }, 'deferred');
	 * // => logs 'deferred' after one or more milliseconds
	 */
	var defer = rest(function(func, args) {
	  return baseDelay(func, 1, args);
	});
	
	module.exports = defer;


/***/ },
/* 355 */
/***/ function(module, exports) {

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * The base implementation of `_.delay` and `_.defer` which accepts an array
	 * of `func` arguments.
	 *
	 * @private
	 * @param {Function} func The function to delay.
	 * @param {number} wait The number of milliseconds to delay invocation.
	 * @param {Object} args The arguments to provide to `func`.
	 * @returns {number} Returns the timer id.
	 */
	function baseDelay(func, wait, args) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  return setTimeout(function() { func.apply(undefined, args); }, wait);
	}
	
	module.exports = baseDelay;


/***/ },
/* 356 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.getCurrentTheme = getCurrentTheme;
	exports.isActivating = isActivating;
	exports.hasActivated = hasActivated;
	exports.isRequestingCurrentTheme = isRequestingCurrentTheme;
	/** @ssr-ready **/
	
	function getCurrentTheme(state, siteId) {
		return state.themes.currentTheme.get('currentThemes').get(siteId);
	}
	
	function isActivating(state) {
		return state.themes.currentTheme.get('isActivating');
	}
	
	function hasActivated(state) {
		return state.themes.currentTheme.get('hasActivated');
	}
	
	function isRequestingCurrentTheme(state, siteId) {
		return !!state.themes.currentTheme.get('requesting').get(siteId);
	}

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.recordGooglePageView = exports.recordPageView = exports.recordTracksEvent = exports.recordGoogleEvent = exports.recordEvent = exports.bumpStat = exports.withAnalytics = exports.composeAnalytics = undefined;
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _curry = __webpack_require__(358);
	
	var _curry2 = _interopRequireDefault(_curry);
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _isFunction = __webpack_require__(20);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _merge = __webpack_require__(383);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	var _property = __webpack_require__(166);
	
	var _property2 = _interopRequireDefault(_property);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	var mergedMetaData = function mergedMetaData(a, b) {
		return [].concat((0, _toConsumableArray3.default)((0, _get2.default)(a, 'meta.analytics', [])), (0, _toConsumableArray3.default)((0, _get2.default)(b, 'meta.analytics', [])));
	};
	
	var joinAnalytics = function joinAnalytics(analytics, action) {
		return (0, _isFunction2.default)(action) ? function (dispatch) {
			dispatch(analytics);action(dispatch);
		} : (0, _merge2.default)({}, action, { meta: { analytics: mergedMetaData(analytics, action) } });
	};
	
	var composeAnalytics = exports.composeAnalytics = function composeAnalytics() {
		for (var _len = arguments.length, analytics = Array(_len), _key = 0; _key < _len; _key++) {
			analytics[_key] = arguments[_key];
		}
	
		return {
			type: _actionTypes.ANALYTICS_MULTI_TRACK,
			meta: {
				analytics: analytics.map((0, _property2.default)('meta.analytics'))
			}
		};
	};
	
	var withAnalytics = exports.withAnalytics = (0, _curry2.default)(joinAnalytics);
	
	var bumpStat = exports.bumpStat = function bumpStat(group, name) {
		return {
			type: _actionTypes.ANALYTICS_STAT_BUMP,
			meta: {
				analytics: [{
					type: _actionTypes.ANALYTICS_STAT_BUMP,
					payload: { group: group, name: name }
				}]
			}
		};
	};
	
	var recordEvent = exports.recordEvent = function recordEvent(service, args) {
		return {
			type: _actionTypes.ANALYTICS_EVENT_RECORD,
			meta: {
				analytics: [{
					type: _actionTypes.ANALYTICS_EVENT_RECORD,
					payload: (0, _assign2.default)({}, { service: service }, args)
				}]
			}
		};
	};
	
	var recordGoogleEvent = exports.recordGoogleEvent = function recordGoogleEvent(category, action, label, value) {
		return recordEvent('ga', { category: category, action: action, label: label, value: value });
	};
	
	var recordTracksEvent = exports.recordTracksEvent = function recordTracksEvent(name, properties) {
		return recordEvent('tracks', { name: name, properties: properties });
	};
	
	var recordPageView = exports.recordPageView = function recordPageView(url, title, service) {
		return {
			type: _actionTypes.ANALYTICS_PAGE_VIEW_RECORD,
			meta: {
				analytics: [{
					type: _actionTypes.ANALYTICS_PAGE_VIEW_RECORD,
					payload: {
						service: service,
						url: url,
						title: title
					}
				}]
			}
		};
	};
	
	var recordGooglePageView = exports.recordGooglePageView = function recordGooglePageView(url, title) {
		return recordPageView(url, title, 'ga');
	};

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	var createWrapper = __webpack_require__(359);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var CURRY_FLAG = 8;
	
	/**
	 * Creates a function that accepts arguments of `func` and either invokes
	 * `func` returning its result, if at least `arity` number of arguments have
	 * been provided, or returns a function that accepts the remaining `func`
	 * arguments, and so on. The arity of `func` may be specified if `func.length`
	 * is not sufficient.
	 *
	 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	 * may be used as a placeholder for provided arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of curried functions.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to curry.
	 * @param {number} [arity=func.length] The arity of `func`.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
	 * @returns {Function} Returns the new curried function.
	 * @example
	 *
	 * var abc = function(a, b, c) {
	 *   return [a, b, c];
	 * };
	 *
	 * var curried = _.curry(abc);
	 *
	 * curried(1)(2)(3);
	 * // => [1, 2, 3]
	 *
	 * curried(1, 2)(3);
	 * // => [1, 2, 3]
	 *
	 * curried(1, 2, 3);
	 * // => [1, 2, 3]
	 *
	 * // Curried with placeholders.
	 * curried(1)(_, 3)(2);
	 * // => [1, 2, 3]
	 */
	function curry(func, arity, guard) {
	  arity = guard ? undefined : arity;
	  var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	  result.placeholder = curry.placeholder;
	  return result;
	}
	
	// Assign default placeholders.
	curry.placeholder = {};
	
	module.exports = curry;


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(360),
	    createBaseWrapper = __webpack_require__(362),
	    createCurryWrapper = __webpack_require__(364),
	    createHybridWrapper = __webpack_require__(365),
	    createPartialWrapper = __webpack_require__(381),
	    getData = __webpack_require__(372),
	    mergeData = __webpack_require__(382),
	    setData = __webpack_require__(378),
	    toInteger = __webpack_require__(26);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var BIND_FLAG = 1,
	    BIND_KEY_FLAG = 2,
	    CURRY_FLAG = 8,
	    CURRY_RIGHT_FLAG = 16,
	    PARTIAL_FLAG = 32,
	    PARTIAL_RIGHT_FLAG = 64;
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask of wrapper flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - `_.bind`
	 *     2 - `_.bindKey`
	 *     4 - `_.curry` or `_.curryRight` of a bound function
	 *     8 - `_.curry`
	 *    16 - `_.curryRight`
	 *    32 - `_.partial`
	 *    64 - `_.partialRight`
	 *   128 - `_.rearg`
	 *   256 - `_.ary`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;
	
	  if (bitmask & PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;
	
	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);
	
	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];
	
	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] == null
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);
	
	  if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == BIND_FLAG) {
	    var result = createBaseWrapper(func, bitmask, thisArg);
	  } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
	    result = createCurryWrapper(func, bitmask, arity);
	  } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
	    result = createPartialWrapper(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybridWrapper.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setter(result, newData);
	}
	
	module.exports = createWrapper;


/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(165),
	    metaMap = __webpack_require__(361);
	
	/**
	 * The base implementation of `setData` without support for hot loop detection.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetData = !metaMap ? identity : function(func, data) {
	  metaMap.set(func, data);
	  return func;
	};
	
	module.exports = baseSetData;


/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	var WeakMap = __webpack_require__(144);
	
	/** Used to store function metadata. */
	var metaMap = WeakMap && new WeakMap;
	
	module.exports = metaMap;


/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	var createCtorWrapper = __webpack_require__(363),
	    root = __webpack_require__(119);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBaseWrapper(func, bitmask, thisArg) {
	  var isBind = bitmask & BIND_FLAG,
	      Ctor = createCtorWrapper(func);
	
	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}
	
	module.exports = createBaseWrapper;


/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(350),
	    isObject = __webpack_require__(21);
	
	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtorWrapper(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors.
	    // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);
	
	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}
	
	module.exports = createCtorWrapper;


/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(25),
	    createCtorWrapper = __webpack_require__(363),
	    createHybridWrapper = __webpack_require__(365),
	    createRecurryWrapper = __webpack_require__(368),
	    replaceHolders = __webpack_require__(380),
	    root = __webpack_require__(119);
	
	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurryWrapper(func, bitmask, arity) {
	  var Ctor = createCtorWrapper(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        index = length,
	        args = Array(length),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func,
	        placeholder = wrapper.placeholder;
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);
	
	    length -= holders.length;
	    return length < arity
	      ? createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, undefined, args, holders, undefined, undefined, arity - length)
	      : apply(fn, this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createCurryWrapper;


/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(366),
	    composeArgsRight = __webpack_require__(367),
	    createCtorWrapper = __webpack_require__(363),
	    createRecurryWrapper = __webpack_require__(368),
	    reorder = __webpack_require__(379),
	    replaceHolders = __webpack_require__(380),
	    root = __webpack_require__(119);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var BIND_FLAG = 1,
	    BIND_KEY_FLAG = 2,
	    CURRY_FLAG = 8,
	    CURRY_RIGHT_FLAG = 16,
	    ARY_FLAG = 128,
	    FLIP_FLAG = 512;
	
	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & ARY_FLAG,
	      isBind = bitmask & BIND_FLAG,
	      isBindKey = bitmask & BIND_KEY_FLAG,
	      isCurry = bitmask & CURRY_FLAG,
	      isCurryRight = bitmask & CURRY_RIGHT_FLAG,
	      isFlip = bitmask & FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtorWrapper(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        index = length,
	        args = Array(length);
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight);
	    }
	    if (isCurry || isCurryRight) {
	      var placeholder = wrapper.placeholder,
	          argsHolders = replaceHolders(args, placeholder);
	
	      length -= argsHolders.length;
	      if (length < arity) {
	        return createRecurryWrapper(
	          func, bitmask, createHybridWrapper, placeholder, thisArg, args,
	          argsHolders, argPos, ary, arity - length
	        );
	      }
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;
	
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && args.length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < args.length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtorWrapper(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}
	
	module.exports = createHybridWrapper;


/***/ },
/* 366 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array|Object} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders) {
	  var holdersLength = holders.length,
	      argsIndex = -1,
	      argsLength = nativeMax(args.length - holdersLength, 0),
	      leftIndex = -1,
	      leftLength = partials.length,
	      result = Array(leftLength + argsLength);
	
	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    result[holders[argsIndex]] = args[argsIndex];
	  }
	  while (argsLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgs;


/***/ },
/* 367 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array|Object} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders) {
	  var holdersIndex = -1,
	      holdersLength = holders.length,
	      argsIndex = -1,
	      argsLength = nativeMax(args.length - holdersLength, 0),
	      rightIndex = -1,
	      rightLength = partials.length,
	      result = Array(argsLength + rightLength);
	
	  while (++argsIndex < argsLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    result[offset + holders[holdersIndex]] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgsRight;


/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(336),
	    isLaziable = __webpack_require__(369),
	    setData = __webpack_require__(378);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var BIND_FLAG = 1,
	    BIND_KEY_FLAG = 2,
	    CURRY_BOUND_FLAG = 4,
	    CURRY_FLAG = 8,
	    PARTIAL_FLAG = 32,
	    PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder to replace.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & CURRY_FLAG,
	      newArgPos = argPos ? copyArray(argPos) : undefined,
	      newsHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;
	
	  bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);
	
	  if (!(bitmask & CURRY_BOUND_FLAG)) {
	    bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight,
	    newHoldersRight, newArgPos, ary, arity
	  ];
	
	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return result;
	}
	
	module.exports = createRecurryWrapper;


/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(370),
	    getData = __webpack_require__(372),
	    getFuncName = __webpack_require__(373),
	    lodash = __webpack_require__(375);
	
	/**
	 * Checks if `func` has a lazy counterpart.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.
	 */
	function isLaziable(func) {
	  var funcName = getFuncName(func),
	      other = lodash[funcName];
	
	  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	    return false;
	  }
	  if (func === other) {
	    return true;
	  }
	  var data = getData(other);
	  return !!data && func === data[0];
	}
	
	module.exports = isLaziable;


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(350),
	    baseLodash = __webpack_require__(371);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	 *
	 * @private
	 * @constructor
	 * @param {*} value The value to wrap.
	 */
	function LazyWrapper(value) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__dir__ = 1;
	  this.__filtered__ = false;
	  this.__iteratees__ = [];
	  this.__takeCount__ = MAX_ARRAY_LENGTH;
	  this.__views__ = [];
	}
	
	LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	LazyWrapper.prototype.constructor = LazyWrapper;
	
	module.exports = LazyWrapper;


/***/ },
/* 371 */
/***/ function(module, exports) {

	/**
	 * The function whose prototype all chaining wrappers inherit from.
	 *
	 * @private
	 */
	function baseLodash() {
	  // No operation performed.
	}
	
	module.exports = baseLodash;


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	var metaMap = __webpack_require__(361),
	    noop = __webpack_require__(175);
	
	/**
	 * Gets metadata for `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {*} Returns the metadata for `func`.
	 */
	var getData = !metaMap ? noop : function(func) {
	  return metaMap.get(func);
	};
	
	module.exports = getData;


/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	var realNames = __webpack_require__(374);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the name of `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {string} Returns the function name.
	 */
	function getFuncName(func) {
	  var result = (func.name + ''),
	      array = realNames[result],
	      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	  while (length--) {
	    var data = array[length],
	        otherFunc = data.func;
	    if (otherFunc == null || otherFunc == func) {
	      return data.name;
	    }
	  }
	  return result;
	}
	
	module.exports = getFuncName;


/***/ },
/* 374 */
/***/ function(module, exports) {

	/** Used to lookup unminified function names. */
	var realNames = {};
	
	module.exports = realNames;


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(370),
	    LodashWrapper = __webpack_require__(376),
	    baseLodash = __webpack_require__(371),
	    isArray = __webpack_require__(36),
	    isObjectLike = __webpack_require__(35),
	    wrapperClone = __webpack_require__(377);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates a `lodash` object which wraps `value` to enable implicit method
	 * chaining. Methods that operate on and return arrays, collections, and
	 * functions can be chained together. Methods that retrieve a single value or
	 * may return a primitive value will automatically end the chain sequence and
	 * return the unwrapped value. Otherwise, the value must be unwrapped with
	 * `_#value`.
	 *
	 * Explicit chaining, which must be unwrapped with `_#value` in all cases,
	 * may be enabled using `_.chain`.
	 *
	 * The execution of chained methods is lazy, that is, it's deferred until
	 * `_#value` is implicitly or explicitly called.
	 *
	 * Lazy evaluation allows several methods to support shortcut fusion. Shortcut
	 * fusion is an optimization to merge iteratee calls; this avoids the creation
	 * of intermediate arrays and can greatly reduce the number of iteratee executions.
	 * Sections of a chain sequence qualify for shortcut fusion if the section is
	 * applied to an array of at least two hundred elements and any iteratees
	 * accept only one argument. The heuristic for whether a section qualifies
	 * for shortcut fusion is subject to change.
	 *
	 * Chaining is supported in custom builds as long as the `_#value` method is
	 * directly or indirectly included in the build.
	 *
	 * In addition to lodash methods, wrappers have `Array` and `String` methods.
	 *
	 * The wrapper `Array` methods are:
	 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	 *
	 * The wrapper `String` methods are:
	 * `replace` and `split`
	 *
	 * The wrapper methods that support shortcut fusion are:
	 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	 *
	 * The chainable wrapper methods are:
	 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,
	 * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,
	 * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flattenDepth`,
	 * `flip`, `flow`, `flowRight`, `fromPairs`, `functions`, `functionsIn`,
	 * `groupBy`, `initial`, `intersection`, `intersectionBy`, `intersectionWith`,
	 * `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`,
	 * `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`, `memoize`,
	 * `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`, `nthArg`,
	 * `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`, `overEvery`,
	 * `overSome`, `partial`, `partialRight`, `partition`, `pick`, `pickBy`, `plant`,
	 * `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`,
	 * `range`, `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`,
	 * `sampleSize`, `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`,
	 * `splice`, `spread`, `tail`, `take`, `takeRight`, `takeRightWhile`,
	 * `takeWhile`, `tap`, `throttle`, `thru`, `toArray`, `toPairs`, `toPairsIn`,
	 * `toPath`, `toPlainObject`, `transform`, `unary`, `union`, `unionBy`,
	 * `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`, `unshift`, `unzip`,
	 * `unzipWith`, `values`, `valuesIn`, `without`, `wrap`, `xor`, `xorBy`,
	 * `xorWith`, `zip`, `zipObject`, `zipObjectDeep`, and `zipWith`
	 *
	 * The wrapper methods that are **not** chainable by default are:
	 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,
	 * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	 * `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`, `forIn`,
	 * `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`,
	 * `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`,
	 * `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,
	 * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,
	 * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,
	 * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,
	 * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,
	 * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,
	 * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,
	 * `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`,
	 * `now`, `pad`, `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`,
	 * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `sample`,
	 * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`,
	 * `sortedLastIndex`, `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`,
	 * `sum`, `sumBy`, `template`, `times`, `toLower`, `toInteger`, `toLength`,
	 * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,
	 * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,
	 * `value`, and `words`
	 *
	 * @name _
	 * @constructor
	 * @category Seq
	 * @param {*} value The value to wrap in a `lodash` instance.
	 * @returns {Object} Returns the new `lodash` wrapper instance.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var wrapped = _([1, 2, 3]);
	 *
	 * // Returns an unwrapped value.
	 * wrapped.reduce(_.add);
	 * // => 6
	 *
	 * // Returns a wrapped value.
	 * var squares = wrapped.map(square);
	 *
	 * _.isArray(squares);
	 * // => false
	 *
	 * _.isArray(squares.value());
	 * // => true
	 */
	function lodash(value) {
	  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	    if (value instanceof LodashWrapper) {
	      return value;
	    }
	    if (hasOwnProperty.call(value, '__wrapped__')) {
	      return wrapperClone(value);
	    }
	  }
	  return new LodashWrapper(value);
	}
	
	// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype = baseLodash.prototype;
	
	module.exports = lodash;


/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(350),
	    baseLodash = __webpack_require__(371);
	
	/**
	 * The base constructor for creating `lodash` wrapper objects.
	 *
	 * @private
	 * @param {*} value The value to wrap.
	 * @param {boolean} [chainAll] Enable chaining for all wrapper methods.
	 */
	function LodashWrapper(value, chainAll) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__chain__ = !!chainAll;
	  this.__index__ = 0;
	  this.__values__ = undefined;
	}
	
	LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	LodashWrapper.prototype.constructor = LodashWrapper;
	
	module.exports = LodashWrapper;


/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(370),
	    LodashWrapper = __webpack_require__(376),
	    copyArray = __webpack_require__(336);
	
	/**
	 * Creates a clone of `wrapper`.
	 *
	 * @private
	 * @param {Object} wrapper The wrapper to clone.
	 * @returns {Object} Returns the cloned wrapper.
	 */
	function wrapperClone(wrapper) {
	  if (wrapper instanceof LazyWrapper) {
	    return wrapper.clone();
	  }
	  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	  result.__actions__ = copyArray(wrapper.__actions__);
	  result.__index__  = wrapper.__index__;
	  result.__values__ = wrapper.__values__;
	  return result;
	}
	
	module.exports = wrapperClone;


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(360),
	    now = __webpack_require__(291);
	
	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 150,
	    HOT_SPAN = 16;
	
	/**
	 * Sets metadata for `func`.
	 *
	 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	 * period of time, it will trip its breaker and transition to an identity function
	 * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)
	 * for more details.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var setData = (function() {
	  var count = 0,
	      lastCalled = 0;
	
	  return function(key, value) {
	    var stamp = now(),
	        remaining = HOT_SPAN - (stamp - lastCalled);
	
	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return key;
	      }
	    } else {
	      count = 0;
	    }
	    return baseSetData(key, value);
	  };
	}());
	
	module.exports = setData;


/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(336),
	    isIndex = __webpack_require__(23);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);
	
	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}
	
	module.exports = reorder;


/***/ },
/* 380 */
/***/ function(module, exports) {

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/**
	 * Replaces all `placeholder` elements in `array` with an internal placeholder
	 * and returns an array of their indexes.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {*} placeholder The placeholder to replace.
	 * @returns {Array} Returns the new array of placeholder indexes.
	 */
	function replaceHolders(array, placeholder) {
	  var index = -1,
	      length = array.length,
	      resIndex = -1,
	      result = [];
	
	  while (++index < length) {
	    if (array[index] === placeholder) {
	      array[index] = PLACEHOLDER;
	      result[++resIndex] = index;
	    }
	  }
	  return result;
	}
	
	module.exports = replaceHolders;


/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(25),
	    createCtorWrapper = __webpack_require__(363),
	    root = __webpack_require__(119);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg` and the `partials` prepended to those provided to
	 * the wrapper.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartialWrapper(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & BIND_FLAG,
	      Ctor = createCtorWrapper(func);
	
	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createPartialWrapper;


/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(366),
	    composeArgsRight = __webpack_require__(367),
	    copyArray = __webpack_require__(336),
	    replaceHolders = __webpack_require__(380);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var BIND_FLAG = 1,
	    BIND_KEY_FLAG = 2,
	    CURRY_BOUND_FLAG = 4,
	    CURRY_FLAG = 8,
	    ARY_FLAG = 128,
	    REARG_FLAG = 256;
	
	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Merges the function metadata of `source` into `data`.
	 *
	 * Merging metadata reduces the number of wrappers used to invoke a function.
	 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	 * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`
	 * modify function arguments, making the order in which they are executed important,
	 * preventing the merging of metadata. However, we make an exception for a safe
	 * combined case where curried functions have `_.ary` and or `_.rearg` applied.
	 *
	 * @private
	 * @param {Array} data The destination metadata.
	 * @param {Array} source The source metadata.
	 * @returns {Array} Returns `data`.
	 */
	function mergeData(data, source) {
	  var bitmask = data[1],
	      srcBitmask = source[1],
	      newBitmask = bitmask | srcBitmask,
	      isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);
	
	  var isCombo =
	    (srcBitmask == ARY_FLAG && (bitmask == CURRY_FLAG)) ||
	    (srcBitmask == ARY_FLAG && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
	    (srcBitmask == (ARY_FLAG | REARG_FLAG) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));
	
	  // Exit early if metadata can't be merged.
	  if (!(isCommon || isCombo)) {
	    return data;
	  }
	  // Use source `thisArg` if available.
	  if (srcBitmask & BIND_FLAG) {
	    data[2] = source[2];
	    // Set when currying a bound function.
	    newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;
	  }
	  // Compose partial arguments.
	  var value = source[3];
	  if (value) {
	    var partials = data[3];
	    data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);
	    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);
	  }
	  // Compose partial right arguments.
	  value = source[5];
	  if (value) {
	    partials = data[5];
	    data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);
	    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);
	  }
	  // Use source `argPos` if available.
	  value = source[7];
	  if (value) {
	    data[7] = copyArray(value);
	  }
	  // Use source `ary` if it's smaller.
	  if (srcBitmask & ARY_FLAG) {
	    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	  }
	  // Use source `arity` if one is not provided.
	  if (data[9] == null) {
	    data[9] = source[9];
	  }
	  // Use source `func` and merge bitmasks.
	  data[0] = source[0];
	  data[1] = newBitmask;
	
	  return data;
	}
	
	module.exports = mergeData;


/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(384),
	    createAssigner = __webpack_require__(15);
	
	/**
	 * Recursively merges own and inherited enumerable properties of source objects
	 * into the destination object. Source properties that resolve to `undefined`
	 * are skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var users = {
	 *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	 * };
	 *
	 * var ages = {
	 *   'data': [{ 'age': 36 }, { 'age': 40 }]
	 * };
	 *
	 * _.merge(users, ages);
	 * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(101),
	    arrayEach = __webpack_require__(333),
	    assignMergeValue = __webpack_require__(385),
	    baseMergeDeep = __webpack_require__(386),
	    isArray = __webpack_require__(36),
	    isObject = __webpack_require__(21),
	    isTypedArray = __webpack_require__(145),
	    keysIn = __webpack_require__(247);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  var props = (isArray(source) || isTypedArray(source))
	    ? undefined
	    : keysIn(source);
	
	  arrayEach(props || source, function(srcValue, key) {
	    if (props) {
	      key = srcValue;
	      srcValue = source[key];
	    }
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  });
	}
	
	module.exports = baseMerge;


/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(14);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (typeof key == 'number' && value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	module.exports = assignMergeValue;


/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(385),
	    baseClone = __webpack_require__(332),
	    copyArray = __webpack_require__(336),
	    isArguments = __webpack_require__(33),
	    isArray = __webpack_require__(36),
	    isArrayLikeObject = __webpack_require__(34),
	    isFunction = __webpack_require__(20),
	    isObject = __webpack_require__(21),
	    isPlainObject = __webpack_require__(387),
	    isTypedArray = __webpack_require__(145),
	    toPlainObject = __webpack_require__(388);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = object[key],
	      srcValue = source[key],
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    newValue = srcValue;
	    if (isArray(srcValue) || isTypedArray(srcValue)) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else {
	        isCommon = false;
	        newValue = baseClone(srcValue, true);
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        isCommon = false;
	        newValue = baseClone(srcValue, true);
	      }
	      else {
	        newValue = objValue;
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  stack.set(srcValue, newValue);
	
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	var isHostObject = __webpack_require__(117),
	    isObjectLike = __webpack_require__(35);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var getPrototypeOf = Object.getPrototypeOf;
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = objectProto;
	  if (typeof value.constructor == 'function') {
	    proto = getPrototypeOf(value);
	  }
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}
	
	module.exports = isPlainObject;


/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(11),
	    keysIn = __webpack_require__(247);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable
	 * properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ },
/* 389 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.isJetpack = isJetpack;
	exports.getParams = getParams;
	exports.hasSiteChanged = hasSiteChanged;
	exports.hasParams = hasParams;
	/** @ssr-ready **/
	
	function isJetpack(state) {
		return !!state.themes.themesLastQuery.get('isJetpack');
	}
	
	function getParams(state) {
		return state.themes.themesLastQuery.get('lastParams') || {};
	}
	
	function hasSiteChanged(state) {
		return state.themes.themesLastQuery.get('previousSiteId') !== state.themes.themesLastQuery.get('currentSiteId');
	};
	
	function hasParams(state) {
		return !!state.themes.themesLastQuery.get('lastParams');
	}

/***/ },
/* 390 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.isFetchingNextPage = isFetchingNextPage;
	exports.isLastPage = isLastPage;
	exports.getThemesList = getThemesList;
	exports.getQueryParams = getQueryParams;
	exports.isFetchError = isFetchError;
	/** @ssr-ready **/
	
	function isFetchingNextPage(state) {
		return state.themes.themesList.getIn(['queryState', 'isFetchingNextPage']);
	}
	
	function isLastPage(state) {
		return state.themes.themesList.getIn(['queryState', 'isLastPage']);
	}
	
	function getThemesList(state) {
		return state.themes.themesList.get('list');
	}
	
	function getQueryParams(state) {
		return state.themes.themesList.get('query').toObject();
	}
	
	function isFetchError(state) {
		return state.themes.themesList.getIn(['queryState', 'error']);
	}

/***/ },
/* 391 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.getThemes = getThemes;
	exports.getThemeById = getThemeById;
	/** @ssr-ready **/
	
	function getThemes(state) {
		return state.themes.themes.get('themes').toJS();
	}
	
	function getThemeById(state, id) {
		var theme = state.themes.themes.getIn(['themes', id]);
		return theme ? theme.toJS() : undefined;
	}

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _wpcomUndocumented = __webpack_require__(393);
	
	var _wpcomUndocumented2 = _interopRequireDefault(_wpcomUndocumented);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _localization = __webpack_require__(440);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var wpcom = (0, _wpcomUndocumented2.default)(__webpack_require__(442)); /**
	                                                                             * Internal dependencies
	                                                                             */
	
	
	if (_config2.default.isEnabled('support-user')) {
	  wpcom = __webpack_require__(443)(wpcom);
	}
	
	// Inject localization helpers to `wpcom` instance
	wpcom = (0, _localization.injectLocalization)(wpcom);
	
	module.exports = wpcom;

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _wpcom = __webpack_require__(394);
	
	var _wpcom2 = _interopRequireDefault(_wpcom);
	
	var _inherits = __webpack_require__(395);
	
	var _inherits2 = _interopRequireDefault(_inherits);
	
	var _assign = __webpack_require__(10);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _undocumented = __webpack_require__(396);
	
	var _undocumented2 = _interopRequireDefault(_undocumented);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var debug = (0, _debug2.default)('calypso:wpcom-undocumented');
	
	/**
	 * Class inherited from `WPCOMUnpublished` class and adds
	 * specific methods useful for wp-calypso.
	 *
	 * @param {String} [token] - oauth token
	 * @param {Function} [reqHandler] - request handler
	 * @return {NUll} null
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function WPCOMUndocumented(token, reqHandler) {
	  if (!(this instanceof WPCOMUndocumented)) {
	    return new WPCOMUndocumented(token, reqHandler);
	  }
	
	  if ('function' === typeof token) {
	    reqHandler = token;
	    token = null;
	  } else if (token) {
	    this.loadToken(token);
	  }
	
	  _wpcom2.default.call(this, token, function (params, fn) {
	    if (this.isTokenLoaded()) {
	      // authToken is used in wpcom-xhr-request,
	      // which is used for the signup flow in the REST Proxy
	      params = (0, _assign2.default)({}, params, { authToken: this._token, token: this._token });
	    }
	
	    return reqHandler(params, fn);
	  });
	
	  debug('Extending wpcom with undocumented endpoints.');
	}
	
	(0, _inherits2.default)(WPCOMUndocumented, _wpcom2.default);
	
	/**
	 * Get `Undocumented` object instance
	 *
	 * @return {Undocumented} Undocumented instance
	 */
	WPCOMUndocumented.prototype.undocumented = function () {
	  return new _undocumented2.default(this);
	};
	
	/**
	 * Add a token to this instance of WPCOM.
	 * When loaded, the token is applied to the param object of each subsequent request.
	 *
	 * @param {String} [token] - oauth token
	 */
	_wpcom2.default.prototype.loadToken = function (token) {
	  this._token = token;
	};
	
	/**
	 * Returns a boolean representing whether or not the token has been loaded.
	 *
	 * @return {String} oauth token
	 */
	WPCOMUndocumented.prototype.isTokenLoaded = function () {
	  return this._token !== undefined;
	};
	
	/**
	 * Expose `WPCOMUndocumented`
	 */
	exports.default = WPCOMUndocumented;
	module.exports = exports['default'];

/***/ },
/* 394 */
/***/ function(module, exports) {

	module.exports = require("wpcom");

/***/ },
/* 395 */
/***/ function(module, exports) {

	module.exports = require("inherits");

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _promise = __webpack_require__(397);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _keys = __webpack_require__(404);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies.
	 */
	var debug = __webpack_require__(6)('calypso:wpcom-undocumented:undocumented'),
	    isPlainObject = __webpack_require__(387),
	    clone = __webpack_require__(407),
	    omit = __webpack_require__(233),
	    camelCase = __webpack_require__(408),
	    snakeCase = __webpack_require__(417),
	    pick = __webpack_require__(418),
	    url = __webpack_require__(419);
	
	/**
	 * Internal dependencies.
	 */
	var Site = __webpack_require__(420),
	    Me = __webpack_require__(422),
	    MailingList = __webpack_require__(439),
	    config = __webpack_require__(7),
	    i18n = __webpack_require__(88);
	
	/**
	 * Some endpoints are restricted by OAuth client IDs and secrets
	 * to prevent them being spammed. This adds these keys to the request
	 * so that they will be successful. This is not a sufficent measure
	 * against spam as these keys are exposed publicly
	 *
	 * @param { object } query - Add client_id and client_secret to the query.
	 */
	function restrictByOauthKeys(query) {
		query.client_id = config('wpcom_signup_id');
		query.client_secret = config('wpcom_signup_key');
	}
	
	/**
	 * Create an `Undocumented` instance
	 *
	 * @param {WPCOM} wpcom - The request handler
	 * @returns {Undocumented} - An instance of Undocumented
	 */
	function Undocumented(wpcom) {
		if (!(this instanceof Undocumented)) {
			return new Undocumented(wpcom);
		}
		this.wpcom = wpcom;
	}
	
	Undocumented.prototype.site = function (id) {
		return new Site(id, this.wpcom);
	};
	
	Undocumented.prototype.me = function () {
		return new Me(this.wpcom);
	};
	
	Undocumented.prototype.mailingList = function (category) {
		return new MailingList(category, this.wpcom);
	};
	
	/*
	 * Jetpack modules data from the site with id siteId
	 *
	 * @param {int} [siteId]
	 * @param {Function} fn
	 * @api public
	 */
	Undocumented.prototype.jetpackModules = function (siteId, fn) {
		debug('/sites/:site_id:/jetpack/modules/ query');
		this.wpcom.req.get('/sites/' + siteId + '/jetpack/modules', fn);
	};
	
	/*
	 * Activate the Jetpack module with moduleSlug on the site with id siteId
	 *
	 * @param {int} [siteId]
	 * @param {string} [moduleSlug]
	 * @param {Function} fn
	 * @api public
	 */
	Undocumented.prototype.jetpackModulesActivate = function (siteId, moduleSlug, fn) {
		debug('/sites/:site_id:/jetpack/modules/:module_slug query');
		this.wpcom.req.post({ path: '/sites/' + siteId + '/jetpack/modules/' + moduleSlug }, {}, { active: true }, fn);
	};
	
	/*
	 * Deactivate the Jetpack module with moduleSlug on the site with id siteId
	 *
	 * @param {int} [siteId]
	 * @param {string} [moduleSlug]
	 * @param {Function} fn
	 * @api public
	 */
	Undocumented.prototype.jetpackModulesDeactivate = function (siteId, moduleSlug, fn) {
		debug('/sites/:site_id:/jetpack/modules/:module_slug query');
		this.wpcom.req.post({ path: '/sites/' + siteId + '/jetpack/modules/' + moduleSlug }, {}, { active: false }, fn);
	};
	
	/**
	 * Update WordPress core install on the site with id siteId
	 *
	 * @param {int} [siteId] The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.updateWordPressCore = function (siteId, fn) {
		debug('/sites/:site_id:/core/update query');
		this.wpcom.req.post({ path: '/sites/' + siteId + '/core/update' }, fn);
	};
	
	/**
	 * Get the updates info for the site with id siteId
	 *
	 * @param {int} [siteId] The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getAvailableUpdates = function (siteId, fn) {
		debug('/sites/:site_id:/updates query');
		this.wpcom.req.get({ path: '/sites/' + siteId + '/updates' }, fn);
	};
	
	/**
	 * Fetches settings for the Monitor module.
	 *
	 * @param {int} [siteId] The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.fetchMonitorSettings = function (siteId, fn) {
		debug('/jetpack-blogs/:site_id: query');
		this.wpcom.req.get({ path: '/jetpack-blogs/' + siteId }, fn);
	};
	
	Undocumented.prototype.updateMonitorSettings = function (siteId, emailNotifications, fn) {
		debug('/jetpack-blogs/:site_id: query');
		this.wpcom.req.post({ path: '/jetpack-blogs/' + siteId }, {}, { email_notifications: emailNotifications }, fn);
	};
	
	/**
	 * Disconnects a Jetpack site with id siteId from WP.com
	 *
	 * @param {int} [siteId] The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.disconnectJetpack = function (siteId, fn) {
		debug('/jetpack-blogs/:site_id:/mine/delete query');
		this.wpcom.req.post({ path: '/jetpack-blogs/' + siteId + '/mine/delete' }, fn);
	};
	
	/**
	 * Fetches plugin registration keys for WordPress.org sites with paid services
	 *
	 * @param {int} [siteId] The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.fetchJetpackKeys = function (siteId, fn) {
		debug('/jetpack-blogs/:site_id:/keys query');
		this.wpcom.req.get({ path: '/jetpack-blogs/' + siteId + '/keys' }, fn);
	};
	
	/**
	 * Test if a Jetpack Site is connected to .com
	 *
	 * @param {int} [siteId] The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.testConnectionJetpack = function (siteId, fn) {
		debug('/jetpack-blogs/:site_id:/test-connection query');
		this.wpcom.req.get({ path: '/jetpack-blogs/' + siteId + '/test-connection' }, fn);
	};
	
	Undocumented.prototype.jetpackLogin = function (siteId, _wp_nonce, redirect_uri, scope, state) {
		debug('/jetpack-blogs/:site_id:/jetpack-login query');
		var endpointUrl = '/jetpack-blogs/' + siteId + '/jetpack-login';
		var params = { _wp_nonce: _wp_nonce, redirect_uri: redirect_uri, scope: scope, state: state };
		return this.wpcom.req.get({ path: endpointUrl }, params);
	};
	
	Undocumented.prototype.jetpackAuthorize = function (siteId, code, state, redirect_uri, secret) {
		debug('/jetpack-blogs/:site_id:/authorize query');
		var endpointUrl = '/jetpack-blogs/' + siteId + '/authorize';
		var params = { code: code, state: state, redirect_uri: redirect_uri, secret: secret };
		return this.wpcom.req.post({ path: endpointUrl }, params);
	};
	
	Undocumented.prototype.jetpackValidateSSONonce = function (siteId, ssoNonce, fn) {
		debug('/jetpack-blogs/:site_id:/sso-validate query');
		var endpointUrl = '/jetpack-blogs/' + siteId + '/sso-validate';
		var params = { sso_nonce: ssoNonce };
		return this.wpcom.req.post({ path: endpointUrl }, params, fn);
	};
	
	Undocumented.prototype.jetpackAuthorizeSSONonce = function (siteId, ssoNonce, fn) {
		debug('/jetpack-blogs/:site_id:/sso-authorize query');
		var endpointUrl = '/jetpack-blogs/' + siteId + '/sso-authorize';
		var params = { sso_nonce: ssoNonce };
		return this.wpcom.req.post({ path: endpointUrl }, params, fn);
	};
	
	Undocumented.prototype.activateManage = function (siteId, state, secret) {
		debug('/jetpack-blogs/:site_id:/activate-manage query');
		var endpointUrl = '/jetpack-blogs/' + siteId + '/activate-manage';
		var params = { state: state, secret: secret };
		return this.wpcom.req.post({ path: endpointUrl }, params);
	};
	
	Undocumented.prototype.invitesList = function (siteId, number, offset, fn) {
		debug('/sites/:site_id:/invites query');
		this.wpcom.req.get('/sites/' + siteId + '/invites', {
			number: number,
			offset: offset
		}, fn);
	};
	
	Undocumented.prototype.getInvite = function (siteId, inviteKey, fn) {
		debug('/sites/:site_id:/invites/:inviteKey:/ query');
		this.wpcom.req.get({ path: '/sites/' + siteId + '/invites/' + inviteKey }, fn);
	};
	
	Undocumented.prototype.acceptInvite = function (invite, fn) {
		debug('/sites/:site_id:/invites/:inviteKey:/accept query');
		this.wpcom.req.get('/sites/' + invite.site.ID + '/invites/' + invite.inviteKey + '/accept', {
			activate: invite.activationKey
		}, fn);
	};
	
	Undocumented.prototype.sendInvites = function (siteId, usernamesOrEmails, role, message, fn) {
		debug('/sites/:site_id:/invites/new query');
		this.wpcom.req.post('/sites/' + siteId + '/invites/new', {}, {
			invitees: usernamesOrEmails,
			role: role,
			message: message
		}, fn);
	};
	
	Undocumented.prototype.createInviteValidation = function (siteId, usernamesOrEmails, role, fn) {
		debug('/sites/:site_id:/invites/validate query');
		this.wpcom.req.post('/sites/' + siteId + '/invites/validate', {}, {
			invitees: usernamesOrEmails,
			role: role
		}, fn);
	};
	
	/**
	 * GET/POST site settings
	 *
	 * @param {int|string} [siteId] The site ID
	 * @param {string} [method] The request method
	 * @param {object} [data] The POST data
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.settings = function (siteId, method, data, fn) {
		debug('/sites/:site_id:/settings query');
		if ('function' === typeof method) {
			fn = method;
			method = 'get';
			data = {};
		}
	
		this.wpcom.req[method]({
			path: '/sites/' + siteId + '/settings',
			body: data
		}, fn);
	};
	
	Undocumented.prototype._sendRequestWithLocale = function (originalParams, fn) {
		var apiVersion = originalParams.apiVersion;
		var _originalParams$body = originalParams.body;
		var body = _originalParams$body === undefined ? {} : _originalParams$body;
		var method = originalParams.method;
		var locale = i18n.getLocaleSlug();
		var updatedParams = omit(originalParams, ['apiVersion', 'method']);
	
		updatedParams.body = (0, _assign2.default)({}, body, { locale: locale });
	
		if (apiVersion) {
			// TODO: temporary solution for apiVersion until https://github.com/Automattic/wpcom.js/issues/152 is resolved
			this.wpcom.req[method.toLowerCase()](updatedParams, { apiVersion: apiVersion }, fn);
		} else {
			this.wpcom.req[method.toLowerCase()](updatedParams, fn);
		}
	};
	
	/**
	 * Determine whether a domain name can be mapped
	 *
	 * @param {string} domain - The domain name to check.
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.isDomainMappable = function (domain, fn) {
		domain = encodeURIComponent(domain);
	
		this.wpcom.req.get({ path: '/domains/' + domain + '/is-mappable' }, fn);
	};
	
	/**
	 * Determine whether a domain name is available for registration
	 *
	 * @param {string} domain - The domain name to check.
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.isDomainAvailable = function (domain, fn) {
		domain = encodeURIComponent(domain);
	
		this.wpcom.req.get({ path: '/domains/' + domain + '/is-available' }, fn);
	};
	
	/**
	 * Determine whether a domain name can be used for Site Redirect
	 *
	 * @param {int|string} siteId The site ID
	 * @param {string} domain The domain name to check
	 * @param {function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.canRedirect = function (siteId, domain, fn) {
		domain = encodeURIComponent(domain);
	
		this.wpcom.req.get({ path: '/domains/' + siteId + '/' + domain + '/can-redirect' }, fn);
	};
	
	/**
	 * Retrieves the target of the site redirect.
	 *
	 * @param {int|string} siteId The site ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getSiteRedirect = function (siteId, fn) {
		debug('/sites/:site_id/domains/redirect query');
	
		this.wpcom.req.get({ path: '/sites/' + siteId + '/domains/redirect' }, fn);
	};
	
	/**
	 * Points the site redirect to the specified location.
	 *
	 * @param {int|string} siteId The site ID
	 * @param {string} location The location to redirect the site to
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.setSiteRedirect = function (siteId, location, fn) {
		debug('/sites/:site_id/domains/redirect');
	
		this.wpcom.req.post({ path: '/sites/' + siteId + '/domains/redirect' }, { location: location }, fn);
	};
	
	/**
	 * Retrieves the domain contact information of the user.
	 *
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getDomainContactInformation = function (fn) {
		debug('/me/domain-contact-information query');
	
		this._sendRequestWithLocale({
			path: '/me/domain-contact-information',
			method: 'get'
		}, function (error, data) {
			var newData;
	
			if (error) {
				return fn(error);
			}
	
			newData = mapKeysRecursively(data, function (key) {
				return key === '_headers' ? key : camelCase(key);
			});
	
			fn(null, newData);
		});
	};
	
	Undocumented.prototype.getDomainRegistrationSupportedStates = function (countryCode, fn) {
		debug('/domains/supported-states/ query');
	
		this._sendRequestWithLocale({
			path: '/domains/supported-states/' + countryCode,
			method: 'get'
		}, fn);
	};
	
	Undocumented.prototype.getDomainRegistrationSupportedCountries = function (fn) {
		debug('/domains/supported-countries/ query');
	
		this._sendRequestWithLocale({
			path: '/domains/supported-countries/',
			method: 'get'
		}, fn);
	};
	
	Undocumented.prototype.getPaymentSupportedCountries = function (fn) {
		debug('/me/transactions/supported-countries/ query');
	
		this._sendRequestWithLocale({
			path: '/me/transactions/supported-countries/',
			method: 'get'
		}, fn);
	};
	
	Undocumented.prototype.getSmsSupportedCountries = function (fn) {
		debug('meta/sms-supported-countries/ query');
	
		this.wpcom.req.get({ path: '/meta/sms-country-codes/' }, fn);
	};
	
	function mapKeysRecursively(object, fn) {
		return (0, _keys2.default)(object).reduce(function (mapped, key) {
			var value = object[key];
			if (isPlainObject(value)) {
				value = mapKeysRecursively(value, fn);
			}
	
			mapped[fn(key)] = value;
			return mapped;
		}, {});
	}
	
	/**
	 * Validates the specified domain contact information against a list of domain names.
	 *
	 * @param {Object} contactInformation - user's contact information
	 * @param {string[]} domainNames - list of domain names
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.validateDomainContactInformation = function (contactInformation, domainNames, fn) {
		var data = {
			contactInformation: contactInformation,
			domainNames: domainNames
		};
	
		debug('/me/domain-contact-information/validate query');
		data = mapKeysRecursively(data, snakeCase);
	
		this.wpcom.req.post({ path: '/me/domain-contact-information/validate' }, data, function (error, successData) {
			var newData;
	
			if (error) {
				return fn(error);
			}
	
			newData = mapKeysRecursively(successData, function (key) {
				return key === '_headers' ? key : camelCase(key);
			});
	
			fn(null, newData);
		});
	};
	
	/**
	 * Get a list of WordPress.com products
	 *
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getProducts = function (fn) {
		debug('/products query');
		this._sendRequestWithLocale({
			path: '/products',
			method: 'get'
		}, fn);
	};
	
	/**
	 * Get a site specific details for WordPress.com plans
	 *
	 * @param {Function} siteDomain The site slug
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getSitePlans = function (siteDomain, fn) {
		debug('/sites/:site_domain:/plans query');
	
		// the site domain could be for a jetpack site installed in
		// a subdirectory.  encode any forward slash present before making
		// the request
		siteDomain = encodeURIComponent(siteDomain);
	
		this._sendRequestWithLocale({
			path: '/sites/' + siteDomain + '/plans',
			method: 'get'
		}, fn);
	};
	
	/**
	 * GET/POST cart
	 *
	 * @param {string} [siteDomain] The site's slug
	 * @param {string} [method] The request method
	 * @param {object} [data] The REQUEST data
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.cart = function (siteDomain, method, data, fn) {
		debug('/sites/:site_id:/shopping-cart query');
		if (arguments.length === 2) {
			fn = method;
			method = 'GET';
			data = {};
		} else if (arguments.length === 3) {
			fn = data;
			method = 'GET';
			data = {};
		}
		this._sendRequestWithLocale({
			path: '/sites/' + siteDomain + '/shopping-cart',
			method: method,
			body: data
		}, fn);
	};
	
	/**
	 * Get a list of the user's stored cards
	 *
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getStoredCards = function (fn) {
		debug('/me/stored-cards query');
		this.wpcom.req.get({ path: '/me/stored-cards' }, fn);
	};
	
	/**
	 * GET site menus
	 *
	 * @param {int|string} [siteId] The site ID
	 * @param {Function} [callback] The callback function called with arguments error, data
	 * @api public
	 */
	Undocumented.prototype.menus = function (siteId, callback) {
		debug('/sites/:site_id/menus query');
	
		this.wpcom.req.get({ path: '/sites/' + siteId + '/menus' }, callback);
	};
	
	/**
	 * Update site menus
	 *
	 * @param {int|string} siteId the ID of the site.
	 * @param {int|string} menuId use 0 to create a new menu
	 * @param {object} [data] menus & locations data
	 * @param {Function} [callback] called with arguments error, data
	 * @api public
	 */
	Undocumented.prototype.menusUpdate = function (siteId, menuId, data, callback) {
		debug('/sites/:site_id/menus/:menu_id query');
	
		if (menuId === 0) {
			menuId = 'new';
		}
	
		this.wpcom.req.post({ path: '/sites/' + siteId + '/menus/' + menuId }, data, callback);
	};
	
	/**
	 * Delete a navigation menu
	 *
	 * @param {int|string} siteId The site ID
	 * @param {int|string} menuId The menu ID
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.menusDelete = function (siteId, menuId, fn) {
		debug('/sites/:site_id/menus/:menu_id/delete query');
	
		this.wpcom.req.post({ path: '/sites/' + siteId + '/menus/' + menuId + '/delete' }, fn);
	};
	
	/**
	 * Return a list of third-party services that WordPress.com can integrate with
	 *
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.metaKeyring = function (fn) {
		debug('/meta/external-services query');
		this.wpcom.req.get({
			path: '/meta/external-services/',
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Return a list of happiness engineers gravatar urls
	 *
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getHappinessEngineers = function (fn) {
		debug('meta/happiness-engineers/ query');
	
		this.wpcom.req.get({ path: '/meta/happiness-engineers/' }, fn);
	};
	
	/**
	 * Return a list of sharing buttons for the specified site, with optional
	 * query parameters
	 *
	 * @param {int|string} siteId The site ID or domain
	 * @param {object} query Optional query parameters
	 * @param {Function} fn Method to invoke when request is complete
	 * @api public
	 */
	Undocumented.prototype.sharingButtons = function (siteId, query, fn) {
		if ('undefined' === typeof fn && 'function' === typeof query) {
			fn = query;
			query = {};
		}
	
		debug('/sites/:site_id:/sharing-buttons query');
		this.wpcom.req.get('/sites/' + siteId + '/sharing-buttons', query, fn);
	};
	
	/**
	 * Return a single sharing buttons for the specified site
	 *
	 * @param {int|string} siteId The site ID or domain
	 * @param {string} buttonId The sharing button ID
	 * @param {Function} fn Method to invoke when request is complete
	 * @api public
	 */
	Undocumented.prototype.sharingButton = function (siteId, buttonId, fn) {
		debug('/sites/:site_id:/sharing-buttons query');
		this.wpcom.req.get({ path: '/sites/' + siteId + '/sharing-buttons/' + buttonId }, fn);
	};
	
	/**
	 * Saves a single sharing buttons for the specified site
	 *
	 * @param {int|string} siteId The site ID or domain
	 * @param {Object} button The sharing button object
	 * @param {Function} fn Method to invoke when request is complete
	 * @api public
	 */
	Undocumented.prototype.saveSharingButton = function (siteId, button, fn) {
		debug('/sites/:site_id:/sharing-buttons query');
		this.wpcom.req.post({
			path: '/sites/' + siteId + '/sharing-buttons/' + button.ID,
			body: button,
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Saves the set of sharing buttons for the specified site
	 *
	 * @param {int|string} siteId The site ID or domain
	 * @param {Array} buttons An array of sharing button objects
	 * @param {Function} fn Method to invoke when request is complete
	 * @api public
	 */
	Undocumented.prototype.saveSharingButtons = function (siteId, buttons, fn) {
		debug('/sites/:site_id:/sharing-buttons query');
		this.wpcom.req.post({
			path: '/sites/' + siteId + '/sharing-buttons',
			body: { sharing_buttons: buttons },
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Return a list of user's connected services
	 *
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.mekeyringConnections = function (fn) {
		debug('/me/keyring-connections query');
		this.wpcom.req.get({
			path: '/me/keyring-connections',
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Deletes a single keyring connection for the current user
	 *
	 * @param {int} keyringConnectionId The keyring connection ID to remove
	 * @param {Function} fn Method to invoke when request is complete
	 */
	Undocumented.prototype.deletekeyringConnection = function (keyringConnectionId, fn) {
		debug('/me/keyring-connections/:keyring_connection_id:/delete query');
		this.wpcom.req.post({
			path: '/me/keyring-connections/' + keyringConnectionId + '/delete',
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Return a list of user's connected publicize services for the given site
	 *
	 * @param {int|string} siteId The site ID or domain
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.siteConnections = function (siteId, fn) {
		debug('/sites/:site_id:/publicize-connections query');
		this.wpcom.req.get({
			path: '/sites/' + siteId + '/publicize-connections',
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Deletes a single site connection
	 *
	 * @param {int|string} siteId The site ID or domain
	 * @param {int} connectionId The connection ID to remove
	 * @param {Function} fn Method to invoke when request is complete
	 */
	Undocumented.prototype.deleteSiteConnection = function (siteId, connectionId, fn) {
		debug('/sites/:site_id:/publicize-connections/:connection_id:/delete query');
		this.wpcom.req.post({
			path: '/sites/' + siteId + '/publicize-connections/' + connectionId + '/delete',
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * Delete a site
	 *
	 * @param  {int|string} siteId The site ID or domain
	 * @param  {Function} fn Function to invoke when request is complete
	 */
	Undocumented.prototype.deleteSite = function (siteId, fn) {
		debug('/sites/:site_id/delete query');
		this.wpcom.req.post({ path: '/sites/' + siteId + '/delete' }, fn);
	};
	
	/**
	 * Creates a single connection using the specified Keyring connection ID and an
	 *  optional `options` object, which can include a `shared` property
	 *
	 * @param {int} keyringConnectionId The Keyring connection ID to use
	 * @param {int|string} siteId The site ID or domain
	 * @param {string} externalUserId User ID if not connecting to primary account
	 * @param {object} options Optional options
	 * @param {Function} fn Method to invoke when request is complete
	 */
	Undocumented.prototype.createConnection = function (keyringConnectionId, siteId, externalUserId, options, fn) {
		var body, path;
	
		// Method overloading: Optional `options`
		if ('undefined' === typeof fn && 'function' === typeof options) {
			fn = options;
			options = {};
		}
	
		// Build request body
		body = { keyring_connection_ID: keyringConnectionId };
		if ('boolean' === typeof options.shared) {
			body.shared = options.shared;
		}
	
		if (externalUserId) {
			body.external_user_ID = externalUserId;
		}
	
		path = siteId ? '/sites/' + siteId + '/publicize-connections/new' : '/me/publicize-connections/new';
	
		this.wpcom.req.post({ path: path, body: body, apiVersion: '1.1' }, fn);
	};
	
	/**
	 * Updates a single publicize connection
	 *
	 * @param {int|string} siteId An optional site ID or domain
	 * @param {int} connectionId The connection ID to update
	 * @param {object} data The update request body
	 * @param {Function} fn Function to invoke when request is complete
	 */
	Undocumented.prototype.updateConnection = function (siteId, connectionId, data, fn) {
		var path;
	
		if (siteId) {
			debug('/sites/:site_id:/publicize-connections/:connection_id: query');
			path = '/sites/' + siteId + '/publicize-connections/' + connectionId;
		} else {
			debug('/me/publicize-connections/:connection_id: query');
			path = '/me/publicize-connections/' + connectionId;
		}
	
		this.wpcom.req.post({
			path: path,
			body: data,
			apiVersion: '1.1'
		}, fn);
	};
	
	/**
	 * GET/POST transactions
	 *
	 * @param {string} [method] The request method
	 * @param {object} [data] The REQUEST data
	 * @param {Function} fn The callback function
	 * @api public
	 *
	 * The post data format is: {
	 *		payment_method: {string} The payment gateway,
	 *		payment_key: {string} Either the Paygate key or the mp_ref from /me/stored_cards,
	 *		products: {array} An array of products from the card,
	 *		coupon: {string} A coupon code,
	 *		currency: {string} The three letter currency code,
	 * }
	 */
	Undocumented.prototype.transactions = function (method, data, fn) {
		debug('/me/transactions query');
	
		if ('function' === typeof method) {
			fn = method;
			method = 'get';
			data = {};
		} else {
			data = mapKeysRecursively(data, snakeCase);
		}
	
		this._sendRequestWithLocale({
			path: '/me/transactions',
			method: method,
			body: data
		}, fn);
	};
	
	Undocumented.prototype.updateCreditCard = function (params, fn) {
		var data = pick(params, ['country', 'zip', 'month', 'year', 'name']);
		data.paygate_token = params.paygateToken;
	
		this.wpcom.req.post('/upgrades/' + params.purchaseId + '/update-credit-card', data, fn);
	};
	
	/**
	 * GET paygate configuration
	 *
	 * @param {Object} query - query parameters
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.paygateConfiguration = function (query, fn) {
		debug('/me/paygate-configuration query');
	
		this.wpcom.req.get('/me/paygate-configuration', query, fn);
	};
	
	/**
	 * GET paypal_express_url
	 *
	 * @param {object} [data] The GET data
	 * @param {Function} fn The callback function
	 * @api public
	 *
	 * The data format is: {
	 *		country: {string} The billing country,
	 *		postal_code: {string} The billing postal code,
	 *		cart: {array} An JSON serialization of the cart,
	 * }
	 */
	Undocumented.prototype.paypalExpressUrl = function (data, fn) {
		debug('/me/paypal-express-url query');
	
		data = mapKeysRecursively(data, snakeCase);
	
		this.wpcom.req.post('/me/paypal-express-url', data, fn);
	};
	
	/**
	 * GET example domain suggestions
	 *
	 * @param {Function} fn - The callback funtion
	 * @api public
	 */
	Undocumented.prototype.exampleDomainSuggestions = function (fn) {
		this.wpcom.req.get({ path: '/domains/suggestions/examples' }, function (error, response) {
			if (error) {
				return fn(error);
			}
	
			fn(null, response);
		});
	};
	
	/**
	 * Update primary domain for blog
	 *
	 * @param {int} siteId The site ID
	 * @param {string} domain The domain to set as primary
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.setPrimaryDomain = function (siteId, domain, fn) {
		debug('/sites/:site_id/domains/primary');
		this.wpcom.req.post('/sites/' + siteId + '/domains/primary', {}, { domain: domain }, fn);
	};
	
	/**
	 * Fetch preview markup for a site
	 *
	 * @param {int} siteId The site ID
	 * @param {string} slug Optional. The theme slug to preview
	 * @param {object} postData Optional. The customization data to send
	 * @return {Promise} A Promise to resolve when complete
	 */
	Undocumented.prototype.fetchPreviewMarkup = function (siteId, slug, postData) {
		var _this = this;
	
		debug('/sites/:site_id/previews/mine');
		return new _promise2.default(function (resolve, reject) {
			var endpoint = '/sites/' + siteId + '/previews/mine';
			var query = { path: slug };
			var isPreviewCustomized = postData && (0, _keys2.default)(postData).length > 0;
			var request = isPreviewCustomized ? _this.wpcom.req.post(endpoint, query, { customized: postData }) : _this.wpcom.req.get(endpoint, query);
			request.then(function (response) {
				if (!response.html) {
					return reject(new Error('No markup received from API'));
				}
				resolve(response.html);
			}).catch(reject);
		});
	};
	
	Undocumented.prototype.readFollowing = function (query, fn) {
		debug('/read/following');
		query.apiVersion = '1.3';
		this.wpcom.req.get('/read/following', query, fn);
	};
	
	Undocumented.prototype.readFollowingMine = function (query, fn) {
		debug('/read/following/mine');
		query.apiVersion = '1.2';
		this.wpcom.req.get('/read/following/mine', query, fn);
	};
	
	Undocumented.prototype.readA8C = function (query, fn) {
		debug('/read/a8c');
		query.apiVersion = '1.3';
		this.wpcom.req.get('/read/a8c', query, fn);
	};
	
	Undocumented.prototype.readFeed = function (query, fn) {
		var params = omit(query, 'ID');
		debug('/read/feed');
		return this.wpcom.req.get('/read/feed/' + encodeURIComponent(query.ID), params, fn);
	};
	
	Undocumented.prototype.discoverFeed = function (query, fn) {
		debug('/read/feed');
		return this.wpcom.req.get('/read/feed/', query, fn);
	};
	
	Undocumented.prototype.readFeedPosts = function (query, fn) {
		var params = omit(query, 'ID');
		debug('/read/feed/' + query.ID + '/posts');
		params.apiVersion = '1.3';
	
		this.wpcom.req.get('/read/feed/' + encodeURIComponent(query.ID) + '/posts', params, fn);
	};
	
	Undocumented.prototype.readFeedPost = function (query, fn) {
		var params = omit(query, ['feedId', 'postId']);
		debug('/read/feed/' + query.feedId + '/posts/' + query.postId);
		params.apiVersion = '1.3';
	
		this.wpcom.req.get('/read/feed/' + encodeURIComponent(query.feedId) + '/posts/' + encodeURIComponent(query.postId), params, fn);
	};
	
	Undocumented.prototype.readSearch = function (query, fn) {
		debug('/read/search', query);
		var params = (0, _assign2.default)({ apiVersion: '1.2' }, query);
		this.wpcom.req.get('/read/search', params, fn);
	};
	
	Undocumented.prototype.readTag = function (query, fn) {
		var params = omit(query, 'slug');
		debug('/read/tag/' + query.slug);
		this.wpcom.req.get('/read/tags/' + query.slug, params, fn);
	};
	
	Undocumented.prototype.readTags = function (fn) {
		debug('/read/tags');
		this.wpcom.req.get('/read/tags', fn);
	};
	
	Undocumented.prototype.readTagPosts = function (query, fn) {
		var params = omit(query, 'tag');
		debug('/read/tags/' + query.tag + '/posts');
		if (config.isEnabled('reader/tags-with-elasticsearch')) {
			params.apiVersion = '1.3';
		} else {
			params.apiVersion = '1.2';
		}
	
		this.wpcom.req.get('/read/tags/' + encodeURIComponent(query.tag) + '/posts', params, fn);
	};
	
	Undocumented.prototype.readRecommendedPosts = function (query, fn) {
		debug('/recommendations/posts');
		query.apiVersion = '1.2';
		this.wpcom.req.get('/read/recommendations/posts', query, fn);
	};
	
	Undocumented.prototype.followReaderTag = function (tag, fn) {
		debug('/read/tags/' + tag + '/mine/new');
		this.wpcom.req.post('/read/tags/' + tag + '/mine/new', fn);
	};
	
	Undocumented.prototype.unfollowReaderTag = function (tag, fn) {
		debug('/read/tags/' + tag + '/mine/delete');
		this.wpcom.req.post('/read/tags/' + tag + '/mine/delete', fn);
	};
	
	Undocumented.prototype.readLiked = function (query, fn) {
		var params = clone(query);
		debug('/read/liked');
		params.apiVersion = '1.2';
		this.wpcom.req.get('/read/liked', params, fn);
	};
	
	Undocumented.prototype.readList = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/list');
		params.apiVersion = '1.2';
		this.wpcom.req.get('/read/lists/' + query.owner + '/' + query.slug, params, fn);
	};
	
	Undocumented.prototype.readListPosts = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/list/:list/posts');
		params.apiVersion = '1.2';
		this.wpcom.req.get('/read/list/' + query.owner + '/' + query.slug + '/posts', params, fn);
	};
	
	Undocumented.prototype.readLists = function (fn) {
		debug('/read/lists');
		this.wpcom.req.get('/read/lists', { apiVersion: '1.2' }, fn);
	};
	
	Undocumented.prototype.readListsNew = function (title, fn) {
		debug('/read/lists/new');
		this.wpcom.req.post('/read/lists/new', { apiVersion: '1.2' }, { title: title }, fn);
	};
	
	Undocumented.prototype.readListsUpdate = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/lists/:list/update');
		this.wpcom.req.post('/read/lists/' + encodeURIComponent(query.owner) + '/' + encodeURIComponent(query.slug) + '/update', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.followList = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/lists/:owner/:slug/follow');
		this.wpcom.req.post('/read/lists/' + encodeURIComponent(query.owner) + '/' + encodeURIComponent(query.slug) + '/follow', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.unfollowList = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/lists/:owner/:slug/unfollow');
		this.wpcom.req.post('/read/lists/' + encodeURIComponent(query.owner) + '/' + encodeURIComponent(query.slug) + '/unfollow', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.readListTags = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/lists/:owner/:list/tags');
		params.apiVersion = '1.2';
		this.wpcom.req.get('/read/lists/' + encodeURIComponent(query.owner) + '/' + encodeURIComponent(query.slug) + '/tags', params, fn);
	};
	
	Undocumented.prototype.readListItems = function (query, fn) {
		var params = omit(query, ['owner', 'slug']);
		debug('/read/lists/:owner/:list/items');
		params.apiVersion = '1.2';
		this.wpcom.req.get('/read/lists/' + encodeURIComponent(query.owner) + '/' + encodeURIComponent(query.slug) + '/items', params, fn);
	};
	
	Undocumented.prototype.followReaderFeed = function (query, fn) {
		this.wpcom.req.post('/read/following/mine/new', query, {}, fn);
	};
	
	Undocumented.prototype.unfollowReaderFeed = function (query, fn) {
		this.wpcom.req.post('/read/following/mine/delete', query, {}, fn);
	};
	
	Undocumented.prototype.readTeams = function (fn) {
		debug('/read/teams');
		this.wpcom.req.get('/read/teams', { apiVersion: '1.2' }, fn);
	};
	
	Undocumented.prototype.readSite = function (query, fn) {
		var params = omit(query, 'site');
		debug('/read/sites/:site');
		query.apiVersion = '1.1';
		return this.wpcom.req.get('/read/sites/' + query.site, params, fn);
	};
	
	Undocumented.prototype.readSiteFeatured = function (siteId, query, fn) {
		var params = omit(query, ['before', 'after']);
		debug('/read/sites/:site/featured');
		this.wpcom.req.get('/read/sites/' + siteId + '/featured', params, fn);
	};
	
	Undocumented.prototype.readSitePosts = function (query, fn) {
		var params = omit(query, 'site');
		debug('/read/sites/:site/posts');
		query.apiVersion = '1.1';
		this.wpcom.req.get('/read/sites/' + query.site + '/posts', params, fn);
	};
	
	Undocumented.prototype.readSitePost = function (query, fn) {
		var params = omit(query, ['site', 'postId']);
		debug('/read/sites/:site/post/:post');
		query.apiVersion = '1.1';
		this.wpcom.req.get('/read/sites/' + query.site + '/posts/' + query.postId, params, fn);
	};
	
	Undocumented.prototype.readSitePostRelated = function (query, fn) {
		debug('/read/site/:site/post/:post/related');
		var params = omit(query, ['site_id', 'post_id']);
		params.apiVersion = '1.2';
		return this.wpcom.req.get('/read/site/' + query.site_id + '/post/' + query.post_id + '/related', params, fn);
	};
	
	Undocumented.prototype.fetchSiteRecommendations = function (query, fn) {
		this.wpcom.req.get('/read/recommendations/mine', query, fn);
	};
	
	Undocumented.prototype.readRecommendationsStart = function (query, fn) {
		return this.wpcom.req.get('/read/recommendations/start', query, fn);
	};
	
	Undocumented.prototype.readNewPostEmailSubscription = function (query, fn) {
		var params = omit(query, ['site']);
		debug('/read/site/:site/post_email_subscriptions/new');
		this.wpcom.req.post('/read/site/' + encodeURIComponent(query.site) + '/post_email_subscriptions/new', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.readUpdatePostEmailSubscription = function (query, fn) {
		var params = omit(query, ['site']);
		debug('/read/site/:site/post_email_subscriptions/update');
		this.wpcom.req.post('/read/site/' + encodeURIComponent(query.site) + '/post_email_subscriptions/update', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.readDeletePostEmailSubscription = function (query, fn) {
		var params = omit(query, ['site']);
		debug('/read/site/:site/post_email_subscriptions/delete');
		this.wpcom.req.post('/read/site/' + encodeURIComponent(query.site) + '/post_email_subscriptions/delete', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.readNewCommentEmailSubscription = function (query, fn) {
		var params = omit(query, ['site']);
		debug('/read/site/:site/comment_email_subscriptions/new');
		this.wpcom.req.post('/read/site/' + encodeURIComponent(query.site) + '/comment_email_subscriptions/new', { apiVersion: '1.2' }, params, fn);
	};
	
	Undocumented.prototype.readDeleteCommentEmailSubscription = function (query, fn) {
		var params = omit(query, ['site']);
		debug('/read/site/:site/comment_email_subscriptions/delete');
		this.wpcom.req.post('/read/site/' + encodeURIComponent(query.site) + '/comment_email_subscriptions/delete', { apiVersion: '1.2' }, params, fn);
	};
	
	/**
	 * Saves a user's A/B test variation on the backend
	 *
	 * @param {string} name - The name of the A/B test. No leading 'abtest_' needed
	 * @param {string} variation - The variation the user is assigned to
	 * @param {Function} fn - Function to invoke when request is complete
	 * @api public
	 */
	Undocumented.prototype.saveABTestData = function (name, variation, fn) {
		var data = {
			name: name,
			variation: variation
		};
		this.wpcom.req.post({
			path: '/me/abtests',
			body: data
		}, fn);
	};
	
	/**
	 * Sign up for a new user account
	 * Create a new user
	 *
	 * @param {string} query - an object with three values: email, username, password
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersNew = function (query, fn) {
		var args;
		debug('/users/new');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		// Set the language for the user
		query.locale = i18n.getLocaleSlug();
		args = {
			path: '/users/new',
			body: query
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Sign up for a new phone account
	 *
	 * @param {string} query - a key/value pair; key: 'phone_number', value: 'the users phone number'
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersPhoneNew = function (query, fn) {
		var args;
		debug('/users/phone/new');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		args = {
			path: '/users/phone/new',
			body: mapKeysRecursively(query, snakeCase)
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Log in to an existing phone account
	 *
	 * @param {string} query - a key/value pair; key: 'phone_number', value: 'the users phone number'
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersPhone = function (query, fn) {
		var args;
		debug('/users/phone');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		args = {
			path: '/users/phone',
			body: mapKeysRecursively(query, snakeCase)
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Verify a record in the signups table and create a new user from it
	 *
	 * @param {string} query - two key/value pairs; { 'phone_number': 'the users phone number', 'code': 'the verification code we sent to the phone number' }
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersPhoneVerification = function (query, fn) {
		var args;
		debug('/users/phone/verification');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		args = {
			path: '/users/phone/verification',
			body: mapKeysRecursively(query, snakeCase)
	
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Sign up for a new email only account
	 *
	 * @param {string} query - a key/value pair; key: 'email', value: 'the users email address'
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersEmailNew = function (query, fn) {
		var args;
		debug('/users/email/new');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		args = {
			path: '/users/email/new',
			body: mapKeysRecursively(query, snakeCase)
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Log in to an existing email account
	 *
	 * @param {string} query - a key/value pair; key: 'email', value: 'the users email address'
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersEmail = function (query, fn) {
		var args;
		debug('/users/email');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		args = {
			path: '/users/email',
			body: mapKeysRecursively(query, snakeCase)
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Verify a record in wp_signups and create a new user from it
	 *
	 * @param {string} query - two key/value pairs; { 'email': 'the users email address', 'code': 'the verification code we sent to the email address' }
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.usersEmailVerification = function (query, fn) {
		var args;
		debug('/users/email/verification');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		args = {
			path: '/users/email/verification',
			body: mapKeysRecursively(query, snakeCase)
	
		};
		this.wpcom.req.post(args, fn);
	};
	
	/**
	 * Verify user for new signups
	 *
	 * @param {object} data - object containing an email address, username and password
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.validateNewUser = function (data, fn) {
		debug('/signups/validation/user');
	
		data.locale = i18n.getLocaleSlug();
	
		this.wpcom.req.post('/signups/validation/user/', null, data, fn);
	};
	
	/**
	 * Create a new site
	 *
	 * @param {object} query - object containing an site address
	 * @param {Function} fn - Function to invoke when request is complete
	 */
	Undocumented.prototype.sitesNew = function (query, fn) {
		var localeSlug = i18n.getLocaleSlug();
	
		debug('/sites/new');
	
		// This API call is restricted to these OAuth keys
		restrictByOauthKeys(query);
	
		// Set the language for the user
		query.lang_id = i18n.getLanguage(localeSlug).value;
		query.locale = localeSlug;
	
		this.wpcom.req.post({
			path: '/sites/new',
			body: query
		}, fn);
	};
	
	/**
	 * Fetch the locales relevant to the current user, based on their IP and browser setting
	 *
	 * @param {Function} fn - Function to invoke when the request is complete
	 */
	Undocumented.prototype.getLocaleSuggestions = function (fn) {
		debug('/locale-guess');
	
		this.wpcom.req.get({ path: '/locale-guess' }, fn);
	};
	
	Undocumented.prototype.themes = function (site, query, fn) {
		var path = site ? '/sites/' + site.ID + '/themes' : '/themes';
		debug(path);
		return this.wpcom.req.get(path, {
			search: query.search,
			tier: query.tier,
			page: query.page,
			number: query.perPage,
			apiVersion: site.jetpack ? '1' : '1.2'
		}, fn);
	};
	
	Undocumented.prototype.themeDetails = function (themeId, fn) {
		var path = '/themes/' + themeId;
		debug('/themes/:theme_id');
		return this.wpcom.req.get(path, {
			apiVersion: '1.1',
			extended: 'true'
		}, fn);
	};
	
	Undocumented.prototype.activeTheme = function (siteId, fn) {
		debug('/sites/:site_id/themes/mine');
		return this.wpcom.req.get({ path: '/sites/' + siteId + '/themes/mine' }, fn);
	};
	
	Undocumented.prototype.activateTheme = function (theme, siteId, fn) {
		debug('/sites/:site_id/themes/mine');
		return this.wpcom.req.post({
			path: '/sites/' + siteId + '/themes/mine',
			body: { theme: theme.id }
		}, fn);
	};
	
	Undocumented.prototype.emailForwards = function (domain, callback) {
		this.wpcom.req.get('/domains/' + domain + '/email', function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	Undocumented.prototype.addEmailForward = function (domain, mailbox, destination, callback) {
		this.wpcom.req.post('/domains/' + domain + '/email/new', {}, {
			mailbox: mailbox,
			destination: destination
		}, function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	Undocumented.prototype.deleteEmailForward = function (domain, mailbox, callback) {
		this.wpcom.req.post('/domains/' + domain + '/email/' + mailbox + '/delete', {}, {}, function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	Undocumented.prototype.resendVerificationEmailForward = function (domain, mailbox, callback) {
		this.wpcom.req.post('/domains/' + domain + '/email/' + mailbox + '/resend-verification', {}, {}, function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	Undocumented.prototype.nameservers = function (domain, callback) {
		this.wpcom.req.get('/domains/' + domain + '/nameservers', function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	Undocumented.prototype.updateNameservers = function (domain, nameservers, callback) {
		this.wpcom.req.post('/domains/' + domain + '/nameservers/', {}, nameservers, function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	Undocumented.prototype.resendIcannVerification = function (domain, callback) {
		this.wpcom.req.post('/domains/' + domain + '/resend-icann/', callback);
	};
	
	Undocumented.prototype.fetchDns = function (domainName, fn) {
		this.wpcom.req.get('/domains/' + domainName + '/dns', fn);
	};
	
	Undocumented.prototype.addDns = function (domain, record, fn) {
		this.wpcom.req.post('/domains/' + domain + '/dns/add', {}, record, fn);
	};
	
	Undocumented.prototype.deleteDns = function (domain, record, fn) {
		this.wpcom.req.post('/domains/' + domain + '/dns/delete', {}, record, fn);
	};
	
	Undocumented.prototype.fetchWapiDomainInfo = function (domainName, fn) {
		this.wpcom.req.get('/domains/' + domainName + '/status', fn);
	};
	
	Undocumented.prototype.requestTransferCode = function (options, fn) {
		var domainName = options.domainName;
		var unlock = options.unlock;
		var disablePrivacy = options.disablePrivacy;
		var data = {
			domainStatus: (0, _stringify2.default)({
				command: 'send-code',
				payload: {
					unlock: unlock,
					disable_privacy: disablePrivacy
				}
			})
		};
	
		this.wpcom.req.post('/domains/' + domainName + '/transfer', data, fn);
	};
	
	Undocumented.prototype.enableDomainLocking = function (_ref, fn) {
		var domainName = _ref.domainName;
		var enablePrivacy = _ref.enablePrivacy;
		var declineTransfer = _ref.declineTransfer;
	
		var data = {
			domainStatus: (0, _stringify2.default)({
				command: 'lock-domain',
				payload: {
					enable_privacy: enablePrivacy,
					decline_transfer: declineTransfer
				}
			})
		};
	
		this.wpcom.req.post('/domains/' + domainName + '/transfer', data, fn);
	};
	
	Undocumented.prototype.enablePrivacyProtection = function (domainName, fn) {
		var data = {
			domainStatus: (0, _stringify2.default)({ command: 'enable-privacy' })
		};
	
		this.wpcom.req.post('/domains/' + domainName + '/transfer', data, fn);
	};
	
	Undocumented.prototype.acceptTransfer = function (domainName, fn) {
		var data = {
			domainStatus: (0, _stringify2.default)({ command: 'accept-transfer' })
		};
	
		this.wpcom.req.post('/domains/' + domainName + '/transfer', data, fn);
	};
	
	Undocumented.prototype.declineTransfer = function (domainName, fn) {
		var data = {
			domainStatus: (0, _stringify2.default)({ command: 'deny-transfer' })
		};
	
		this.wpcom.req.post('/domains/' + domainName + '/transfer', data, fn);
	};
	
	/*
	 * Retrieves WHOIS data for given domain.
	 *
	 * @param {string} [domainName]
	 * @param {Function} [fn]
	 */
	Undocumented.prototype.fetchWhois = function (domainName, fn) {
		debug('/domains/:domainName/whois query');
		this.wpcom.req.get('/domains/' + domainName + '/whois', fn);
	};
	
	/*
	 * Updates WHOIS data for given domain.
	 *
	 * @param {string} [domainName]
	 * @param {Object} [whois]
	 * @param {Function} [fn]
	 */
	Undocumented.prototype.updateWhois = function (domainName, whois, fn) {
		debug('/domains/:domainName/whois');
		this.wpcom.req.post({
			path: '/domains/' + domainName + '/whois',
			apiVersion: '1.1',
			body: {
				whois: whois
			}
		}, fn);
	};
	
	/*
	 * Change the theme of a given site.
	 *
	 * @param {string} [siteSlug]
	 * @param {string} [data]
	 * @param {Function} fn
	 * @api public
	 */
	Undocumented.prototype.changeTheme = function (siteSlug, data, fn) {
		debug('/site/:site_id/themes/mine');
		return this.wpcom.req.post({
			path: '/sites/' + siteSlug + '/themes/mine',
			body: data
		}, fn);
	};
	
	Undocumented.prototype.sitePurchases = function (siteId, fn) {
		debug('/site/:site_id/purchases');
		this.wpcom.req.get({ path: '/sites/' + siteId + '/purchases' }, fn);
	};
	
	Undocumented.prototype.googleAppsFilterByDomain = function (domainName, fn) {
		debug('/domains/:domainName/google-apps');
		return this.wpcom.req.get({ path: '/domains/' + domainName + '/google-apps' }, fn);
	};
	
	Undocumented.prototype.googleAppsFilterBySiteId = function (siteId, fn) {
		debug('/sites/:siteId/google-apps');
		return this.wpcom.req.get({ path: '/sites/' + siteId + '/google-apps' }, fn);
	};
	
	Undocumented.prototype.deleteWPCOMFollower = function (siteId, followerId, fn) {
		debug('/site/:site_id/follower/:follower_id/delete');
		this.wpcom.req.post({ path: '/sites/%s/follower/%d/delete' }, fn);
	};
	
	Undocumented.prototype.deleteEmailFollower = function (siteId, followerId, email, fn) {
		debug('/site/:site_id/follower/:follower_id/delete');
		this.wpcom.req.post({
			path: '/sites/%s/follower/%d/delete',
			body: { email: email }
		}, fn);
	};
	
	Undocumented.prototype.fetchImporterState = function (siteId) {
		debug('/sites/' + siteId + '/importer/');
	
		return this.wpcom.req.get({ path: '/sites/' + siteId + '/imports/' });
	};
	
	Undocumented.prototype.updateImporter = function (siteId, importerStatus) {
		debug('/sites/' + siteId + '/imports/' + importerStatus.importId);
	
		return this.wpcom.req.post({
			path: '/sites/' + siteId + '/imports/' + importerStatus.importerId,
			formData: [['importStatus', (0, _stringify2.default)(importerStatus)]]
		});
	};
	
	Undocumented.prototype.uploadExportFile = function (siteId, params) {
		var _this2 = this;
	
		return new _promise2.default(function (resolve, reject) {
			var resolver = function resolver(error, data) {
				error ? reject(error) : resolve(data);
			};
	
			var req = _this2.wpcom.req.post({
				path: '/sites/' + siteId + '/imports/new',
				formData: [['importStatus', (0, _stringify2.default)(params.importStatus)], ['import', params.file]]
			}, resolver);
	
			req.upload.onprogress = params.onprogress;
			req.onabort = params.onabort;
		});
	};
	
	/**
	 * GET help links
	 *
	 * @param {string} searchQuery User input for help search
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getHelpLinks = function (searchQuery, fn) {
		debug('help-search/ searchQuery');
	
		this.wpcom.req.get('/help/search', {
			query: searchQuery
		}, fn);
	};
	
	Undocumented.prototype.cancelPurchase = function (purchaseId, fn) {
		debug('upgrades/{purchaseId}/disable-auto-renew');
	
		this.wpcom.req.post({
			path: '/upgrades/' + purchaseId + '/disable-auto-renew'
		}, fn);
	};
	
	Undocumented.prototype.cancelAndRefundPurchase = function (purchaseId, data, fn) {
		debug('upgrades/{purchaseId}/cancel');
	
		this.wpcom.req.post({
			path: '/upgrades/' + purchaseId + '/cancel',
			body: data
		}, fn);
	};
	
	Undocumented.prototype.cancelPrivateRegistration = function (purchaseId, fn) {
		debug('upgrades/{purchaseId}/cancel-privacy-protection');
	
		this.wpcom.req.post({
			path: '/upgrades/' + purchaseId + '/cancel-privacy-protection',
			apiVersion: '1.1'
		}, fn);
	};
	
	Undocumented.prototype.cancelPlanTrial = function (planId, fn) {
		debug('/upgrades/{planId}/cancel-plan-trial');
	
		this.wpcom.req.post({
			path: '/upgrades/' + planId + '/cancel-plan-trial'
		}, fn);
	};
	
	Undocumented.prototype.submitKayakoTicket = function (subject, message, locale, client, fn) {
		debug('submitKayakoTicket');
	
		this.wpcom.req.post({
			path: '/help/tickets/kayako/new',
			body: { subject: subject, message: message, locale: locale, client: client }
		}, fn);
	};
	
	/**
	 * Get the olark configuration for the current user
	 *
	 * @param {Object} client - current user
	 * @param {Function} fn The callback function
	 * @api public
	 */
	Undocumented.prototype.getOlarkConfiguration = function (client, fn) {
		this.wpcom.req.get({
			apiVersion: '1.1',
			path: '/help/olark/mine',
			body: { client: client }
		}, fn);
	};
	
	Undocumented.prototype.submitSupportForumsTopic = function (subject, message, client, fn) {
		this.wpcom.req.post({
			path: '/help/forums/support/topics/new',
			body: { subject: subject, message: message, client: client }
		}, fn);
	};
	
	/**
	 * Get the available export configuration settings for a site
	 *
	 * @param {int}       siteId            The site ID
	 * @param {Function}  fn                The callback function
	 * @returns {Promise} A promise that resolves when the request completes
	 * @api public
	 */
	Undocumented.prototype.getExportSettings = function (siteId, fn) {
		return this.wpcom.req.get({
			apiVersion: '1.1',
			path: '/sites/' + siteId + '/exports/settings'
		}, fn);
	};
	
	/*
	 * Start an export
	 *
	 * @param {int}       siteId            The site ID
	 * @param {Object}    advancedSettings  Advanced export configuration
	 * @param {Function}  fn                The callback function
	 * @returns {Promise}                   A promise that resolves when the export started
	 */
	Undocumented.prototype.startExport = function (siteId, advancedSettings, fn) {
		return this.wpcom.req.post({
			apiVersion: '1.1',
			path: '/sites/' + siteId + '/exports/start'
		}, advancedSettings, fn);
	};
	
	/**
	 * Check the status of an export
	 *
	 * @param {Number|String} siteId - The site ID
	 * @param {Object} exportId - Export ID (for future use)
	 * @param {Function} fn - The callback function
	 * @returns {Promise}  promise
	 */
	Undocumented.prototype.getExport = function (siteId, exportId, fn) {
		return this.wpcom.req.get({
			apiVersion: '1.1',
			path: '/sites/' + siteId + '/exports/' + exportId
		}, fn);
	};
	
	Undocumented.prototype.timezones = function (params, fn) {
		if (typeof params === 'function') {
			fn = params;
			params = {};
		}
	
		var query = (0, _assign2.default)({}, params, { apiNamespace: 'wpcom/v2' });
		return this.wpcom.req.get('/timezones', query, fn);
	};
	
	/**
	 * Check different info about WordPress and Jetpack status on a url
	 *
	 * @param {String} targetUrl - The url of the site to check
	 * @param {String} filters - Comma separated string with the filters to run
	 * @returns {Promise}  promise
	 */
	Undocumented.prototype.getSiteConnectInfo = function (targetUrl, filters) {
		var parsedUrl = url.parse(targetUrl);
		var endpointUrl = '/connect/site-info/' + parsedUrl.protocol.slice(0, -1) + '/' + parsedUrl.host;
		var params = {
			filters: filters,
			apiVersion: '1.1'
		};
	
		if (parsedUrl.path && parsedUrl.path !== '/') {
			endpointUrl += parsedUrl.path.replace(/\//g, '::');
		}
	
		return this.wpcom.req.get('' + endpointUrl, params);
	};
	
	/**
	 * Post an url to be stored under user's settings,
	 * so we can know that they have started a jetpack-connect flow for that site
	 *
	 * @param {String} targetUrl          The url of the site to store
	 * @returns {Promise} Promise
	 */
	Undocumented.prototype.storeJetpackConnectUrl = function (targetUrl) {
		return this.wpcom.req.post({ path: '/me/settings' }, {}, {
			jetpack_connect: targetUrl
		});
	};
	
	/**
	 * Exports the user's Reader feed as an OPML XML file.
	 * A JSON object is returned with the XML given as a String
	 * in the `opml` field.
	 *
	 * @param {Function} fn           The callback function
	 */
	Undocumented.prototype.exportReaderFeed = function (fn) {
		debug('/read/following/mine/export');
		var query = {
			apiVersion: '1.2'
		};
		this.wpcom.req.get('/read/following/mine/export', query, fn);
	};
	
	/**
	 * Imports given XML file into the user's Reader feed.
	 * XML file is expected to be in OPML format.
	 *
	 * @param {File}     file         The File object to upload
	 * @param {Function} fn           The callback function
	 * @returns {XMLHttpRequest} The XHR instance, to attach `progress`
	 *   listeners to, etc.
	 */
	Undocumented.prototype.importReaderFeed = function (file, fn) {
		debug('/read/following/mine/import');
		var params = {
			path: '/read/following/mine/import',
			formData: [['import', file]]
		};
		// XXX: kind strange, wpcom.js, that `apiVersion` must be in `query`
		// *and* pass a `body` of null for this to work properly…
		var query = {
			apiVersion: '1.2'
		};
		return this.wpcom.req.post(params, query, null, fn);
	};
	
	/**
	 * Creates a Push Notification registration for the device
	 *
	 * @param {String}     registration   The registration to be stored
	 * @param {String}     deviceFamily   The device family
	 * @param {String}     deviceName     The device name
	 * @param {Function}   fn             The callback function
	 * @returns {XMLHttpRequest}          The XHR instance
	 */
	Undocumented.prototype.registerDevice = function (registration, deviceFamily, deviceName, fn) {
		debug('/devices/new');
		return this.wpcom.req.post({ path: '/devices/new' }, {}, {
			device_token: registration,
			device_family: deviceFamily,
			device_name: deviceName
		}, fn);
	};
	
	/**
	 * Removes a Push Notification registration for the device
	 *
	 * @param {int}        deviceId       The device ID for the registration to be removed
	 * @param {Function}   fn             The callback function
	 * @returns {XMLHttpRequest}          The XHR instance
	 */
	Undocumented.prototype.unregisterDevice = function (deviceId, fn) {
		debug('/devices/:device_id/delete');
		return this.wpcom.req.post({ path: '/devices/' + deviceId + '/delete' }, fn);
	};
	
	/**
	 * Requests streamlined approval to WordAds program
	 *
	 * @param {int}       siteId            The site ID
	 * @returns {XMLHttpRequest}          The XHR instance
	 */
	Undocumented.prototype.wordAdsApprove = function (siteId) {
		debug('/sites/:site:/wordads/approve');
		return this.wpcom.req.post('/sites/' + siteId + '/wordads/approve');
	};
	
	/**
	 * Expose `Undocumented` module
	 */
	module.exports = Undocumented;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(398), __esModule: true };

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(196);
	__webpack_require__(197);
	__webpack_require__(210);
	__webpack_require__(399);
	module.exports = __webpack_require__(47).Promise;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(200)
	  , global             = __webpack_require__(46)
	  , ctx                = __webpack_require__(48)
	  , classof            = __webpack_require__(222)
	  , $export            = __webpack_require__(45)
	  , isObject           = __webpack_require__(53)
	  , anObject           = __webpack_require__(52)
	  , aFunction          = __webpack_require__(49)
	  , anInstance         = __webpack_require__(217)
	  , forOf              = __webpack_require__(218)
	  , setProto           = __webpack_require__(282).set
	  , speciesConstructor = __webpack_require__(400)
	  , task               = __webpack_require__(401).set
	  , microtask          = __webpack_require__(403)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(208)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(216)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(207)($Promise, PROMISE);
	__webpack_require__(223)(PROMISE);
	Wrapper = __webpack_require__(47)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(304)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(52)
	  , aFunction = __webpack_require__(49)
	  , SPECIES   = __webpack_require__(208)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(48)
	  , invoke             = __webpack_require__(402)
	  , html               = __webpack_require__(206)
	  , cel                = __webpack_require__(57)
	  , global             = __webpack_require__(46)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(66)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 402 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(46)
	  , macrotask = __webpack_require__(401).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(66)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(405), __esModule: true };

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(406);
	module.exports = __webpack_require__(47).Object.keys;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(78)
	  , $keys    = __webpack_require__(61);
	
	__webpack_require__(259)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(332);
	
	/**
	 * Creates a shallow clone of `value`.
	 *
	 * **Note:** This method is loosely based on the
	 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	 * and supports cloning arrays, array buffers, booleans, date objects, maps,
	 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	 * arrays. The own enumerable properties of `arguments` objects are cloned
	 * as plain objects. An empty object is returned for uncloneable values such
	 * as error objects, functions, DOM nodes, and WeakMaps.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to clone.
	 * @returns {*} Returns the cloned value.
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var shallow = _.clone(objects);
	 * console.log(shallow[0] === objects[0]);
	 * // => true
	 */
	function clone(value) {
	  return baseClone(value);
	}
	
	module.exports = clone;


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	var capitalize = __webpack_require__(409),
	    createCompounder = __webpack_require__(413);
	
	/**
	 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the camel cased string.
	 * @example
	 *
	 * _.camelCase('Foo Bar');
	 * // => 'fooBar'
	 *
	 * _.camelCase('--foo-bar');
	 * // => 'fooBar'
	 *
	 * _.camelCase('__foo_bar__');
	 * // => 'fooBar'
	 */
	var camelCase = createCompounder(function(result, word, index) {
	  word = word.toLowerCase();
	  return result + (index ? capitalize(word) : word);
	});
	
	module.exports = camelCase;


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(156),
	    upperFirst = __webpack_require__(410);
	
	/**
	 * Converts the first character of `string` to upper case and the remaining
	 * to lower case.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to capitalize.
	 * @returns {string} Returns the capitalized string.
	 * @example
	 *
	 * _.capitalize('FRED');
	 * // => 'Fred'
	 */
	function capitalize(string) {
	  return upperFirst(toString(string).toLowerCase());
	}
	
	module.exports = capitalize;


/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	var createCaseFirst = __webpack_require__(411);
	
	/**
	 * Converts the first character of `string` to upper case.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.upperFirst('fred');
	 * // => 'Fred'
	 *
	 * _.upperFirst('FRED');
	 * // => 'FRED'
	 */
	var upperFirst = createCaseFirst('toUpperCase');
	
	module.exports = upperFirst;


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	var stringToArray = __webpack_require__(412),
	    toString = __webpack_require__(156);
	
	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');
	
	/**
	 * Creates a function like `_.lowerFirst`.
	 *
	 * @private
	 * @param {string} methodName The name of the `String` case method to use.
	 * @returns {Function} Returns the new function.
	 */
	function createCaseFirst(methodName) {
	  return function(string) {
	    string = toString(string);
	
	    var strSymbols = reHasComplexSymbol.test(string)
	      ? stringToArray(string)
	      : undefined;
	
	    var chr = strSymbols ? strSymbols[0] : string.charAt(0),
	        trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);
	
	    return chr[methodName]() + trailing;
	  };
	}
	
	module.exports = createCaseFirst;


/***/ },
/* 412 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return string.match(reComplexSymbol);
	}
	
	module.exports = stringToArray;


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(246),
	    deburr = __webpack_require__(414),
	    words = __webpack_require__(416);
	
	/**
	 * Creates a function like `_.camelCase`.
	 *
	 * @private
	 * @param {Function} callback The function to combine each word.
	 * @returns {Function} Returns the new compounder function.
	 */
	function createCompounder(callback) {
	  return function(string) {
	    return arrayReduce(words(deburr(string)), callback, '');
	  };
	}
	
	module.exports = createCompounder;


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	var deburrLetter = __webpack_require__(415),
	    toString = __webpack_require__(156);
	
	/** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;
	
	/** Used to compose unicode character classes. */
	var rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0';
	
	/** Used to compose unicode capture groups. */
	var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';
	
	/**
	 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	 */
	var reComboMark = RegExp(rsCombo, 'g');
	
	/**
	 * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	 * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to deburr.
	 * @returns {string} Returns the deburred string.
	 * @example
	 *
	 * _.deburr('déjà vu');
	 * // => 'deja vu'
	 */
	function deburr(string) {
	  string = toString(string);
	  return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	}
	
	module.exports = deburr;


/***/ },
/* 415 */
/***/ function(module, exports) {

	/** Used to map latin-1 supplementary letters to basic latin letters. */
	var deburredLetters = {
	  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	  '\xc7': 'C',  '\xe7': 'c',
	  '\xd0': 'D',  '\xf0': 'd',
	  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	  '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	  '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	  '\xd1': 'N',  '\xf1': 'n',
	  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	  '\xc6': 'Ae', '\xe6': 'ae',
	  '\xde': 'Th', '\xfe': 'th',
	  '\xdf': 'ss'
	};
	
	/**
	 * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	 *
	 * @private
	 * @param {string} letter The matched letter to deburr.
	 * @returns {string} Returns the deburred letter.
	 */
	function deburrLetter(letter) {
	  return deburredLetters[letter];
	}
	
	module.exports = deburrLetter;


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(156);
	
	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsDingbatRange = '\\u2700-\\u27bf',
	    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	    rsQuoteRange = '\\u2018\\u2019\\u201c\\u201d',
	    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	    rsVarRange = '\\ufe0e\\ufe0f',
	    rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;
	
	/** Used to compose unicode capture groups. */
	var rsBreak = '[' + rsBreakRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsDigits = '\\d+',
	    rsDingbat = '[' + rsDingbatRange + ']',
	    rsLower = '[' + rsLowerRange + ']',
	    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsUpper = '[' + rsUpperRange + ']',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	    reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;
	
	/** Used to match non-compound words composed of alphanumeric characters. */
	var reBasicWord = /[a-zA-Z0-9]+/g;
	
	/** Used to match complex or compound words. */
	var reComplexWord = RegExp([
	  rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	  rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	  rsUpper + '?' + rsLowerMisc + '+',
	  rsUpper + '+',
	  rsDigits,
	  rsEmoji
	].join('|'), 'g');
	
	/** Used to detect strings that need a more robust regexp to match words. */
	var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
	/**
	 * Splits `string` into an array of its words.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {RegExp|string} [pattern] The pattern to match words.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
	 * @returns {Array} Returns the words of `string`.
	 * @example
	 *
	 * _.words('fred, barney, & pebbles');
	 * // => ['fred', 'barney', 'pebbles']
	 *
	 * _.words('fred, barney, & pebbles', /[^, ]+/g);
	 * // => ['fred', 'barney', '&', 'pebbles']
	 */
	function words(string, pattern, guard) {
	  string = toString(string);
	  pattern = guard ? undefined : pattern;
	
	  if (pattern === undefined) {
	    pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
	  }
	  return string.match(pattern) || [];
	}
	
	module.exports = words;


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	var createCompounder = __webpack_require__(413);
	
	/**
	 * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the snake cased string.
	 * @example
	 *
	 * _.snakeCase('Foo Bar');
	 * // => 'foo_bar'
	 *
	 * _.snakeCase('fooBar');
	 * // => 'foo_bar'
	 *
	 * _.snakeCase('--foo-bar');
	 * // => 'foo_bar'
	 */
	var snakeCase = createCompounder(function(result, word, index) {
	  return result + (index ? '_' : '') + word.toLowerCase();
	});
	
	module.exports = snakeCase;


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(243),
	    basePick = __webpack_require__(245),
	    rest = __webpack_require__(24);
	
	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [props] The property names to pick, specified
	 *  individually or in arrays.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = rest(function(object, props) {
	  return object == null ? {} : basePick(object, baseFlatten(props, 1));
	});
	
	module.exports = pick;


/***/ },
/* 419 */
/***/ function(module, exports) {

	module.exports = require("url");

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies.
	 */
	var debug = __webpack_require__(6)('calypso:wpcom-undocumented:site');
	
	/**
	 * Internal dependencies.
	 */
	var Export = __webpack_require__(421),
	    i18n = __webpack_require__(88);
	
	/**
	 * Resources array
	 * A list of endpoints with the same structure
	 * [  wpcom-undocumented.functionName, siteAPiSubPath, apiVersion ]
	 */
	var resources = [['statsEvents', 'posts/'], ['statsInsights', 'stats/insights', '1.1'], ['sshCredentialsNew', 'ssh-credentials/new', '1.1', 'post'], ['sshCredentialsMine', 'ssh-credentials/mine', '1.1'], ['sshCredentialsMineDelete', 'ssh-credentials/mine/delete', '1.1', 'post'], ['sshScanToggle', 'ssh-credentials/mine', '1.1', 'post'], ['getOption', 'option/']];
	
	var list = function list(resourceOptions) {
		return function (query, fn) {
			var path,
			    subpath = resourceOptions.subpath;
	
			// Handle replacement of '/:var' in the subpath with value from query
			subpath = subpath.replace(/\/:([^\/]+)/g, function (match, property) {
				var replacement;
				if ('undefined' !== typeof query[property]) {
					replacement = query[property];
					delete query[property];
					return '/' + replacement;
				}
				return '/';
			});
	
			query.apiVersion = resourceOptions.apiVersion;
	
			path = '/sites/' + this._id + '/' + subpath;
	
			debug('calling undocumented site api path', path);
			debug('query', query);
			debug('resourceOptions', resourceOptions);
	
			if ('post' === resourceOptions.method) {
				this.wpcom.req.post(path, {}, query, fn);
			} else {
				this.wpcom.req[resourceOptions.method](path, query, fn);
			}
		};
	};
	
	// Walk for each resource and create related method
	resources.forEach(function (resource) {
		var name = resource[0],
		    resourceOptions = {
			subpath: resource[1],
			apiVersion: resource[2] || '1',
			method: resource[3] || 'get'
		};
	
		UndocumentedSite.prototype[name] = list.call(this, resourceOptions);
	});
	
	/**
	 * Create an UndocumentedSite instance
	 *
	 * @param {[int]}   id          Site ID
	 * @param {[WPCOM]} wpcom       WPCOM instance
	 *
	 * @return {{UndocumentedSite}} UndocumentedSite instance
	 *
	 * @api public
	 */
	function UndocumentedSite(id, wpcom) {
		debug('UndocumentedSite', id);
		if (!(this instanceof UndocumentedSite)) {
			return new UndocumentedSite(id, wpcom);
		}
		this.wpcom = wpcom;
		this._id = id;
	}
	
	UndocumentedSite.prototype.domains = function (callback) {
		this.wpcom.req.get('/sites/' + this._id + '/domains', function (error, response) {
			if (error) {
				callback(error);
				return;
			}
	
			callback(null, response);
		});
	};
	
	UndocumentedSite.prototype.postFormatsList = function (callback) {
		this.wpcom.req.get('/sites/' + this._id + '/post-formats', { locale: i18n.getLocaleSlug() }, callback);
	};
	
	UndocumentedSite.prototype.postAutosave = function (postId, attributes, callback) {
		this.wpcom.req.post({
			path: '/sites/' + this._id + '/posts/' + postId + '/autosave',
			body: attributes
		}, callback);
	};
	
	UndocumentedSite.prototype.embeds = function (attributes, callback) {
		var url = '/sites/' + this._id + '/embeds';
		if (attributes && attributes.embed_url) {
			url += '/render';
		}
	
		this.wpcom.req.get(url, attributes, callback);
	};
	
	UndocumentedSite.prototype.shortcodes = function (attributes, callback) {
		this.wpcom.req.get('/sites/' + this._id + '/shortcodes/render', attributes, callback);
	};
	
	UndocumentedSite.prototype.getRoles = function (query, callback) {
		this.wpcom.req.get('/sites/' + this._id + '/roles', query, callback);
	};
	
	UndocumentedSite.prototype.getViewers = function (query, callback) {
		this.wpcom.req.get('/sites/' + this._id + '/viewers', query, callback);
	};
	
	UndocumentedSite.prototype.removeViewer = function (viewerId, callback) {
		this.wpcom.req.post({
			path: '/sites/' + this._id + '/viewers/' + viewerId + '/delete'
		}, callback);
	};
	
	UndocumentedSite.prototype.deleteUser = function (userId, attributes, callback) {
		this.wpcom.req.post({
			path: '/sites/' + this._id + '/users/' + userId + '/delete',
			body: attributes
		}, callback);
	};
	
	UndocumentedSite.prototype.updateUser = function (userId, attributes, callback) {
		this.wpcom.req.post({
			path: '/sites/' + this._id + '/users/' + userId,
			body: attributes
		}, callback);
	};
	
	UndocumentedSite.prototype.getUser = function (login, callback) {
		this.wpcom.req.get('/sites/' + this._id + '/users/login:' + login, callback);
	};
	
	UndocumentedSite.prototype.removeFollower = function (followerId, callback) {
		return this.wpcom.req.post({
			path: '/sites/' + this._id + '/followers/' + followerId + '/delete'
		}, callback);
	};
	
	UndocumentedSite.prototype.removeEmailFollower = function (followerId, callback) {
		this.wpcom.req.post({
			path: '/sites/' + this._id + '/email-followers/' + followerId + '/delete'
		}, callback);
	};
	
	UndocumentedSite.prototype.setOption = function (query, callback) {
		this.wpcom.req.post('/sites/' + this._id + '/option', {
			option_name: query.option_name,
			is_array: query.is_array,
			site_option: query.site_option
		}, { option_value: query.option_value }, callback);
	};
	
	UndocumentedSite.prototype.postCounts = function (options, callback) {
		var query = (0, _assign2.default)({
			type: 'post',
			apiNamespace: 'wpcom/v2'
		}, options);
	
		var type = query.type;
		delete query.type;
	
		return this.wpcom.req.get('/sites/' + this._id + '/post-counts/' + type, query, callback);
	};
	
	/**
	 * Create an `Export` instance
	 *
	 * @param  {[String]} id Export instance ID
	 * @return {[Export]}    new Export instance
	 */
	UndocumentedSite.prototype.export = function (id) {
		return new Export(id, this._id, this.wpcom);
	};
	
	/**
	 * Add a new export
	 *
	 * @param {Function} fn Callback on completion of new export POST request
	 * @return {Export}     new Export instance
	 */
	UndocumentedSite.prototype.newExport = function (fn) {
		var exportObject = new Export(null, this._id, this.wpcom);
		return exportObject.new(fn);
	};
	
	/**
	 * Returns media storage limits and space used for a given site. If site has
	 * unlimited storage or is a jetpack site, values returned will be -1.
	 *
	 * @param {Function} callback - called on completion of the GET request
	 * @return {Object} promise - resolves on completion of the GET request
	 */
	UndocumentedSite.prototype.mediaStorage = function (callback) {
		return this.wpcom.req.get('/sites/' + this._id + '/media-storage', callback);
	};
	
	/**
	 * Expose `UndocumentedSite` module
	 */
	module.exports = UndocumentedSite;

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * External dependencies.
	 */
	var debug = __webpack_require__(6)('calypso:wpcom-undocumented:export');
	
	/**
	 * Export methods
	 *
	 * @param {String} id
	 * @param {String} sid site id
	 * @param {WPCOM} wpcom
	 */
	function Export(id, sid, wpcom) {
	  if (!(this instanceof Export)) {
	    return new Export(id, sid, wpcom);
	  }
	
	  this.wpcom = wpcom;
	  this._sid = sid;
	  this._id = id;
	}
	
	/**
	 * Submit a new export
	 *
	 * @param {Function} fn
	 * @api public
	 */
	Export.prototype.new = function (fn) {
	  debug('/sites/:site_id:/exports/new query');
	  return this.wpcom.req.post({ path: '/sites/' + this._sid + '/exports/new' }, fn);
	};
	
	/**
	 * Start a new export
	 *
	 * @param {Function} fn
	 * @param {Object} exportConfig
	 * @api public
	 */
	Export.prototype.start = function (exportConfig, fn) {
	  debug('/sites/:site_id:/exports/:export_id:/start query');
	  var params = {
	    path: '/sites/' + this._sid + '/exports/' + this._id + '/start',
	    body: {
	      content: exportConfig.content,
	      post_author: exportConfig.post_author,
	      post_start_date: exportConfig.post_start_date,
	      post_end_date: exportConfig.post_end_date,
	      category: exportConfig.category,
	      page_author: exportConfig.page_author,
	      page_start_date: exportConfig.page_start_date,
	      page_end_date: exportConfig.page_end_date,
	      page_status: exportConfig.page_status
	    }
	  };
	  return this.wpcom.req.post(params, fn);
	};
	
	/**
	 * Get an export
	 *
	 * @param {Function} fn
	 * @api public
	 */
	Export.prototype.get = function (fn) {
	  debug('/sites/:site_id:/exports/:export_id query');
	  return this.wpcom.req.get({ path: '/sites/' + this._sid + '/exports/' + this._id }, fn);
	};
	
	/**
	 * Expose `Export` module
	 */
	module.exports = Export;

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _me = __webpack_require__(423);
	
	var _me2 = _interopRequireDefault(_me);
	
	var _inherits = __webpack_require__(395);
	
	var _inherits2 = _interopRequireDefault(_inherits);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var debug = (0, _debug2.default)('calypso:wpcom-undocumented:me');
	
	/**
	 * Create an UndocumentedMe instance
	 *
	 * @param {WPCOM} wpcom - WPCOMUndocumented instance
	 * @return {NUll} null
	 */
	/**
	 * Module dependencies.
	 */
	function UndocumentedMe(wpcom) {
		debug('UndocumentedMe');
		if (!(this instanceof UndocumentedMe)) {
			return new UndocumentedMe(wpcom);
		}
		this.wpcom = wpcom;
	}
	
	/**
	 * Inherits from Me class
	 */
	(0, _inherits2.default)(UndocumentedMe, _me2.default);
	
	UndocumentedMe.prototype.billingHistoryEmailReceipt = function (receiptId, callback) {
		var args = {
			path: '/me/billing-history/receipt/' + receiptId + '/email'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.getReceipt = function (receiptId, fn) {
		return this.wpcom.req.get({
			path: '/me/billing-history/receipt/' + receiptId
		}, fn);
	};
	
	UndocumentedMe.prototype.purchases = function (callback) {
		return this.wpcom.req.get('/me/purchases', callback);
	};
	
	UndocumentedMe.prototype.getConnectedApplications = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/connected-applications'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.revokeApplicationConnection = function (connectionID, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/connected-applications/' + connectionID + '/delete'
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.getApplicationPasswords = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/application-passwords'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.revokeApplicationPassword = function (passwordID, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/application-passwords/' + passwordID + '/delete'
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.createApplicationPassword = function (applicationName, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/application-passwords/new',
			body: {
				application_name: applicationName
			}
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.validatePassword = function (password, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/settings/password/validate',
			body: {
				password: password
			}
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.sendSMSValidationCode = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/sms/new'
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.validateTwoStepCode = function (body, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/validate',
			body: body
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.getTwoStep = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.getAppAuthCodes = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/app-auth-setup/'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.getTrophies = function (callback) {
		var args = {
			path: '/me/trophies'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.validateUsername = function (username, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/username/validate/' + username
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.changeUsername = function (username, action, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/username',
			body: {
				username: username,
				action: action
			}
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.storedCardDelete = function (card, callback) {
		var args = {
			path: '/me/stored-cards/' + card.stored_details_id + '/delete'
		};
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.backupCodes = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/two-step/backup-codes/new'
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.blockSite = function (site, callback) {
		var args = {
			path: '/me/block/sites/' + encodeURIComponent(site) + '/new'
		};
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.unblockSite = function (site, callback) {
		var args = {
			path: '/me/block/sites/' + encodeURIComponent(site) + '/delete'
		};
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.devices = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/notifications/devices/'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.sendVerificationEmail = function (callback) {
		debug('/me/send-verification-email');
	
		return this.wpcom.req.post({ path: '/me/send-verification-email' }, callback);
	};
	
	UndocumentedMe.prototype.getNotificationSettings = function (callback) {
		debug('/me/notification/settings/');
	
		return this.wpcom.req.get({ apiVersion: '1.1', path: '/me/notifications/settings/' }, callback);
	};
	
	UndocumentedMe.prototype.updateNotificationSettings = function (settings, applyToAll, callback) {
		var query = {};
		debug('/me/notification/settings/');
	
		if (applyToAll) {
			query = { applyToAll: true };
		}
	
		return this.wpcom.req.post({
			apiVersion: '1.1',
			path: '/me/notifications/settings/'
		}, query, settings, callback);
	};
	
	UndocumentedMe.prototype.getAccountRecovery = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/account-recovery'
		};
	
		return this.wpcom.req.get(args, callback);
	};
	
	UndocumentedMe.prototype.updateAccountRecoveryPhone = function (country, phoneNumber, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/account-recovery/phone',
			body: {
				country: country,
				phone_number: phoneNumber
			}
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.deleteAccountRecoveryPhone = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/account-recovery/phone/delete'
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.updateAccountRecoveryEmail = function (email, callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/account-recovery/email',
			body: {
				email: email
			}
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.deleteAccountRecoveryEmail = function (callback) {
		var args = {
			apiVersion: '1.1',
			path: '/me/account-recovery/email/delete'
		};
	
		return this.wpcom.req.post(args, callback);
	};
	
	UndocumentedMe.prototype.deletePurchase = function (purchaseId, fn) {
		debug('/me/purchases/{purchaseId}/delete');
	
		this.wpcom.req.post({
			path: '/me/purchases/' + purchaseId + '/delete'
		}, fn);
	};
	
	module.exports = UndocumentedMe;

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	var _interopRequireDefault = __webpack_require__(424)['default'];
	
	/**
	 * Module dependencies
	 */
	
	var _meKeyringConnection = __webpack_require__(425);
	
	var _meKeyringConnection2 = _interopRequireDefault(_meKeyringConnection);
	
	var _meConnectedApplication = __webpack_require__(432);
	
	var _meConnectedApplication2 = _interopRequireDefault(_meConnectedApplication);
	
	var _mePublicizeConnection = __webpack_require__(433);
	
	var _mePublicizeConnection2 = _interopRequireDefault(_mePublicizeConnection);
	
	var _meSettings = __webpack_require__(434);
	
	var _meSettings2 = _interopRequireDefault(_meSettings);
	
	var _meTwoStep = __webpack_require__(437);
	
	var _meTwoStep2 = _interopRequireDefault(_meTwoStep);
	
	/**
	 * Create `Me` instance
	 *
	 * @param {WPCOM} wpcom - wpcom instance
	 * @return {Null} null
	 */
	function Me(wpcom) {
	  if (!(this instanceof Me)) {
	    return new Me(wpcom);
	  }
	
	  this.wpcom = wpcom;
	}
	
	/**
	 * Meta data about auth token's User
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.get = function (query, fn) {
	  return this.wpcom.req.get('/me', query, fn);
	};
	
	/**
	 * Get user billing history.
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} [fn] - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.billingHistory = function (query, fn) {
	  return this.wpcom.req.get('/me/billing-history', query, fn);
	};
	
	/**
	 * Get a list of posts of from the user's blogs
	 *
	 * *Example:*
	 *    // Get posts list
	 *    wpcom
	 *    .me()
	 *    .postsList( function( err, data ) {
	 *      // posts list data object
	 *    } );
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.postsList = function (query, fn) {
	  return this.wpcom.req.get('/me/posts', query, fn);
	};
	
	/**
	 * A list of the current user's sites
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.sites = function (query, fn) {
	  return this.wpcom.req.get('/me/sites', query, fn);
	};
	
	/**
	 * List the currently authorized user's likes
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.likes = function (query, fn) {
	  return this.wpcom.req.get('/me/likes', query, fn);
	};
	
	/**
	 * A list of the current user's group
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.groups = function (query, fn) {
	  return this.wpcom.req.get('/me/groups', query, fn);
	};
	
	/**
	 * Get current user's connected applications.
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.connectedApps = function (query, fn) {
	  return this.wpcom.req.get('/me/connected-applications', query, fn);
	};
	
	/**
	 * Get a list of all the keyring connections
	 * associated with the current user
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.keyringConnections = function (query, fn) {
	  return this.wpcom.req.get('/me/keyring-connections', query, fn);
	};
	
	/**
	 * Get a list of publicize connections
	 * that the current user has set up.
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	Me.prototype.publicizeConnections = function (query, fn) {
	  return this.wpcom.req.get('/me/publicize-connections', query, fn);
	};
	
	/**
	 * Return a `MeSettings` instance.
	 *
	 * @return {MeSettings} MeSettings instance
	 */
	Me.prototype.settings = function () {
	  return new _meSettings2['default'](this.wpcom);
	};
	
	/**
	 * Return a `MeConnectedApp` instance.
	 *
	 * @param {String} id - app id
	 * @return {ConnectedApp} Me ConnectedApp instance
	 */
	Me.prototype.connectedApp = function (id) {
	  return new _meConnectedApplication2['default'](id, this.wpcom);
	};
	
	/**
	 * Return a `MePublicizeConnection` instance.
	 *
	 * @param {String} id - connection id
	 * @return {MePublicizeConnection} MeSettings instance
	 */
	Me.prototype.publicizeConnection = function (id) {
	  return new _mePublicizeConnection2['default'](id, this.wpcom);
	};
	
	/**
	 * Return a `MeTwoStep` instance.
	 *
	 * @return {MeTwoStep} MeTwoStep instance
	 */
	Me.prototype.twoStep = function () {
	  return new _meTwoStep2['default'](this.wpcom);
	};
	
	/**
	 * Return a `MeKeyringConnection` instance.
	 *
	 * @param {String} id - connection id
	 * @return {MeKeyringConnection} MeKeyringConnection instance
	 */
	Me.prototype.keyringConnection = function (id) {
	  return new _meKeyringConnection2['default'](id, this.wpcom);
	};
	
	/**
	 * Expose `Me` module
	 */
	module.exports = Me;

/***/ },
/* 424 */
/***/ function(module, exports) {

	"use strict";
	
	exports["default"] = function (obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	};
	
	exports.__esModule = true;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass = __webpack_require__(426)['default'];
	
	var _classCallCheck = __webpack_require__(431)['default'];
	
	var root = '/me/keyring-connections/';
	
	var KeyringConnection = (function () {
	
		/**
	  * `KeyringConnection` constructor.
	  *
	  * @param {String} keyId - the connection ID to take action on.
	  * @param {WPCOM} wpcom - wpcom instance
	  * @return {Null} null
	  */
	
		function KeyringConnection(keyId, wpcom) {
			_classCallCheck(this, KeyringConnection);
	
			if (!(this instanceof KeyringConnection)) {
				return new KeyringConnection(keyId, wpcom);
			}
			this._id = keyId;
			this.wpcom = wpcom;
		}
	
		/**
	 * Expose `KeyringConnection` module
	 */
	
		/**
	  * Get a single Keyring connection that the current user has setup.
	  *
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
	
		_createClass(KeyringConnection, [{
			key: 'get',
			value: function get(query, fn) {
				return this.wpcom.req.get(root + this._id, query, fn);
			}
	
			/**
	   * Delete the Keyring connection (and associated token) with the
	   * provided ID. Also deletes all associated publicize connections.
	   *
	   * @param {Object} [query] - query object parameter
	   * @param {Function} fn - callback function
	   * @return {Function} request handler
	   */
		}, {
			key: 'delete',
			value: function _delete(query, fn) {
				return this.wpcom.req.del(root + this._id + '/delete', query, fn);
			}
		}]);
	
		return KeyringConnection;
	})();
	
	module.exports = KeyringConnection;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _Object$defineProperty = __webpack_require__(427)["default"];
	
	exports["default"] = (function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	
	      _Object$defineProperty(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	})();
	
	exports.__esModule = true;

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(428), __esModule: true };

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(429);
	module.exports = function defineProperty(it, key, desc){
	  return $.setDesc(it, key, desc);
	};

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global = typeof self != 'undefined' ? self : Function('return this')()
	  , core   = {}
	  , defineProperty = Object.defineProperty
	  , hasOwnProperty = {}.hasOwnProperty
	  , ceil  = Math.ceil
	  , floor = Math.floor
	  , max   = Math.max
	  , min   = Math.min;
	// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.
	var DESC = !!function(){
	  try {
	    return defineProperty({}, 'a', {get: function(){ return 2; }}).a == 2;
	  } catch(e){ /* empty */ }
	}();
	var hide = createDefiner(1);
	// 7.1.4 ToInteger
	function toInteger(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	}
	function desc(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	}
	function simpleSet(object, key, value){
	  object[key] = value;
	  return object;
	}
	function createDefiner(bitmap){
	  return DESC ? function(object, key, value){
	    return $.setDesc(object, key, desc(bitmap, value));
	  } : simpleSet;
	}
	
	function isObject(it){
	  return it !== null && (typeof it == 'object' || typeof it == 'function');
	}
	function isFunction(it){
	  return typeof it == 'function';
	}
	function assertDefined(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	}
	
	var $ = module.exports = __webpack_require__(430)({
	  g: global,
	  core: core,
	  html: global.document && document.documentElement,
	  // http://jsperf.com/core-js-isobject
	  isObject:   isObject,
	  isFunction: isFunction,
	  that: function(){
	    return this;
	  },
	  // 7.1.4 ToInteger
	  toInteger: toInteger,
	  // 7.1.15 ToLength
	  toLength: function(it){
	    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	  },
	  toIndex: function(index, length){
	    index = toInteger(index);
	    return index < 0 ? max(index + length, 0) : min(index, length);
	  },
	  has: function(it, key){
	    return hasOwnProperty.call(it, key);
	  },
	  create:     Object.create,
	  getProto:   Object.getPrototypeOf,
	  DESC:       DESC,
	  desc:       desc,
	  getDesc:    Object.getOwnPropertyDescriptor,
	  setDesc:    defineProperty,
	  setDescs:   Object.defineProperties,
	  getKeys:    Object.keys,
	  getNames:   Object.getOwnPropertyNames,
	  getSymbols: Object.getOwnPropertySymbols,
	  assertDefined: assertDefined,
	  // Dummy, fix for not array-like ES3 string in es5 module
	  ES5Object: Object,
	  toObject: function(it){
	    return $.ES5Object(assertDefined(it));
	  },
	  hide: hide,
	  def: createDefiner(0),
	  set: global.Symbol ? simpleSet : hide,
	  each: [].forEach
	});
	/* eslint-disable no-undef */
	if(typeof __e != 'undefined')__e = core;
	if(typeof __g != 'undefined')__g = global;

/***/ },
/* 430 */
/***/ function(module, exports) {

	module.exports = function($){
	  $.FW   = false;
	  $.path = $.core;
	  return $;
	};

/***/ },
/* 431 */
/***/ function(module, exports) {

	"use strict";
	
	exports["default"] = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	
	exports.__esModule = true;

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass = __webpack_require__(426)['default'];
	
	var _classCallCheck = __webpack_require__(431)['default'];
	
	var root = '/me/connected-applications/';
	
	var MeConnectedApp = (function () {
	
		/**
	  * `MeConnectedApp` constructor.
	  *
	  * @param {String} appId - application identifier
	  * @param {WPCOM} wpcom - wpcom instance
	  * @return {Null} null
	  */
	
		function MeConnectedApp(appId, wpcom) {
			_classCallCheck(this, MeConnectedApp);
	
			if (!(this instanceof MeConnectedApp)) {
				return new MeConnectedApp(appId, wpcom);
			}
			this._id = appId;
			this.wpcom = wpcom;
		}
	
		/**
	 * Expose `MeConnectedApp` module
	 */
	
		/**
	  * Get one of current user's connected applications.
	  *
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
	
		_createClass(MeConnectedApp, [{
			key: 'get',
			value: function get(query, fn) {
				return this.wpcom.req.get(root + this._id, query, fn);
			}
	
			/**
	   * Delete the app of the  current user
	   * through of the given appId
	   *
	   * @param {Object} [query] - query object parameter
	   * @param {Function} fn - callback function
	   * @return {Function} request handler
	   */
		}, {
			key: 'delete',
			value: function _delete(query, fn) {
				return this.wpcom.req.del(root + this._id + '/delete', query, fn);
			}
		}]);
	
		return MeConnectedApp;
	})();
	
	module.exports = MeConnectedApp;

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass = __webpack_require__(426)['default'];
	
	var _classCallCheck = __webpack_require__(431)['default'];
	
	var root = '/me/publicize-connections/';
	
	var PublicizeConnection = (function () {
		/**
	 * `PublicizeConnection` constructor.
	 *
	 * @param {String} connectionId - application identifier
	 * @param {WPCOM} wpcom - wpcom instance
	 * @return {Null} null
	 */
	
		function PublicizeConnection(connectionId, wpcom) {
			_classCallCheck(this, PublicizeConnection);
	
			if (!(this instanceof PublicizeConnection)) {
				return new PublicizeConnection(connectionId, wpcom);
			}
			this._id = connectionId;
			this.wpcom = wpcom;
		}
	
		/**
	 * Expose `PublicizeConnection` module
	 */
	
		/**
	  * Get a single publicize connection that the current user has set up.
	  *
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
	
		_createClass(PublicizeConnection, [{
			key: 'get',
			value: function get(query, fn) {
				return this.wpcom.req.get(root + this._id, query, fn);
			}
	
			/**
	   * Add a publicize connection belonging to the current user.
	   *
	   * @param {Object} [query] - query object parameter
	   * @param {Object} body - body object parameter
	   * @param {Function} fn - callback function
	   * @return {Function} request handler
	   */
		}, {
			key: 'add',
			value: function add(query, body, fn) {
				return this.wpcom.req.post(root + 'new', query, body, fn);
			}
	
			/**
	   * Update a publicize connection belonging to the current user.
	   *
	   * @param {Object} [query] - query object parameter
	   * @param {Object} body - body object parameter
	   * @param {Function} fn - callback function
	   * @return {Function} request handler
	   */
		}, {
			key: 'update',
			value: function update(query, body, fn) {
				return this.wpcom.req.put(root + this._id, query, body, fn);
			}
	
			/**
	  * Delete the app of the  current user
	  * through of the given connectionId
	  *
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
		}, {
			key: 'delete',
			value: function _delete(query, fn) {
				return this.wpcom.req.del(root + this._id + '/delete', query, fn);
			}
		}]);
	
		return PublicizeConnection;
	})();
	
	module.exports = PublicizeConnection;

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	var _interopRequireDefault = __webpack_require__(424)['default'];
	
	/**
	 * Module dependencies
	 */
	
	var _meSettingsProfileLinks = __webpack_require__(435);
	
	var _meSettingsProfileLinks2 = _interopRequireDefault(_meSettingsProfileLinks);
	
	var _meSettingsPassword = __webpack_require__(436);
	
	var _meSettingsPassword2 = _interopRequireDefault(_meSettingsPassword);
	
	/**
	 * `MeSettings` constructor.
	 *
	 * Use a `WPCOM#Me` instance to create a new `MeSettings` instance.
	 *
	 * *Example:*
	 *    // Require `wpcom-unpublished` library
	 *    var wpcomUnpublished = require( 'wpcom-unpublished' );
	 *
	 *    // Create a `wpcomUnpublished` instance
	 *    var wpcom = wpcomUnpublished();
	 *
	 *    // Create a `MeSettings` instance
	 *    var settings = wpcom.me().settings();
	 *
	 * @param {WPCOM} wpcom - wpcom instance
	 * @return {Null} null
	 */
	function MeSettings(wpcom) {
	  if (!(this instanceof MeSettings)) {
	    return new MeSettings(wpcom);
	  }
	
	  this.wpcom = wpcom;
	}
	
	/**
	 * Get settings for the current user.
	 *
	 * *Example:*
	 *    // Get settings for the current user
	 *    wpcom
	 *    .me()
	 *    .settings()
	 *    .get( function( err, data ) {
	 *      // user settings data object
	 *    } );
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	MeSettings.prototype.get = function (query, fn) {
	  return this.wpcom.req.get('/me/settings', query, fn);
	};
	
	/**
	 * Update settings of the current user
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Object} body - body object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	MeSettings.prototype.update = function (query, body, fn) {
	  return this.wpcom.req.put('/me/settings/', query, body, fn);
	};
	
	/**
	 * Return `MeProfileLinks` instance
	 *
	 * *Example:*
	 *    // Create a MeProfileLinks instance
	 *    var profile_links = wpcom.me().settings().profileLinks();
	 *
	 * @return {MeProfileLinks} MeProfileLinks instance
	 */
	MeSettings.prototype.profileLinks = function () {
	  return new _meSettingsProfileLinks2['default'](this.wpcom);
	};
	
	/**
	 * Return `MeSettingsPassword` instance
	 *
	 * @return {MeSettingsPassword} MeSettingsPassword instance
	 */
	MeSettings.prototype.password = function () {
	  return new _meSettingsPassword2['default'](this.wpcom);
	};
	
	/**
	 * Expose `MeSettings` module
	 */
	module.exports = MeSettings;

/***/ },
/* 435 */
/***/ function(module, exports) {

	/**
	 * Endpoint root
	 */
	var root = '/me/settings/profile-links';
	
	/**
	 * `ProfileLinks` constructor.
	 *
	 * @param {WPCOM} wpcom - wpcom instance
	 * @return {Null} null
	 */
	function ProfileLinks(wpcom) {
	  if (!(this instanceof ProfileLinks)) {
	    return new ProfileLinks(wpcom);
	  }
	
	  this.wpcom = wpcom;
	}
	
	/**
	 * Get profile links of the current user.
	 *
	 * *Example:*
	 *   // Get profile links of the current user
	 *    wpcom
	 *    .me()
	 *    .settings()
	 *    .profileLinks()
	 *    .get( function( err, data ) {
	 *      // profile links data
	 *    } );
	 *
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	ProfileLinks.prototype.get = function (query, fn) {
	  return this.wpcom.req.get(root, query, fn);
	};
	
	// Create `mine` alias
	ProfileLinks.prototype.mine = ProfileLinks.prototype.get;
	
	/**
	 * Add a profile link to current user.
	 *
	 * *Example:*
	 *    // Add profile link to current user
	 *    wpcom
	 *    .me()
	 *    .settings()
	 *    .profileLinks()
	 *    .add( {
	 *      title: "WordPress Blog",
	 *      value: "en.blog.wordpress.com"
	 *    }, function( err, data ) {
	 *      // profile has been added
	 *    } );
	 *
	 * @param {Array|Object} links - profile links
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	ProfileLinks.prototype.add = function (links, query, fn) {
	  // query object is optional
	  if ('function' === typeof query) {
	    fn = query;
	    query = {};
	  }
	
	  // links can be Array or an Object
	  if (!(links instanceof Array)) {
	    links = [links];
	  }
	
	  // Set api version 1.2 for this endpoint
	  query.apiVersion = '1.2';
	
	  var path = root + '/new';
	  return this.wpcom.req.post(path, query, { links: links }, fn);
	};
	
	/**
	 * Remove your ProfileLinks from a Post.
	 *
	 * *Example:*
	 *    // Remove profile link from current user
	 *    wpcom
	 *    .me()
	 *    .settings()
	 *    .profileLinks()
	 *    .del( 'example.wordpress.com', function( err, data ) {
	 *      // profile has been deleted
	 *    } );
	 *
	 * @param {String} slug - the URL of the profile link
	 * @param {Object} [query] - query object parameter
	 * @param {Function} fn - callback function
	 * @return {Function} request handler
	 */
	ProfileLinks.prototype.del = function (slug, query, fn) {
	  var path = root + '/' + slug + '/delete';
	  return this.wpcom.req.del(path, query, fn);
	};
	
	// Create `delete` alias
	ProfileLinks.prototype['delete'] = ProfileLinks.prototype.del;
	
	/**
	 * Expose `ProfileLinks` module
	 */
	
	module.exports = ProfileLinks;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass = __webpack_require__(426)['default'];
	
	var _classCallCheck = __webpack_require__(431)['default'];
	
	var root = '/me/settings/password/';
	
	var MeSettingsPassword = (function () {
	
		/**
	  * `MeSettingsPassword` constructor.
	  *
	  * @param {WPCOM} wpcom - wpcom instance
	  * @return {Null} null
	  */
	
		function MeSettingsPassword(wpcom) {
			_classCallCheck(this, MeSettingsPassword);
	
			if (!(this instanceof MeSettingsPassword)) {
				return new MeSettingsPassword(wpcom);
			}
			this.wpcom = wpcom;
		}
	
		/**
	 * Expose `MeSettingsPassword` module
	 */
	
		/**
	  * Verify strength of a user's new password.
	  *
	  * @param {String} password - the users's potential new password
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
	
		_createClass(MeSettingsPassword, [{
			key: 'validate',
			value: function validate(password, query, fn) {
				return this.wpcom.req.post(root + 'validate', query, { password: password }, fn);
			}
		}]);
	
		return MeSettingsPassword;
	})();
	
	module.exports = MeSettingsPassword;

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass = __webpack_require__(426)['default'];
	
	var _classCallCheck = __webpack_require__(431)['default'];
	
	var _interopRequireDefault = __webpack_require__(424)['default'];
	
	/**
	 * Module dependencies
	 */
	
	var _meTwoStepSms = __webpack_require__(438);
	
	var _meTwoStepSms2 = _interopRequireDefault(_meTwoStepSms);
	
	var root = '/me/two-step/';
	
	var MeTwoStep = (function () {
	
		/**
	  * `MeTwoStep` constructor.
	  *
	  * @param {WPCOM} wpcom - wpcom instance
	  * @return {Null} null
	  */
	
		function MeTwoStep(wpcom) {
			_classCallCheck(this, MeTwoStep);
	
			if (!(this instanceof MeTwoStep)) {
				return new MeTwoStep(wpcom);
			}
			this.wpcom = wpcom;
		}
	
		/**
	 * Expose `MeTwoStep` module
	 */
	
		/**
	  * Get information about current user's two factor configuration.
	  *
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
	
		_createClass(MeTwoStep, [{
			key: 'get',
			value: function get(query, fn) {
				return this.wpcom.req.get(root, query, fn);
			}
	
			/**
	   * Return a `MeTwoStepSMS` instance.
	   *
	   * @return {MeTwoStepSMS} MeTwoStepSMS instance
	   */
		}, {
			key: 'sms',
			value: function sms() {
				return new _meTwoStepSms2['default'](this.wpcom);
			}
		}]);
	
		return MeTwoStep;
	})();
	
	module.exports = MeTwoStep;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass = __webpack_require__(426)['default'];
	
	var _classCallCheck = __webpack_require__(431)['default'];
	
	var root = '/me/two-step/sms/';
	
	var MeTwoStepSMS = (function () {
	
		/**
	  * `MeTwoStepSMS` constructor.
	  *
	  * @param {WPCOM} wpcom - wpcom instance
	  * @return {Null} null
	  */
	
		function MeTwoStepSMS(wpcom) {
			_classCallCheck(this, MeTwoStepSMS);
	
			if (!(this instanceof MeTwoStepSMS)) {
				return new MeTwoStepSMS(wpcom);
			}
			this.wpcom = wpcom;
		}
	
		/**
	 * Expose `MeTwoStepSMS` module
	 */
	
		/**
	  * Sends a two-step code via SMS to the current user.
	  *
	  * @param {Object} [query] - query object parameter
	  * @param {Function} fn - callback function
	  * @return {Function} request handler
	  */
	
		_createClass(MeTwoStepSMS, [{
			key: 'send',
			value: function send(query, fn) {
				return this.wpcom.req.post(root + 'new', query, fn);
			}
		}]);
	
		return MeTwoStepSMS;
	})();
	
	module.exports = MeTwoStepSMS;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module dependencies.
	 */
	var debug = __webpack_require__(6)('calypso:wpcom-undocumented:mailing-list');
	
	/**
	 * `MailingList` constructor.
	 *
	 * @constructor
	 * @param {WPCOM} wpcom
	 * @public
	 */
	
	function MailingList(category, wpcom) {
	  if (!(this instanceof MailingList)) {
	    return new MailingList(category, wpcom);
	  }
	
	  this._category = category;
	  this.wpcom = wpcom;
	}
	
	/**
	 * Subscribe an email address to the mailing list.
	 *
	 * *Example:*
	 *    var settings = {}; // your settings here
	 *
	 *    // Get site settings information
	 *    wpcom
	 *    .mailingList('marketing')
	 *    .subscribe(emailAddress, hmac, context, function(err, result) {
	 *      // result object contains `category`, `email`, and `subscribed` properties
	 *    });
	 *
	 * @param {String} emailAddress
	 * @param {String} hmac
	 * @param {Object} [context]
	 * @param {Function} callback
	 * @public
	 */
	
	MailingList.prototype.subscribe = function (emailAddress, hmac, context, callback) {
	  debug('/mailing-lists/:category/subscribers/:emailAddress/new');
	
	  // `context` is optional
	  if ('function' === typeof context) {
	    callback = context;
	    context = undefined;
	  }
	
	  return this.wpcom.req.post(createSubscriberResourceUrl(this._category, emailAddress, 'new'), createRequestBody(hmac, context), callback);
	};
	
	/**
	 * Unsubscribe an email address to the mailing list.
	 *
	 * *Example:*
	 *    var settings = {}; // your settings here
	 *
	 *    // Get site settings information
	 *    wpcom
	 *    .mailingList('marketing')
	 *    .unsubscribe(emailAddress, hmac, context, function(err, result) {
	 *      // result object contains `category`, `email`, and `subscribed` properties
	 *    });
	 *
	 * @param {String} emailAddress
	 * @param {String} hmac
	 * @param {Object} [context]
	 * @param {Function} callback
	 * @public
	 */
	
	MailingList.prototype.unsubscribe = function (emailAddress, hmac, context, callback) {
	  debug('/mailing-lists/:category/subscribers/:emailAddress/delete');
	
	  // `context` is optional
	  if ('function' === typeof context) {
	    callback = context;
	    context = undefined;
	  }
	
	  return this.wpcom.req.post(createSubscriberResourceUrl(this._category, emailAddress, 'delete'), createRequestBody(hmac, context), callback);
	};
	
	function createSubscriberResourceUrl(category, emailAddress, method) {
	  var url = '/mailing-lists/' + encodeURIComponent(category) + '/subscribers/' + encodeURIComponent(emailAddress);
	
	  if (method) {
	    url += '/' + method;
	  }
	
	  return url;
	}
	
	function createRequestBody(hmac, context) {
	  return (0, _stringify2.default)({
	    hmac: hmac,
	    context: context
	  });
	}
	
	/*!
	 * Expose `MailingList` module
	 */
	
	module.exports = MailingList;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.setLocale = setLocale;
	exports.getLocale = getLocale;
	exports.addLocaleQueryParam = addLocaleQueryParam;
	exports.injectLocalization = injectLocalization;
	exports.bindState = bindState;
	
	var _querystring = __webpack_require__(441);
	
	var _querystring2 = _interopRequireDefault(_querystring);
	
	var _selectors = __webpack_require__(191);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	/**
	 * External dependencies
	 */
	var locale = void 0;
	
	/**
	 * Setter function for internal locale value
	 *
	 * @param {String} localeToSet Locale to set
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function setLocale(localeToSet) {
	  locale = localeToSet;
	}
	
	/**
	 * Getter function for internal locale value
	 *
	 * @return {String} Locale
	 */
	function getLocale() {
	  return locale;
	}
	
	/**
	 * Given a WPCOM parameter set, modifies the query such that a non-default
	 * locale is added to the query parameter.
	 *
	 * @param  {Object} params Original parameters
	 * @return {Object}        Revised parameters, if non-default locale
	 */
	function addLocaleQueryParam(params) {
	  if (!locale || 'en' === locale) {
	    return params;
	  }
	
	  var query = _querystring2.default.parse(params.query);
	  return (0, _assign2.default)(params, {
	    query: _querystring2.default.stringify((0, _assign2.default)(query, { locale: locale }))
	  });
	}
	
	/**
	 * Modifies a WPCOM instance, returning an updated instance with included
	 * localization helpers. Specifically, this adds a new `withLocale` method to
	 * the base instance for indicating the request should be localized.
	 *
	 * @param  {Object} wpcom Original WPCOM instance
	 * @return {Object}       Modified WPCOM instance with localization helpers
	 */
	function injectLocalization(wpcom) {
	  var _request = wpcom.request.bind(wpcom);
	  return (0, _assign2.default)(wpcom, {
	    withLocale: function withLocale() {
	      this.localize = true;
	      return this;
	    },
	
	    request: function request(params, callback) {
	      if (this.localize) {
	        this.localize = false;
	        return _request(addLocaleQueryParam(params), callback);
	      }
	
	      return _request(params, callback);
	    }
	  });
	}
	
	/**
	 * Subscribes to the provided Redux store instance, updating the known locale
	 * value to the latest value when state changes.
	 *
	 * @param {Object} store Redux store instance
	 */
	function bindState(store) {
	  function setLocaleFromState() {
	    setLocale((0, _selectors.getCurrentUserLocale)(store.getState()));
	  }
	
	  store.subscribe(setLocaleFromState);
	  setLocaleFromState();
	}

/***/ },
/* 441 */
/***/ function(module, exports) {

	module.exports = require("querystring");

/***/ },
/* 442 */
/***/ function(module, exports) {

	module.exports = require("wpcom-xhr-request");

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = wpcomSupport;
	
	var _qs = __webpack_require__(80);
	
	var _qs2 = _interopRequireDefault(_qs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function wpcomSupport(wpcom) {
		var supportUser = '';
		var supportToken = '';
		var interceptResponse = null;
	
		/**
	  * Add the supportUser and supportToken to the query.
	  * @param {Object}  params The original request params object
	  * @return {Object}        The new query object with support data injected
	  */
		var addSupportData = function addSupportData(params) {
			// Unwind the query string
			var query = _qs2.default.parse(params.query);
	
			// Inject the credentials
			query.support_user = supportUser;
			query._support_token = supportToken;
	
			return (0, _assign2.default)({}, params, {
				query: _qs2.default.stringify(query)
			});
		};
	
		var _request = wpcom.request.bind(wpcom);
	
		return (0, _assign2.default)(wpcom, {
			fetchSupportUserToken: function fetchSupportUserToken(username, password) {
				return wpcom.req.post({
					apiVersion: '1.1',
					path: '/internal/support/' + username + '/grant'
				}, {
					password: password
				});
			},
			/**
	   * @param {String} supportUser  Support username
	   * @param {String} supportToken Support token
	   * @returns {bool}  true if the user and token were changed, false otherwise
	   */
			setSupportUserToken: function setSupportUserToken() {
				var newUser = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
				var newToken = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];
				var newTokenErrorCallback = arguments[2];
	
				if (newUser !== supportUser || newToken !== supportToken) {
					supportUser = newUser;
					supportToken = newToken;
					interceptResponse = function interceptResponse(callback) {
						return function (response) {
							for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
								args[_key - 1] = arguments[_key];
							}
	
							if (response && response.error && response.error === 'invalid_support_token' && typeof newTokenErrorCallback === 'function') {
								newTokenErrorCallback(response);
							} else {
								// Call the original response callback
								callback.apply(undefined, [response].concat(args));
							}
						};
					};
					return true;
				}
				return false;
			},
			request: function request(params, callback) {
				if (supportUser && supportToken && interceptResponse) {
					return _request(addSupportData(params), interceptResponse(callback));
				}
	
				return _request(params, callback);
			}
		});
	} /**
	   * External dependencies
	   */
	;
	module.exports = exports['default'];

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var update = __webpack_require__(445),
	    every = __webpack_require__(446),
	    assign = __webpack_require__(10),
	    flow = __webpack_require__(449),
	    isEqual = __webpack_require__(313),
	    merge = __webpack_require__(383),
	    reject = __webpack_require__(451),
	    tail = __webpack_require__(452),
	    some = __webpack_require__(454),
	    uniq = __webpack_require__(456),
	    flatten = __webpack_require__(459),
	    filter = __webpack_require__(317);
	
	/**
	 * Internal dependencies
	 */
	var productsValues = __webpack_require__(460),
	    formatProduct = productsValues.formatProduct,
	    isCustomDesign = productsValues.isCustomDesign,
	    isDependentProduct = productsValues.isDependentProduct,
	    isDomainProduct = productsValues.isDomainProduct,
	    isDomainRedemption = productsValues.isDomainRedemption,
	    isDomainRegistration = productsValues.isDomainRegistration,
	    isGoogleApps = productsValues.isGoogleApps,
	    isNoAds = productsValues.isNoAds,
	    isPlan = productsValues.isPlan,
	    isPremium = productsValues.isPremium,
	    isPrivateRegistration = productsValues.isPrivateRegistration,
	    isSiteRedirect = productsValues.isSiteRedirect,
	    isSpaceUpgrade = productsValues.isSpaceUpgrade,
	    isUnlimitedSpace = productsValues.isUnlimitedSpace,
	    isUnlimitedThemes = productsValues.isUnlimitedThemes,
	    isVideoPress = productsValues.isVideoPress,
	    sortProducts = __webpack_require__(465),
	    PLAN_PERSONAL = __webpack_require__(464).PLAN_PERSONAL;
	
	/**
	 * Adds the specified item to a shopping cart.
	 *
	 * @param {Object} newCartItem - new item as `CartItemValue` object
	 * @returns {Function} the function that adds the item to a shopping cart
	 */
	function add(newCartItem) {
		function appendItem(products) {
			var isDuplicate;
	
			products = products || [];
	
			isDuplicate = products.some(function (existingCartItem) {
				return isEqual(newCartItem, existingCartItem);
			});
	
			return isDuplicate ? products : products.concat([newCartItem]);
		}
	
		return function (cart) {
			if (cartItemShouldReplaceCart(newCartItem, cart)) {
				return update(cart, { products: { $set: [newCartItem] } });
			}
	
			return update(cart, { products: { $apply: appendItem } });
		};
	}
	
	/**
	 * Determines if the given cart item should replace the cart.
	 * This can happen if the given item:
	 * - will result in mixed renewals/non-renewals or multiple renewals (excluding private registration).
	 * - is a free trial plan
	 *
	 * @param {Object} cartItem - `CartItemValue` object
	 * @param {Object} cart - the existing shopping cart
	 * @returns {Boolean} whether or not the item should replace the cart
	 */
	function cartItemShouldReplaceCart(cartItem, cart) {
		if (isRenewal(cartItem) && !isPrivateRegistration(cartItem) && !isDomainRedemption(cartItem)) {
			// adding a renewal replaces the cart unless it is a private registration
			return true;
		}
	
		if (!isRenewal(cartItem) && hasRenewalItem(cart)) {
			// all items should replace the cart if the cart contains a renewal
			return true;
		}
	
		if (productsValues.isFreeTrial(cartItem) || hasFreeTrial(cart)) {
			// adding a free trial plan to your cart replaces the cart
			// adding another product to a cart containing a free trial removes the free trial
			return true;
		}
	
		return false;
	}
	
	/**
	 * Removes the specified item from a shopping cart.
	 *
	 * @param {Object} cartItemToRemove - item as `CartItemValue` object
	 * @returns {Function} the function that removes the item from a shopping cart
	 */
	function remove(cartItemToRemove) {
		function rejectItem(products) {
			return reject(products, function (existingCartItem) {
				return cartItemToRemove.product_slug === existingCartItem.product_slug && cartItemToRemove.meta === existingCartItem.meta;
			});
		}
	
		return function (cart) {
			return update(cart, { products: { $apply: rejectItem } });
		};
	}
	
	/**
	 * Removes the specified item and its dependency items from a shopping cart.
	 *
	 * @param {Object} cartItemToRemove - item as `CartItemValue` object
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Function} the function that removes the items from a shopping cart
	 */
	function removeItemAndDependencies(cartItemToRemove, cart) {
		var dependencies = getDependentProducts(cartItemToRemove, cart),
		    changes = dependencies.map(remove).concat(remove(cartItemToRemove));
	
		return flow.apply(null, changes);
	}
	
	/**
	 * Retrieves the dependency items from the shopping cart for the given cart item.
	 *
	 * @param {Object} cartItem - item as `CartItemValue` object
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of dependency items in the shopping cart
	 */
	function getDependentProducts(cartItem, cart) {
		var dependentProducts = getAll(cart).filter(function (existingCartItem) {
			return isDependentProduct(cartItem, existingCartItem);
		});
	
		return uniq(flatten(dependentProducts.concat(dependentProducts.map(function (dependentProduct) {
			return getDependentProducts(dependentProduct, cart);
		}))));
	}
	
	/**
	 * Retrieves all the items in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of items in the shopping cart as `CartItemValue` objects
	 */
	function getAll(cart) {
		return cart && cart.products || [];
	}
	
	/**
	 * Retrieves all the items in the shopping cart sorted
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 *
	 * @returns {Object[]} the sorted list of items in the shopping cart
	 */
	function getAllSorted(cart) {
		return sortProducts(getAll(cart));
	}
	
	/**
	 * Gets the renewal items from the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Array} an array of renewal items
	 */
	function getRenewalItems(cart) {
		return getAll(cart).filter(isRenewal);
	}
	
	/**
	 * Determines whether there is at least one item with free trial in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if there is at least one item with free trial, false otherwise
	 */
	function hasFreeTrial(cart) {
		return some(getAll(cart), 'free_trial');
	}
	
	/**
	 * Determines whether there is any kind of plan (e.g. Premium or Business) in the shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if there is at least one plan, false otherwise
	 */
	function hasPlan(cart) {
		return cart && some(getAll(cart), isPlan);
	}
	
	function hasPremiumPlan(cart) {
		return some(getAll(cart), isPremium);
	}
	
	function hasDomainCredit(cart) {
		return cart.has_bundle_credit || hasPlan(cart);
	}
	
	/**
	 * Whether the cart has a registration with .nl TLD
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Boolean} - Whether or not the cart contains a .nl TLD
	 */
	function hasNlTld(cart) {
		return some(getDomainRegistrations(cart), function (cartItem) {
			return getDomainRegistrationTld(cartItem) === '.nl';
		});
	}
	
	function getDomainRegistrationTld(cartItem) {
		if (!isDomainRegistration(cartItem)) {
			throw new Error('This function only works on domain registration cart ' + 'items.');
		}
	
		return '.' + tail(cartItem.meta.split('.')).join('.');
	}
	
	/**
	 * Determines whether all items in the specified shopping are free trial or free domains
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if all items have free trial, false otherwise
	 * @todo This will fail when a domain is purchased with a plan, as the domain will be included in the free trial
	 */
	function hasOnlyFreeTrial(cart) {
		return cart.products && findFreeTrial(cart) && every(getAll(cart), { cost: 0 });
	}
	
	/**
	 * Determines whether there is at least one item of a given product in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @param {Object} productSlug - the unique string that identifies the product
	 * @returns {boolean} true if there is at least one item of the specified product type, false otherwise
	 */
	function hasProduct(cart, productSlug) {
		return getAll(cart).some(function (cartItem) {
			return cartItem.product_slug === productSlug;
		});
	}
	
	/**
	 * Determines whether every product in the specified shopping cart is of the same productSlug.
	 * Will return false if the cart is empty.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @param {Object} productSlug - the unique string that identifies the product
	 * @returns {boolean} true if all the products in the cart are of the productSlug type
	 */
	function hasOnlyProductsOf(cart, productSlug) {
		return cart.products && every(getAll(cart), { product_slug: productSlug });
	}
	
	/**
	 * Determines whether there is at least one domain registration item in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if there is at least one domain registration item, false otherwise
	 */
	function hasDomainRegistration(cart) {
		return some(getAll(cart), isDomainRegistration);
	}
	
	function hasDomainMapping(cart) {
		return some(getAll(cart), productsValues.isDomainMapping);
	}
	
	/**
	 * Determines whether there is at least one renewal item in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if there is at least one renewal item, false otherwise
	 */
	function hasRenewalItem(cart) {
		return some(getAll(cart), isRenewal);
	}
	
	/**
	 * Determines whether all items are renewal items in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if there are only renewal items, false otherwise
	 */
	function hasOnlyRenewalItems(cart) {
		return every(getAll(cart), isRenewal);
	}
	
	/**
	 * Determines whether any product in the specified shopping cart is a renewable subscription.
	 * Will return false if the cart is empty.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {boolean} true if any product in the cart renews
	 */
	function hasRenewableSubscription(cart) {
		return cart.products && some(getAll(cart), function (cartItem) {
			return cartItem.bill_period > 0;
		});
	}
	
	/**
	 * Creates a new shopping cart item for a plan.
	 *
	 * @param {Object} productSlug - the unique string that identifies the product
	 * @param {boolean} isFreeTrial - optionally specifies if this is a free trial or not
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function planItem(productSlug) {
		var isFreeTrial = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	
		return {
			product_slug: productSlug,
			free_trial: isFreeTrial
		};
	}
	
	/**
	 * Creates a new shopping cart item for a Personal plan.
	 *
	 * @param {string} slug - e.g. value_bundle, jetpack_premium
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function personalPlan(slug, properties) {
		return planItem(slug, properties.isFreeTrial);
	}
	
	/**
	 * Creates a new shopping cart item for a Premium plan.
	 *
	 * @param {string} slug - e.g. value_bundle, jetpack_premium
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function premiumPlan(slug, properties) {
		return planItem(slug, properties.isFreeTrial);
	}
	
	/**
	 * Creates a new shopping cart item for a Business plan.
	 *
	 * @param {string} slug - e.g. business-bundle, jetpack_business
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function businessPlan(slug, properties) {
		return planItem(slug, properties.isFreeTrial);
	}
	
	/**
	 * Creates a new shopping cart item for a domain.
	 *
	 * @param {Object} productSlug - the unique string that identifies the product
	 * @param {string} domain - domain name
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function domainItem(productSlug, domain) {
		return {
			product_slug: productSlug,
			meta: domain
		};
	}
	
	function themeItem(themeSlug, source) {
		return {
			product_slug: 'premium_theme',
			meta: themeSlug,
			extra: {
				source: source
			}
		};
	}
	
	/**
	 * Creates a new shopping cart item for a domain registration.
	 *
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function domainRegistration(properties) {
		return assign(domainItem(properties.productSlug, properties.domain), { is_domain_registration: true });
	}
	
	/**
	 * Creates a new shopping cart item for a domain mapping.
	 *
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function domainMapping(properties) {
		return domainItem('domain_map', properties.domain);
	}
	
	/**
	 * Creates a new shopping cart item for Site Redirect.
	 *
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function siteRedirect(properties) {
		return domainItem('offsite_redirect', properties.domain);
	}
	
	/**
	 * Creates a new shopping cart item for a domain privacy protection.
	 *
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function domainPrivacyProtection(properties) {
		return domainItem('private_whois', properties.domain);
	}
	
	/**
	 * Creates a new shopping cart item for a domain redemption late fee.
	 *
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function domainRedemption(properties) {
		return domainItem('domain_redemption', properties.domain);
	}
	
	function googleApps(properties) {
		var item = domainItem('gapps', properties.meta ? properties.meta : properties.domain);
	
		return assign(item, { extra: { google_apps_users: properties.users } });
	}
	
	function googleAppsExtraLicenses(properties) {
		var item = domainItem('gapps_extra_license', properties.domain);
	
		return assign(item, { extra: { google_apps_users: properties.users } });
	}
	
	function customDesignItem() {
		return {
			product_slug: 'custom-design'
		};
	}
	
	function noAdsItem() {
		return {
			product_slug: 'no-adverts/no-adverts.php'
		};
	}
	
	function videoPressItem() {
		return {
			product_slug: 'videopress'
		};
	}
	
	function unlimitedSpaceItem() {
		return {
			product_slug: 'unlimited_space'
		};
	}
	
	function unlimitedThemesItem() {
		return {
			product_slug: 'unlimited_themes'
		};
	}
	
	function spaceUpgradeItem(slug) {
		return {
			product_slug: slug
		};
	}
	
	/**
	 * Creates a new shopping cart item for the specified plan.
	 *
	 * @param {Object} plan - plan provided by the `PlansList` object
	 * @param {Object} properties - list of properties
	 * @returns {Object} the new item as `CartItemValue` object
	 */
	function getItemForPlan(plan, properties) {
		properties = properties || {};
	
		switch (plan.product_slug) {
			case PLAN_PERSONAL:
				return personalPlan(plan.product_slug, properties);
			case 'value_bundle':
			case 'jetpack_premium':
				return premiumPlan(plan.product_slug, properties);
	
			case 'business-bundle':
			case 'jetpack_business':
				return businessPlan(plan.product_slug, properties);
	
			default:
				throw new Error('Invalid plan product slug: ' + plan.product_slug);
		}
	}
	
	/**
	 * Retrieves the first item with free trial in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object} the corresponding item in the shopping cart as `CartItemValue` object
	 */
	function findFreeTrial(cart) {
		return filter(getAll(cart), { free_trial: true })[0];
	}
	
	/**
	 * Retrieves all the domain registration items in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of the corresponding items in the shopping cart as `CartItemValue` objects
	 */
	function getDomainRegistrations(cart) {
		return filter(getAll(cart), { is_domain_registration: true });
	}
	
	/**
	 * Retrieves all the domain mapping items in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of the corresponding items in the shopping cart as `CartItemValue` objects
	 */
	function getDomainMappings(cart) {
		return filter(getAll(cart), { product_slug: 'domain_map' });
	}
	
	/**
	 * Retrieves all the Google Apps items in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of the corresponding items in the shopping cart as `CartItemValue` objects
	 */
	function getGoogleApps(cart) {
		return getAll(cart).filter(function (cartItem) {
			return cartItem.product_slug === 'gapps' || cartItem.product_slug === 'gapps_extra_license';
		});
	}
	
	/**
	 * Returns a renewal CartItem object with the given properties and product slug.
	 *
	 * @param {String} product - the product object
	 * @param {Object} [properties] - properties to be included in the new CartItem object
	 * @returns {Object} a CartItem object
	 */
	function getRenewalItemFromProduct(product, properties) {
		product = formatProduct(product);
	
		var cartItem = void 0;
	
		if (isDomainProduct(product)) {
			cartItem = domainItem(product.product_slug, properties.domain);
		}
	
		if (isPlan(product)) {
			cartItem = planItem(product.product_slug, false);
		}
	
		if (isGoogleApps(product)) {
			cartItem = googleApps(product);
		}
	
		if (isSiteRedirect(product)) {
			cartItem = siteRedirect(properties);
		}
	
		if (isNoAds(product)) {
			cartItem = noAdsItem();
		}
	
		if (isCustomDesign(product)) {
			cartItem = customDesignItem();
		}
	
		if (isVideoPress(product)) {
			cartItem = videoPressItem();
		}
	
		if (isUnlimitedSpace(product)) {
			cartItem = unlimitedSpaceItem();
		}
	
		if (isUnlimitedThemes(product)) {
			cartItem = unlimitedThemesItem();
		}
	
		if (isSpaceUpgrade(product)) {
			cartItem = spaceUpgradeItem(product.product_slug);
		}
	
		if (!cartItem) {
			throw new Error('This product cannot be renewed.');
		}
	
		return getRenewalItemFromCartItem(cartItem, product);
	}
	
	/**
	 * Returns a renewal CartItem object from the given cartItem and properties.
	 *
	 * @param {Object} cartItem - item as `CartItemValue` object
	 * @param {Object} properties - properties to be included in the new CartItem object
	 * @returns {Object} a CartItem object
	 */
	function getRenewalItemFromCartItem(cartItem, properties) {
		return merge({}, cartItem, { extra: {
				purchaseId: properties.id,
				purchaseDomain: properties.domain,
				purchaseType: 'renewal',
				includedDomain: properties.includedDomain
			} });
	}
	
	/**
	 * Retrieves all the site redirect items in the specified shopping cart.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of the corresponding items in the shopping cart as `CartItemValue` objects
	 */
	function getSiteRedirects(cart) {
		return filter(getAll(cart), { product_slug: 'offsite_redirect' });
	}
	
	function hasDomainInCart(cart, domain) {
		return some(getAll(cart), { is_domain_registration: true, meta: domain });
	}
	
	/**
	 * Retrieves the domain registration items in the specified shopping cart that do not have corresponding
	 * private whois items.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @returns {Object[]} the list of the corresponding items in the shopping cart as `CartItemValue` objects
	 */
	function getDomainRegistrationsWithoutPrivacy(cart) {
		return getDomainRegistrations(cart).filter(function (cartItem) {
			return !some(cart.products, {
				meta: cartItem.meta,
				product_slug: 'private_whois'
			});
		});
	}
	
	/**
	 * Changes presence of a private registration for the given domain cart items.
	 *
	 * @param {Object} cart - cart as `CartValue` object
	 * @param {Object[]} domainItems - the list of `CartItemValue` objects for domain registrations
	 * @param {Function} changeFunction - the function that adds/removes the private registration to a shopping cart
	 * @returns {Function} the function that adds/removes private registrations from the shopping cart
	 */
	function changePrivacyForDomains(cart, domainItems, changeFunction) {
		return flow.apply(null, domainItems.map(function (item) {
			return changeFunction(domainPrivacyProtection({ domain: item.meta }));
		}));
	}
	
	function addPrivacyToAllDomains(cart) {
		return changePrivacyForDomains(cart, getDomainRegistrationsWithoutPrivacy(cart), add);
	}
	
	function removePrivacyFromAllDomains(cart) {
		return changePrivacyForDomains(cart, getDomainRegistrations(cart), remove);
	}
	
	/**
	 * Determines whether a cart item is a renewal
	 *
	 * @param {Object} cartItem - `CartItemValue` object
	 * @returns {boolean} true if item is a renewal
	 */
	function isRenewal(cartItem) {
		return cartItem.extra && cartItem.extra.purchaseType === 'renewal';
	}
	
	/**
	 * Get the included domain for a cart item
	 *
	 * @param {Object} cartItem - `CartItemValue` object
	 * @returns {string} the included domain
	 */
	function getIncludedDomain(cartItem) {
		return cartItem.extra && cartItem.extra.includedDomain;
	}
	
	function isNextDomainFree(cart) {
		return !!(cart && cart.next_domain_is_free);
	}
	
	function isDomainBeingUsedForPlan(cart, domain) {
		if (cart && domain && hasPlan(cart)) {
			var domainProducts = getDomainRegistrations(cart).concat(getDomainMappings(cart)),
			    domainProduct = domainProducts.shift() || {};
			return domain === domainProduct.meta;
		}
	
		return false;
	}
	
	function shouldBundleDomainWithPlan(withPlansOnly, selectedSite, cart, suggestion) {
		return withPlansOnly && suggestion.product_slug && suggestion.cost && // not free
		!isDomainBeingUsedForPlan(cart, suggestion.domain_name) && // a plan in cart
		!isNextDomainFree(cart) && // domain credit
		!hasPlan(cart) && ( // already a plan in cart
		!selectedSite || selectedSite && selectedSite.plan.product_slug === 'free_plan'); // site has a plan
	}
	
	function getDomainPriceRule(withPlansOnly, selectedSite, cart, suggestion) {
		if (!suggestion.product_slug || suggestion.cost === 'Free') {
			return 'FREE_DOMAIN';
		}
	
		if (isDomainBeingUsedForPlan(cart, suggestion.domain_name)) {
			return 'FREE_WITH_PLAN';
		}
	
		if (isNextDomainFree(cart)) {
			return 'FREE_WITH_PLAN';
		}
	
		if (shouldBundleDomainWithPlan(withPlansOnly, selectedSite, cart, suggestion)) {
			return 'INCLUDED_IN_PREMIUM';
		}
	
		return 'PRICE';
	}
	
	module.exports = {
		add: add,
		addPrivacyToAllDomains: addPrivacyToAllDomains,
		businessPlan: businessPlan,
		customDesignItem: customDesignItem,
		domainMapping: domainMapping,
		domainPrivacyProtection: domainPrivacyProtection,
		domainRedemption: domainRedemption,
		domainRegistration: domainRegistration,
		findFreeTrial: findFreeTrial,
		getAll: getAll,
		getAllSorted: getAllSorted,
		getDomainMappings: getDomainMappings,
		getDomainPriceRule: getDomainPriceRule,
		getDomainRegistrations: getDomainRegistrations,
		getDomainRegistrationsWithoutPrivacy: getDomainRegistrationsWithoutPrivacy,
		getDomainRegistrationTld: getDomainRegistrationTld,
		getGoogleApps: getGoogleApps,
		getIncludedDomain: getIncludedDomain,
		getItemForPlan: getItemForPlan,
		getRenewalItemFromCartItem: getRenewalItemFromCartItem,
		getRenewalItemFromProduct: getRenewalItemFromProduct,
		getRenewalItems: getRenewalItems,
		getSiteRedirects: getSiteRedirects,
		googleApps: googleApps,
		googleAppsExtraLicenses: googleAppsExtraLicenses,
		isNextDomainFree: isNextDomainFree,
		isDomainBeingUsedForPlan: isDomainBeingUsedForPlan,
		hasDomainCredit: hasDomainCredit,
		hasDomainInCart: hasDomainInCart,
		hasDomainMapping: hasDomainMapping,
		hasDomainRegistration: hasDomainRegistration,
		hasFreeTrial: hasFreeTrial,
		hasNlTld: hasNlTld,
		hasOnlyFreeTrial: hasOnlyFreeTrial,
		hasOnlyProductsOf: hasOnlyProductsOf,
		hasOnlyRenewalItems: hasOnlyRenewalItems,
		hasPlan: hasPlan,
		hasPremiumPlan: hasPremiumPlan,
		hasProduct: hasProduct,
		hasRenewableSubscription: hasRenewableSubscription,
		hasRenewalItem: hasRenewalItem,
		noAdsItem: noAdsItem,
		planItem: planItem,
		premiumPlan: premiumPlan,
		remove: remove,
		removeItemAndDependencies: removeItemAndDependencies,
		removePrivacyFromAllDomains: removePrivacyFromAllDomains,
		siteRedirect: siteRedirect,
		shouldBundleDomainWithPlan: shouldBundleDomainWithPlan,
		spaceUpgradeItem: spaceUpgradeItem,
		themeItem: themeItem,
		unlimitedSpaceItem: unlimitedSpaceItem,
		unlimitedThemesItem: unlimitedThemesItem,
		videoPressItem: videoPressItem
	};

/***/ },
/* 445 */
/***/ function(module, exports) {

	module.exports = require("react-addons-update");

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEvery = __webpack_require__(447),
	    baseEvery = __webpack_require__(448),
	    baseIteratee = __webpack_require__(98),
	    isArray = __webpack_require__(36),
	    isIterateeCall = __webpack_require__(16);
	
	/**
	 * Checks if `predicate` returns truthy for **all** elements of `collection`.
	 * Iteration is stopped once `predicate` returns falsey. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.
	 * @example
	 *
	 * _.every([true, 1, null, 'yes'], Boolean);
	 * // => false
	 *
	 * var users = [
	 *   { 'user': 'barney', 'active': false },
	 *   { 'user': 'fred',   'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.every(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.every(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.every(users, 'active');
	 * // => false
	 */
	function every(collection, predicate, guard) {
	  var func = isArray(collection) ? arrayEvery : baseEvery;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = every;


/***/ },
/* 447 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.every` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.
	 */
	function arrayEvery(array, predicate) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (!predicate(array[index], index, array)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = arrayEvery;


/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(91);
	
	/**
	 * The base implementation of `_.every` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`
	 */
	function baseEvery(collection, predicate) {
	  var result = true;
	  baseEach(collection, function(value, index, collection) {
	    result = !!predicate(value, index, collection);
	    return result;
	  });
	  return result;
	}
	
	module.exports = baseEvery;


/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	var createFlow = __webpack_require__(450);
	
	/**
	 * Creates a function that returns the result of invoking the given functions
	 * with the `this` binding of the created function, where each successive
	 * invocation is supplied the return value of the previous.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @param {...(Function|Function[])} [funcs] Functions to invoke.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var addSquare = _.flow(_.add, square);
	 * addSquare(1, 2);
	 * // => 9
	 */
	var flow = createFlow();
	
	module.exports = flow;


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	var LodashWrapper = __webpack_require__(376),
	    baseFlatten = __webpack_require__(243),
	    getData = __webpack_require__(372),
	    getFuncName = __webpack_require__(373),
	    isArray = __webpack_require__(36),
	    isLaziable = __webpack_require__(369),
	    rest = __webpack_require__(24);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var CURRY_FLAG = 8,
	    PARTIAL_FLAG = 32,
	    ARY_FLAG = 128,
	    REARG_FLAG = 256;
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a `_.flow` or `_.flowRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new flow function.
	 */
	function createFlow(fromRight) {
	  return rest(function(funcs) {
	    funcs = baseFlatten(funcs, 1);
	
	    var length = funcs.length,
	        index = length,
	        prereq = LodashWrapper.prototype.thru;
	
	    if (fromRight) {
	      funcs.reverse();
	    }
	    while (index--) {
	      var func = funcs[index];
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	        var wrapper = new LodashWrapper([], true);
	      }
	    }
	    index = wrapper ? index : length;
	    while (++index < length) {
	      func = funcs[index];
	
	      var funcName = getFuncName(func),
	          data = funcName == 'wrapper' ? getData(func) : undefined;
	
	      if (data && isLaziable(data[0]) &&
	            data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
	            !data[4].length && data[9] == 1
	          ) {
	        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	      } else {
	        wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);
	      }
	    }
	    return function() {
	      var args = arguments,
	          value = args[0];
	
	      if (wrapper && args.length == 1 &&
	          isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	        return wrapper.plant(value).value();
	      }
	      var index = 0,
	          result = length ? funcs[index].apply(this, args) : value;
	
	      while (++index < length) {
	        result = funcs[index].call(this, result);
	      }
	      return result;
	    };
	  });
	}
	
	module.exports = createFlow;


/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(318),
	    baseFilter = __webpack_require__(319),
	    baseIteratee = __webpack_require__(98),
	    isArray = __webpack_require__(36);
	
	/**
	 * The opposite of `_.filter`; this method returns the elements of `collection`
	 * that `predicate` does **not** return truthy for.
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': false },
	 *   { 'user': 'fred',   'age': 40, 'active': true }
	 * ];
	 *
	 * _.reject(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.reject(users, { 'age': 40, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.reject(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.reject(users, 'active');
	 * // => objects for ['barney']
	 */
	function reject(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  predicate = baseIteratee(predicate, 3);
	  return func(collection, function(value, index, collection) {
	    return !predicate(value, index, collection);
	  });
	}
	
	module.exports = reject;


/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	var drop = __webpack_require__(453);
	
	/**
	 * Gets all but the first element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {Array} Returns the slice of `array`.
	 * @example
	 *
	 * _.tail([1, 2, 3]);
	 * // => [2, 3]
	 */
	function tail(array) {
	  return drop(array, 1);
	}
	
	module.exports = tail;


/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(164),
	    toInteger = __webpack_require__(26);
	
	/**
	 * Creates a slice of `array` with `n` elements dropped from the beginning.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to query.
	 * @param {number} [n=1] The number of elements to drop.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
	 * @returns {Array} Returns the slice of `array`.
	 * @example
	 *
	 * _.drop([1, 2, 3]);
	 * // => [2, 3]
	 *
	 * _.drop([1, 2, 3], 2);
	 * // => [3]
	 *
	 * _.drop([1, 2, 3], 5);
	 * // => []
	 *
	 * _.drop([1, 2, 3], 0);
	 * // => [1, 2, 3]
	 */
	function drop(array, n, guard) {
	  var length = array ? array.length : 0;
	  if (!length) {
	    return [];
	  }
	  n = (guard || n === undefined) ? 1 : toInteger(n);
	  return baseSlice(array, n < 0 ? 0 : n, length);
	}
	
	module.exports = drop;


/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	var arraySome = __webpack_require__(135),
	    baseIteratee = __webpack_require__(98),
	    baseSome = __webpack_require__(455),
	    isArray = __webpack_require__(36),
	    isIterateeCall = __webpack_require__(16);
	
	/**
	 * Checks if `predicate` returns truthy for **any** element of `collection`.
	 * Iteration is stopped once `predicate` returns truthy. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
	 * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
	 * @example
	 *
	 * _.some([null, 0, 'yes', false], Boolean);
	 * // => true
	 *
	 * var users = [
	 *   { 'user': 'barney', 'active': true },
	 *   { 'user': 'fred',   'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.some(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.some(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.some(users, 'active');
	 * // => true
	 */
	function some(collection, predicate, guard) {
	  var func = isArray(collection) ? arraySome : baseSome;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = some;


/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(91);
	
	/**
	 * The base implementation of `_.some` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
	 */
	function baseSome(collection, predicate) {
	  var result;
	
	  baseEach(collection, function(value, index, collection) {
	    result = predicate(value, index, collection);
	    return !result;
	  });
	  return !!result;
	}
	
	module.exports = baseSome;


/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	var baseUniq = __webpack_require__(457);
	
	/**
	 * Creates a duplicate-free version of an array, using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons, in which only the first occurrence of each element
	 * is kept.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @returns {Array} Returns the new duplicate free array.
	 * @example
	 *
	 * _.uniq([2, 1, 2]);
	 * // => [2, 1]
	 */
	function uniq(array) {
	  return (array && array.length)
	    ? baseUniq(array)
	    : [];
	}
	
	module.exports = uniq;


/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(235),
	    arrayIncludes = __webpack_require__(237),
	    arrayIncludesWith = __webpack_require__(240),
	    cacheHas = __webpack_require__(242),
	    createSet = __webpack_require__(458),
	    setToArray = __webpack_require__(140);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      length = array.length,
	      isCommon = true,
	      result = [],
	      seen = result;
	
	  if (comparator) {
	    isCommon = false;
	    includes = arrayIncludesWith;
	  }
	  else if (length >= LARGE_ARRAY_SIZE) {
	    var set = iteratee ? null : createSet(array);
	    if (set) {
	      return setToArray(set);
	    }
	    isCommon = false;
	    includes = cacheHas;
	    seen = new SetCache;
	  }
	  else {
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    if (isCommon && computed === computed) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (!includes(seen, computed, comparator)) {
	      if (seen !== result) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseUniq;


/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	var Set = __webpack_require__(143),
	    noop = __webpack_require__(175);
	
	/**
	 * Creates a set of `values`.
	 *
	 * @private
	 * @param {Array} values The values to add to the set.
	 * @returns {Object} Returns the new set.
	 */
	var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {
	  return new Set(values);
	};
	
	module.exports = createSet;


/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(243);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array ? array.length : 0;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _keys = __webpack_require__(404);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var assign = __webpack_require__(10),
	    difference = __webpack_require__(461),
	    isEmpty = __webpack_require__(462),
	    pick = __webpack_require__(418);
	
	/**
	 * Internal dependencies
	 */
	var schema = __webpack_require__(463),
	    PLAN_PERSONAL = __webpack_require__(464).PLAN_PERSONAL;
	
	var productDependencies = {
		domain: {
			domain_redemption: true,
			gapps: true,
			gapps_extra_license: true,
			gapps_unlimited: true,
			private_whois: true
		},
		domain_redemption: {
			domain: true
		}
	};
	
	function assertValidProduct(product) {
		var missingAttributes = difference(schema.required, (0, _keys2.default)(product));
	
		if (!isEmpty(missingAttributes)) {
			throw new Error('Missing required attributes for ProductValue: [' + missingAttributes.join(', ') + ']');
		}
	}
	
	function formatProduct(product) {
		return assign({}, product, {
			product_slug: product.product_slug || product.productSlug,
			product_type: product.product_type || product.productType,
			is_domain_registration: product.is_domain_registration !== undefined ? product.is_domain_registration : product.isDomainRegistration,
			free_trial: product.free_trial || product.freeTrial
		});
	}
	
	function isChargeback(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'chargeback';
	}
	
	function isFreePlan(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'free_plan';
	}
	
	function isFreeJetpackPlan(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'jetpack_free';
	}
	
	function isFreeTrial(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return Boolean(product.free_trial);
	}
	
	function isPersonal(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === PLAN_PERSONAL;
	}
	
	function isPremium(product) {
		var premiumProducts = ['value_bundle', 'jetpack_premium'];
	
		product = formatProduct(product);
		assertValidProduct(product);
	
		return premiumProducts.indexOf(product.product_slug) >= 0;
	}
	
	function isBusiness(product) {
		var businessProducts = ['business-bundle', 'jetpack_business'];
	
		product = formatProduct(product);
		assertValidProduct(product);
	
		return businessProducts.indexOf(product.product_slug) >= 0;
	}
	
	function isEnterprise(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'wpcom-enterprise';
	}
	
	function isJetpackPlan(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'jetpack' === product.product_type;
	}
	
	function isJetpackBusiness(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return isBusiness(product) && isJetpackPlan(product);
	}
	
	function isJetpackPremium(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return isPremium(product) && isJetpackPlan(product);
	}
	
	function isJpphpBundle(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'host-bundle';
	}
	
	function isPlan(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return isPersonal(product) || isPremium(product) || isBusiness(product) || isEnterprise(product) || isJpphpBundle(product);
	}
	
	function isPrivateRegistration(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'private_whois';
	}
	
	function isDomainProduct(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return isDomainMapping(product) || isDomainRegistration(product) || isPrivateRegistration(product);
	}
	
	function isDomainRedemption(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'domain_redemption';
	}
	
	function isDomainRegistration(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return !!product.is_domain_registration;
	}
	
	function isDomainMapping(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'domain_map';
	}
	
	function isSiteRedirect(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return product.product_slug === 'offsite_redirect';
	}
	
	function isCredits(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'wordpress-com-credits' === product.product_slug;
	}
	
	function getDomainProductRanking(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		if (isDomainRegistration(product)) {
			return 0;
		} else if (isDomainMapping(product)) {
			return 1;
		} else if (isPrivateRegistration(product)) {
			return 2;
		}
	}
	
	function isDependentProduct(product, dependentProduct) {
		var slug,
		    dependentSlug,
		    isPlansOnlyDependent = false;
	
		product = formatProduct(product);
		assertValidProduct(product);
	
		slug = isDomainRegistration(product) ? 'domain' : product.product_slug;
		dependentSlug = isDomainRegistration(dependentProduct) ? 'domain' : dependentProduct.product_slug;
	
		if (product.extra && dependentProduct.extra && (product.extra.withPlansOnly === 'yes' || dependentProduct.extra.withPlansOnly === 'yes')) {
			isPlansOnlyDependent = isPlan(product) && (isDomainRegistration(dependentProduct) || isDomainMapping(dependentProduct));
		}
	
		return isPlansOnlyDependent || productDependencies[slug] && productDependencies[slug][dependentSlug] && product.meta === dependentProduct.meta;
	}
	
	function isGoogleApps(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'gapps' === product.product_slug || 'gapps_unlimited' === product.product_slug || 'gapps_extra_license' === product.product_slug;
	}
	
	function isTheme(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'premium_theme' === product.product_slug;
	}
	
	function isCustomDesign(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'custom-design' === product.product_slug;
	}
	
	function isNoAds(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'no-adverts/no-adverts.php' === product.product_slug;
	}
	
	function isVideoPress(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'videopress' === product.product_slug;
	}
	
	function isUnlimitedSpace(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'unlimited_space' === product.product_slug;
	}
	
	function isUnlimitedThemes(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return 'unlimited_themes' === product.product_slug;
	}
	
	function whitelistAttributes(product) {
		return pick(product, (0, _keys2.default)(schema.properties));
	}
	
	function isSpaceUpgrade(product) {
		product = formatProduct(product);
		assertValidProduct(product);
	
		return '1gb_space_upgrade' === product.product_slug || '5gb_space_upgrade' === product.product_slug || '10gb_space_upgrade' === product.product_slug || '50gb_space_upgrade' === product.product_slug || '100gb_space_upgrade' === product.product_slug;
	}
	
	module.exports = {
		formatProduct: formatProduct,
		getDomainProductRanking: getDomainProductRanking,
		isBusiness: isBusiness,
		isChargeback: isChargeback,
		isCredits: isCredits,
		isCustomDesign: isCustomDesign,
		isDependentProduct: isDependentProduct,
		isDomainMapping: isDomainMapping,
		isDomainProduct: isDomainProduct,
		isDomainRedemption: isDomainRedemption,
		isDomainRegistration: isDomainRegistration,
		isEnterprise: isEnterprise,
		isFreeJetpackPlan: isFreeJetpackPlan,
		isFreePlan: isFreePlan,
		isPersonal: isPersonal,
		isFreeTrial: isFreeTrial,
		isGoogleApps: isGoogleApps,
		isJetpackBusiness: isJetpackBusiness,
		isJetpackPlan: isJetpackPlan,
		isJetpackPremium: isJetpackPremium,
		isJpphpBundle: isJpphpBundle,
		isNoAds: isNoAds,
		isPlan: isPlan,
		isPremium: isPremium,
		isPrivateRegistration: isPrivateRegistration,
		isSiteRedirect: isSiteRedirect,
		isSpaceUpgrade: isSpaceUpgrade,
		isTheme: isTheme,
		isUnlimitedSpace: isUnlimitedSpace,
		isUnlimitedThemes: isUnlimitedThemes,
		isVideoPress: isVideoPress,
		whitelistAttributes: whitelistAttributes
	};

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(234),
	    baseFlatten = __webpack_require__(243),
	    isArrayLikeObject = __webpack_require__(34),
	    rest = __webpack_require__(24);
	
	/**
	 * Creates an array of unique `array` values not included in the other
	 * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @example
	 *
	 * _.difference([3, 2, 1], [4, 2]);
	 * // => [3, 1]
	 */
	var difference = rest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, true))
	    : [];
	});
	
	module.exports = difference;


/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(33),
	    isArray = __webpack_require__(36),
	    isArrayLike = __webpack_require__(17),
	    isFunction = __webpack_require__(20),
	    isString = __webpack_require__(37);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if `value` is empty. A value is considered empty unless it's an
	 * `arguments` object, array, string, or jQuery-like collection with a length
	 * greater than `0` or an object with own enumerable properties.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {Array|Object|string} value The value to inspect.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (isArrayLike(value) &&
	      (isArray(value) || isString(value) ||
	        isFunction(value.splice) || isArguments(value))) {
	    return !value.length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = isEmpty;


/***/ },
/* 463 */
/***/ function(module, exports) {

	module.exports = {
		"title": "ProductValue",
		"type": "object",
		"required": [
			"product_slug"
		],
		"additionalProperties": true,
		"properties": {
			"product_id": {
				"type": "number"
			},
			"product_name": {
				"type": "string"
			},
			"product_slug": {
				"type": "string"
			},
			"is_domain_registration": {
				"type": "boolean"
			}
		}
	};

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.getPlanObject = exports.featuresList = exports.plansList = exports.WORDADS_INSTANT = exports.FEATURE_VIDEO_UPLOADS = exports.FEATURE_UNLIMITED_STORAGE = exports.FEATURE_UNLIMITED_PREMIUM_THEMES = exports.FEATURE_NO_ADS = exports.FEATURE_LIVE_CHAT_SUPPORT = exports.FEATURE_GOOGLE_AD_CREDITS = exports.FEATURE_GOOGLE_ANALYTICS = exports.FEATURE_CUSTOM_DOMAIN = exports.FEATURE_CUSTOM_DESIGN = exports.PLAN_JETPACK_BUSINESS = exports.PLAN_JETPACK_PREMIUM = exports.PLAN_JETPACK_FREE = exports.PLAN_FREE = exports.PLAN_PERSONAL = exports.PLAN_PREMIUM = exports.PLAN_BUSINESS = undefined;
	
	var _keys = __webpack_require__(404);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _plansList, _featuresList; /** @ssr-ready **/
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// plans constants
	var PLAN_BUSINESS = exports.PLAN_BUSINESS = 'business-bundle';
	var PLAN_PREMIUM = exports.PLAN_PREMIUM = 'value_bundle';
	var PLAN_PERSONAL = exports.PLAN_PERSONAL = 'personal-bundle';
	var PLAN_FREE = exports.PLAN_FREE = 'free_plan';
	var PLAN_JETPACK_FREE = exports.PLAN_JETPACK_FREE = 'jetpack_free';
	var PLAN_JETPACK_PREMIUM = exports.PLAN_JETPACK_PREMIUM = 'jetpack_premium';
	var PLAN_JETPACK_BUSINESS = exports.PLAN_JETPACK_BUSINESS = 'jetpack_business';
	
	// features constants
	var FEATURE_CUSTOM_DESIGN = exports.FEATURE_CUSTOM_DESIGN = 'custom-design';
	var FEATURE_CUSTOM_DOMAIN = exports.FEATURE_CUSTOM_DOMAIN = 'custom-domain';
	var FEATURE_GOOGLE_ANALYTICS = exports.FEATURE_GOOGLE_ANALYTICS = 'google-analytics';
	var FEATURE_GOOGLE_AD_CREDITS = exports.FEATURE_GOOGLE_AD_CREDITS = 'google-ad-credits';
	var FEATURE_LIVE_CHAT_SUPPORT = exports.FEATURE_LIVE_CHAT_SUPPORT = 'live-chat-support';
	var FEATURE_NO_ADS = exports.FEATURE_NO_ADS = 'no-adverts';
	var FEATURE_UNLIMITED_PREMIUM_THEMES = exports.FEATURE_UNLIMITED_PREMIUM_THEMES = 'premium-themes';
	var FEATURE_UNLIMITED_STORAGE = exports.FEATURE_UNLIMITED_STORAGE = 'unlimited-storage';
	var FEATURE_VIDEO_UPLOADS = exports.FEATURE_VIDEO_UPLOADS = 'video-upload';
	var WORDADS_INSTANT = exports.WORDADS_INSTANT = 'wordads-instant';
	
	var plansList = exports.plansList = (_plansList = {}, (0, _defineProperty3.default)(_plansList, PLAN_FREE, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Free');
		},
		getPriceTitle: function getPriceTitle() {
			return _i18nCalypso2.default.translate('Free for life');
		},
		getProductId: function getProductId() {
			return 1;
		},
		getDescription: function getDescription() {
			return _i18nCalypso2.default.translate('Get a free blog and be on your way to publishing your first post in less than five minutes.');
		}
	}), (0, _defineProperty3.default)(_plansList, PLAN_PREMIUM, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Premium');
		},
		getPriceTitle: function getPriceTitle() {
			return _i18nCalypso2.default.translate('$99 per year');
		},
		getProductId: function getProductId() {
			return 1003;
		},
		getDescription: function getDescription() {
			return _i18nCalypso2.default.translate('Your own domain name, powerful customization options, lots of space for audio and video, and $100 advertising credit.');
		}
	}), (0, _defineProperty3.default)(_plansList, PLAN_BUSINESS, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Business');
		},
		getPriceTitle: function getPriceTitle() {
			return _i18nCalypso2.default.translate('$299 per year');
		},
		getProductId: function getProductId() {
			return 1008;
		},
		getDescription: function getDescription() {
			return _i18nCalypso2.default.translate('Everything included with Premium, as well as live chat support, unlimited access to premium themes, and Google Analytics.');
		}
	}), (0, _defineProperty3.default)(_plansList, PLAN_JETPACK_FREE, {}), (0, _defineProperty3.default)(_plansList, PLAN_JETPACK_BUSINESS, {}), _plansList);
	
	var allPaidPlans = [PLAN_PREMIUM, PLAN_BUSINESS];
	
	var featuresList = exports.featuresList = (_featuresList = {}, (0, _defineProperty3.default)(_featuresList, FEATURE_GOOGLE_ANALYTICS, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Google Analytics');
		},
		plans: [PLAN_BUSINESS]
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_UNLIMITED_STORAGE, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Unlimited Storage');
		},
		plans: [PLAN_BUSINESS]
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_CUSTOM_DOMAIN, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Custom Domain');
		},
		plans: allPaidPlans
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_UNLIMITED_PREMIUM_THEMES, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Unlimited Premium Themes');
		},
		plans: [PLAN_BUSINESS]
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_VIDEO_UPLOADS, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('VideoPress');
		},
		plans: allPaidPlans
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_CUSTOM_DESIGN, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Custom Design');
		},
		plans: allPaidPlans
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_NO_ADS, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('No Ads');
		},
		plans: allPaidPlans
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_LIVE_CHAT_SUPPORT, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Live Chat Support');
		},
		plans: [PLAN_BUSINESS]
	}), (0, _defineProperty3.default)(_featuresList, FEATURE_GOOGLE_AD_CREDITS, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Advertising Credit');
		},
		getDescription: function getDescription() {
			return _i18nCalypso2.default.translate('$100 Google AdWords credit after spending the first $25. Offer valid in US and Canada.');
		},
		plans: allPaidPlans
	}), (0, _defineProperty3.default)(_featuresList, WORDADS_INSTANT, {
		getTitle: function getTitle() {
			return _i18nCalypso2.default.translate('Monetize Your Site');
		},
		getDescription: function getDescription() {
			return _i18nCalypso2.default.translate('Add advertising to your site through our WordAds program and get paid.');
		},
		plans: allPaidPlans
	}), _featuresList);
	
	var getPlanObject = exports.getPlanObject = function getPlanObject(planName) {
		var plan = plansList[planName];
		var objectPlan = {};
		(0, _keys2.default)(plan).forEach(function (key) {
			var objectKey = key.substr(3).charAt(0).toLowerCase() + key.slice(4);
			objectPlan[objectKey] = plan[key]();
		});
	
		return objectPlan;
	};

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _difference = __webpack_require__(461);
	
	var _difference2 = _interopRequireDefault(_difference);
	
	var _flatten = __webpack_require__(459);
	
	var _flatten2 = _interopRequireDefault(_flatten);
	
	var _groupBy = __webpack_require__(466);
	
	var _groupBy2 = _interopRequireDefault(_groupBy);
	
	var _toPairs = __webpack_require__(148);
	
	var _toPairs2 = _interopRequireDefault(_toPairs);
	
	var _sortBy = __webpack_require__(470);
	
	var _sortBy2 = _interopRequireDefault(_sortBy);
	
	var _purchases = __webpack_require__(475);
	
	var _productsValues = __webpack_require__(460);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Sorts all products in the following order:
	 *
	 * 1. Plan
	 * 2. Domain Cart Items. Included in plans come first.
	 *   a. Domain Registration
	 *   b. Domain Mapping
	 *   c. Privacy Protection
	 * 3. Other Cart Items
	 * 4. Credits Cart Item
	 *
	 * @param {Object[]} products
	 *
	 * @returns {Object[]} the sorted list of items in the shopping cart
	 */
	
	/**
	 * Internal dependencies
	 */
	function sortProducts(products) {
		var planItems, includedItems, domainItems, creditItems, otherItems;
	
		planItems = products.filter(_productsValues.isPlan);
	
		includedItems = products.filter(_purchases.isIncludedWithPlan);
	
		domainItems = (0, _difference2.default)(products, includedItems);
		domainItems = domainItems.filter(_productsValues.isDomainProduct);
		domainItems = (0, _toPairs2.default)((0, _groupBy2.default)(domainItems, 'meta'));
		domainItems = (0, _sortBy2.default)(domainItems, function (pair) {
			if (pair[1][0] && pair[1][0].cost === 0) {
				return -1;
			}
			return pair[0];
		});
		domainItems = domainItems.map(function (pair) {
			return (0, _sortBy2.default)(pair[1], _productsValues.getDomainProductRanking);
		});
		domainItems = (0, _flatten2.default)(domainItems);
	
		creditItems = products.filter(_productsValues.isCredits);
	
		otherItems = (0, _difference2.default)(products, planItems, domainItems, includedItems, creditItems);
	
		return planItems.concat(includedItems).concat(domainItems).concat(otherItems).concat(creditItems);
	} /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	exports.default = sortProducts;
	module.exports = exports['default'];

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	var createAggregator = __webpack_require__(467);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an object composed of keys generated from the results of running
	 * each element of `collection` through `iteratee`. The corresponding value
	 * of each key is an array of elements responsible for generating the key.
	 * The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.
	 * @returns {Object} Returns the composed aggregate object.
	 * @example
	 *
	 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	 * // => { '4': [4.2], '6': [6.1, 6.3] }
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.groupBy(['one', 'two', 'three'], 'length');
	 * // => { '3': ['one', 'two'], '5': ['three'] }
	 */
	var groupBy = createAggregator(function(result, value, key) {
	  if (hasOwnProperty.call(result, key)) {
	    result[key].push(value);
	  } else {
	    result[key] = [value];
	  }
	});
	
	module.exports = groupBy;


/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	var arrayAggregator = __webpack_require__(468),
	    baseAggregator = __webpack_require__(469),
	    baseIteratee = __webpack_require__(98),
	    isArray = __webpack_require__(36);
	
	/**
	 * Creates a function like `_.groupBy`.
	 *
	 * @private
	 * @param {Function} setter The function to set accumulator values.
	 * @param {Function} [initializer] The accumulator object initializer.
	 * @returns {Function} Returns the new aggregator function.
	 */
	function createAggregator(setter, initializer) {
	  return function(collection, iteratee) {
	    var func = isArray(collection) ? arrayAggregator : baseAggregator,
	        accumulator = initializer ? initializer() : {};
	
	    return func(collection, setter, baseIteratee(iteratee), accumulator);
	  };
	}
	
	module.exports = createAggregator;


/***/ },
/* 468 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `baseAggregator` for arrays.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform keys.
	 * @param {Object} accumulator The initial aggregated object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function arrayAggregator(array, setter, iteratee, accumulator) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var value = array[index];
	    setter(accumulator, value, iteratee(value), array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayAggregator;


/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(91);
	
	/**
	 * Aggregates elements of `collection` on `accumulator` with keys transformed
	 * by `iteratee` and values set by `setter`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform keys.
	 * @param {Object} accumulator The initial aggregated object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function baseAggregator(collection, setter, iteratee, accumulator) {
	  baseEach(collection, function(value, key, collection) {
	    setter(accumulator, value, iteratee(value), collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseAggregator;


/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(243),
	    baseOrderBy = __webpack_require__(471),
	    isIterateeCall = __webpack_require__(16),
	    rest = __webpack_require__(24);
	
	/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection through each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]
	 *  The iteratees to sort by, specified individually or in arrays.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 42 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, function(o) { return o.user; });
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]
	 *
	 * _.sortBy(users, 'user', function(o) {
	 *   return Math.floor(o.age / 10);
	 * });
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
	 */
	var sortBy = rest(function(collection, iteratees) {
	  if (collection == null) {
	    return [];
	  }
	  var length = iteratees.length;
	  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	    iteratees = [];
	  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	    iteratees.length = 1;
	  }
	  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	});
	
	module.exports = sortBy;


/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(150),
	    baseIteratee = __webpack_require__(98),
	    baseMap = __webpack_require__(322),
	    baseSortBy = __webpack_require__(472),
	    compareMultiple = __webpack_require__(473);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1,
	      toIteratee = baseIteratee;
	
	  iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {
	    return toIteratee(iteratee);
	  });
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ },
/* 472 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define
	 * the sort order of `array` and replaces criteria objects with their
	 * corresponding values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(474);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://code.google.com/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ },
/* 474 */
/***/ function(module, exports) {

	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsNull = value === null,
	        valIsUndef = value === undefined,
	        valIsReflexive = value === value;
	
	    var othIsNull = other === null,
	        othIsUndef = other === undefined,
	        othIsReflexive = other === other;
	
	    if ((value > other && !othIsNull) || !valIsReflexive ||
	        (valIsNull && !othIsUndef && othIsReflexive) ||
	        (valIsUndef && othIsReflexive)) {
	      return 1;
	    }
	    if ((value < other && !valIsNull) || !othIsReflexive ||
	        (othIsNull && !valIsUndef && valIsReflexive) ||
	        (othIsUndef && valIsReflexive)) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.showCreditCardExpiringWarning = exports.shouldFetchUserPurchases = exports.purchaseType = exports.paymentLogoType = exports.isSubscription = exports.isRenewing = exports.isRenewable = exports.isRemovable = exports.isRefundable = exports.isRedeemable = exports.isOneTimePurchase = exports.isIncludedWithPlan = exports.isExpiring = exports.isExpired = exports.isPaidWithPaypal = exports.isPaidWithCreditCard = exports.isCancelable = exports.hasPrivateRegistration = exports.hasPaymentMethod = exports.hasIncludedDomain = exports.getSubscriptionEndDate = exports.getPurchasesBySite = exports.getName = exports.getIncludedDomain = exports.creditCardExpiresBeforeSubscription = undefined;
	
	var _find = __webpack_require__(90);
	
	var _find2 = _interopRequireDefault(_find);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _moment = __webpack_require__(479);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _productsValues = __webpack_require__(460);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getIncludedDomain(purchase) {
		return purchase.includedDomain;
	}
	
	/**
	 * Returns an array of sites objects, each of which contains an array of purchases.
	 *
	 * @param {array} purchases An array of purchase objects.
	 * @param {array} sites An array of site objects
	 * @return {array} An array of sites with purchases attached.
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	function getPurchasesBySite(purchases, sites) {
		return purchases.reduce(function (result, currentValue) {
			var site = (0, _find2.default)(result, { id: currentValue.siteId });
			if (site) {
				site.purchases = site.purchases.concat(currentValue);
			} else {
				var siteObject = (0, _find2.default)(sites, { ID: currentValue.siteId });
	
				result = result.concat({
					domain: currentValue.domain,
					id: currentValue.siteId,
					name: currentValue.siteName,
					/* if the purchase is attached to a deleted site,
	     * there will be no site with this ID in `sites`, so
	     * we fall back on the domain. */
					slug: siteObject ? siteObject.slug : currentValue.domain,
					title: currentValue.siteName || currentValue.domain || '',
					purchases: [currentValue]
				});
			}
	
			return result;
		}, []).sort(function (a, b) {
			return a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1;
		});
	}
	
	function getName(purchase) {
		if ((0, _productsValues.isDomainRegistration)(purchase)) {
			return purchase.meta;
		}
	
		return purchase.productName;
	}
	
	function getSubscriptionEndDate(purchase) {
		return purchase.expiryMoment.format('LL');
	}
	
	function hasIncludedDomain(purchase) {
		return Boolean(purchase.includedDomain);
	}
	
	function hasPaymentMethod(purchase) {
		return isPaidWithPaypal(purchase) || isPaidWithCreditCard(purchase);
	}
	
	function hasPrivateRegistration(purchase) {
		return purchase.hasPrivateRegistration;
	}
	
	/**
	 * Checks if a purchase can be cancelled.
	 * Returns true for purchases that aren't expired
	 * Also returns true for purchases whether or not they are after the refund period.
	 * Purchases included with a plan can't be cancelled.
	 *
	 * @param {Object} purchase - the purchase with which we are concerned
	 * @return {boolean} whether the purchase is cancelable
	 */
	function isCancelable(purchase) {
		if (isIncludedWithPlan(purchase)) {
			return false;
		}
	
		if (isExpired(purchase)) {
			return false;
		}
	
		if (isRefundable(purchase)) {
			return true;
		}
	
		return purchase.canDisableAutoRenew;
	}
	
	function isExpired(purchase) {
		return 'expired' === purchase.expiryStatus;
	}
	
	function isExpiring(purchase) {
		return (0, _includes2.default)(['cardExpired', 'cardExpiring', 'manualRenew', 'expiring'], purchase.expiryStatus);
	}
	
	function isIncludedWithPlan(purchase) {
		return 'included' === purchase.expiryStatus;
	}
	
	function isOneTimePurchase(purchase) {
		return 'oneTimePurchase' === purchase.expiryStatus;
	}
	
	function isPaidWithPaypal(purchase) {
		return 'paypal' === purchase.payment.type;
	}
	
	function isRedeemable(purchase) {
		return purchase.isRedeemable;
	}
	
	/**
	 * Checks if a purchase can be canceled and refunded.
	 * Purchases usually can be refunded up to 30 days after purchase.
	 * Domains and domain mappings can be refunded up to 48 hours.
	 * Purchases included with plan can't be refunded.
	 *
	 * @param {Object} purchase - the purchase with which we are concerned
	 * @return {boolean} if the purchase is refundable
	 */
	function isRefundable(purchase) {
		return purchase.isRefundable;
	}
	
	/**
	 * Checks whether the specified purchase can be removed from a user account.
	 * Purchases included with a plan can't be removed.
	 *
	 * @param {Object} purchase - the purchase with which we are concerned
	 * @return {boolean} true if the purchase can be removed, false otherwise
	 */
	function isRemovable(purchase) {
		if (isIncludedWithPlan(purchase)) {
			return false;
		}
	
		return isExpiring(purchase) || isExpired(purchase);
	}
	
	function isRenewable(purchase) {
		return purchase.isRenewable;
	}
	
	function isRenewing(purchase) {
		return (0, _includes2.default)(['active', 'autoRenewing'], purchase.expiryStatus);
	}
	
	function isSubscription(purchase) {
		var nonSubscriptionFunctions = [_productsValues.isDomainRegistration, isOneTimePurchase];
	
		return !nonSubscriptionFunctions.some(function (fn) {
			return fn(purchase);
		});
	}
	
	function isPaidWithCreditCard(purchase) {
		return 'credit_card' === purchase.payment.type && hasCreditCardData(purchase);
	}
	
	function hasCreditCardData(purchase) {
		return Boolean(purchase.payment.creditCard.expiryMoment);
	}
	
	function creditCardExpiresBeforeSubscription(purchase) {
		return isPaidWithCreditCard(purchase) && hasCreditCardData(purchase) && purchase.payment.creditCard.expiryMoment.diff(purchase.expiryMoment, 'months') < 0;
	}
	
	function monthsUntilCardExpires(purchase) {
		return purchase.payment.creditCard.expiryMoment.diff((0, _moment2.default)(), 'months');
	}
	
	function paymentLogoType(purchase) {
		if (isPaidWithCreditCard(purchase)) {
			return purchase.payment.creditCard.type;
		}
	
		if (isPaidWithPaypal(purchase)) {
			return 'paypal';
		}
	
		return null;
	}
	
	function purchaseType(purchase) {
		if ((0, _productsValues.isTheme)(purchase)) {
			return _i18nCalypso2.default.translate('Premium Theme');
		}
	
		if ((0, _productsValues.isPlan)(purchase)) {
			return _i18nCalypso2.default.translate('Site Plan');
		}
	
		if ((0, _productsValues.isDomainRegistration)(purchase)) {
			return purchase.productName;
		}
	
		if (purchase.meta) {
			return purchase.meta;
		}
	
		return null;
	}
	
	function shouldFetchUserPurchases(purchases) {
		return !purchases.hasLoadedUserPurchasesFromServer && !purchases.isFetchingUserPurchases;
	}
	
	function showCreditCardExpiringWarning(purchase) {
		return !isIncludedWithPlan(purchase) && isPaidWithCreditCard(purchase) && creditCardExpiresBeforeSubscription(purchase) && monthsUntilCardExpires(purchase) < 3;
	}
	
	exports.creditCardExpiresBeforeSubscription = creditCardExpiresBeforeSubscription;
	exports.getIncludedDomain = getIncludedDomain;
	exports.getName = getName;
	exports.getPurchasesBySite = getPurchasesBySite;
	exports.getSubscriptionEndDate = getSubscriptionEndDate;
	exports.hasIncludedDomain = hasIncludedDomain;
	exports.hasPaymentMethod = hasPaymentMethod;
	exports.hasPrivateRegistration = hasPrivateRegistration;
	exports.isCancelable = isCancelable;
	exports.isPaidWithCreditCard = isPaidWithCreditCard;
	exports.isPaidWithPaypal = isPaidWithPaypal;
	exports.isExpired = isExpired;
	exports.isExpiring = isExpiring;
	exports.isIncludedWithPlan = isIncludedWithPlan;
	exports.isOneTimePurchase = isOneTimePurchase;
	exports.isRedeemable = isRedeemable;
	exports.isRefundable = isRefundable;
	exports.isRemovable = isRemovable;
	exports.isRenewable = isRenewable;
	exports.isRenewing = isRenewing;
	exports.isSubscription = isSubscription;
	exports.paymentLogoType = paymentLogoType;
	exports.purchaseType = purchaseType;
	exports.shouldFetchUserPurchases = shouldFetchUserPurchases;
	exports.showCreditCardExpiringWarning = showCreditCardExpiringWarning;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(238),
	    isArrayLike = __webpack_require__(17),
	    isString = __webpack_require__(37),
	    toInteger = __webpack_require__(26),
	    values = __webpack_require__(477);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Checks if `value` is in `collection`. If `collection` is a string it's checked
	 * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * is used for equality comparisons. If `fromIndex` is negative, it's used as
	 * the offset from the end of `collection`.
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to search.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.
	 * @returns {boolean} Returns `true` if `value` is found, else `false`.
	 * @example
	 *
	 * _.includes([1, 2, 3], 1);
	 * // => true
	 *
	 * _.includes([1, 2, 3], 1, 2);
	 * // => false
	 *
	 * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
	 * // => true
	 *
	 * _.includes('pebbles', 'eb');
	 * // => true
	 */
	function includes(collection, value, fromIndex, guard) {
	  collection = isArrayLike(collection) ? collection : values(collection);
	  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	  var length = collection.length;
	  if (fromIndex < 0) {
	    fromIndex = nativeMax(length + fromIndex, 0);
	  }
	  return isString(collection)
	    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	}
	
	module.exports = includes;


/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(478),
	    keys = __webpack_require__(28);
	
	/**
	 * Creates an array of the own enumerable property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object ? baseValues(object, keys(object)) : [];
	}
	
	module.exports = values;


/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(150);
	
	/**
	 * The base implementation of `_.values` and `_.valuesIn` which creates an
	 * array of `object` property values corresponding to the property names
	 * of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the array of property values.
	 */
	function baseValues(object, props) {
	  return arrayMap(props, function(key) {
	    return object[key];
	  });
	}
	
	module.exports = baseValues;


/***/ },
/* 479 */
/***/ function(module, exports) {

	module.exports = require("moment");

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getSelectedSite = getSelectedSite;
	exports.getSelectedSiteId = getSelectedSiteId;
	exports.getSectionName = getSectionName;
	exports.isSectionLoading = isSectionLoading;
	exports.isSectionIsomorphic = isSectionIsomorphic;
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _selectors = __webpack_require__(481);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the site object for the currently selected site.
	 *
	 * @param  {Object}  state  Global state tree
	 * @return {?Object}        Selected site
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	function getSelectedSite(state) {
	  var siteId = getSelectedSiteId(state);
	  if (!siteId) {
	    return null;
	  }
	
	  return (0, _selectors.getSite)(state, siteId);
	}
	
	/**
	 * Returns the currently selected site ID.
	 *
	 * @param  {Object}  state Global state tree
	 * @return {?Number}       Selected site ID
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function getSelectedSiteId(state) {
	  return state.ui.selectedSiteId;
	}
	
	/**
	 * Returns the current section name.
	 *
	 * @param  {Object}  state Global state tree
	 * @return {?String}       Current section name
	 */
	function getSectionName(state) {
	  return (0, _get2.default)(state.ui.section, 'name', null);
	}
	
	/**
	 * Returns whether a section is loading.
	 *
	 * @param  {Object}  state Global state tree
	 * @return {Boolean}       Whether the section is loading
	 */
	function isSectionLoading(state) {
	  return state.ui.isLoading;
	}
	
	/**
	 * Returns true if the current section is isomorphic.
	 *
	 * @param  {Object}  state Global state tree
	 * @return {bool}    True if current section is isomorphic
	 *
	 * @see client/sections
	 */
	function isSectionIsomorphic(state) {
	  return (0, _get2.default)(state.ui.section, 'isomorphic', false);
	}

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getSiteCollisions = undefined;
	exports.getSite = getSite;
	exports.isSiteConflicting = isSiteConflicting;
	exports.isJetpackSite = isJetpackSite;
	exports.getSiteSlug = getSiteSlug;
	exports.isRequestingSites = isRequestingSites;
	exports.getSiteByUrl = getSiteByUrl;
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _filter = __webpack_require__(317);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _some = __webpack_require__(454);
	
	var _some2 = _interopRequireDefault(_some);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _find = __webpack_require__(90);
	
	var _find2 = _interopRequireDefault(_find);
	
	var _createSelector = __webpack_require__(482);
	
	var _createSelector2 = _interopRequireDefault(_createSelector);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns a site object by its ID.
	 *
	 * @param  {Object}  state  Global state tree
	 * @param  {Number}  siteId Site ID
	 * @return {?Object}        Site object
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	function getSite(state, siteId) {
	  return state.sites.items[siteId] || null;
	}
	
	/**
	 * Returns a filtered array of WordPress.com site IDs where a Jetpack site
	 * exists in the set of sites with the same URL.
	 *
	 * @param  {Object}   state Global state tree
	 * @return {Number[]}       WordPress.com site IDs with collisions
	 */
	
	
	/**
	 * Internal dependencies
	 */
	var getSiteCollisions = exports.getSiteCollisions = (0, _createSelector2.default)(function (state) {
	  return (0, _map2.default)((0, _filter2.default)(state.sites.items, function (wpcomSite) {
	    var wpcomSiteUrlSansProtocol = wpcomSite.URL.replace(/^https?:\/\//, '');
	    return !wpcomSite.jetpack && (0, _some2.default)(state.sites.items, function (jetpackSite) {
	      return jetpackSite.jetpack && wpcomSiteUrlSansProtocol === jetpackSite.URL.replace(/^https?:\/\//, '');
	    });
	  }), 'ID');
	}, function (state) {
	  return state.sites.items;
	});
	
	/**
	 * Returns true if a collision exists for the specified WordPress.com site ID.
	 *
	 * @param  {Object}  state  Global state tree
	 * @param  {Number}  siteId Site ID
	 * @return {Boolean}        Whether collision exists
	 */
	function isSiteConflicting(state, siteId) {
	  return (0, _includes2.default)(getSiteCollisions(state), siteId);
	}
	
	/**
	 * Returns true if site is a Jetpack site, false if the site is hosted on
	 * WordPress.com, or null if the site is unknown.
	 *
	 * @param  {Object}   state  Global state tree
	 * @param  {Number}   siteId Site ID
	 * @return {?Boolean}        Whether site is a Jetpack site
	 */
	function isJetpackSite(state, siteId) {
	  var site = getSite(state, siteId);
	  if (!site) {
	    return null;
	  }
	
	  return site.jetpack;
	}
	
	/**
	 * Returns the slug for a site, or null if the site is unknown.
	 *
	 * @param  {Object}  state  Global state tree
	 * @param  {Number}  siteId Site ID
	 * @return {?String}        Site slug
	 */
	function getSiteSlug(state, siteId) {
	  var site = getSite(state, siteId);
	  if (!site) {
	    return null;
	  }
	
	  if (site.options && site.options.is_redirect || isSiteConflicting(state, siteId)) {
	    return site.options.unmapped_url.replace(/^https?:\/\//, '');
	  }
	
	  return site.URL.replace(/^https?:\/\//, '').replace(/\//g, '::');
	}
	
	/**
	 * Returns true if we are requesting all sites.
	 * @param {Object}    state  Global state tree
	 * @return {Boolean}        Request State
	 */
	function isRequestingSites(state) {
	  return !!state.sites.fetchingItems.all;
	}
	
	/**
	 * Returns a site object by its URL.
	 *
	 * @param  {Object}  state Global state tree
	 * @param  {String}  url   Site URL
	 * @return {?Object}       Site object
	 */
	function getSiteByUrl(state, url) {
	  var slug = url.replace(/^https?:\/\//, '').replace(/\//g, '::');
	  var site = (0, _find2.default)(state.sites.items, function (item, siteId) {
	    return getSiteSlug(state, siteId) === slug;
	  });
	
	  if (!site) {
	    return null;
	  }
	
	  return site;
	}

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	exports.default = createSelector;
	
	var _memoize = __webpack_require__(483);
	
	var _memoize2 = _interopRequireDefault(_memoize);
	
	var _shallowEqual = __webpack_require__(190);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Constants
	 */
	
	/**
	 * Defines acceptable argument types for a memoized selector when using the
	 * default cache key generating function.
	 *
	 * @type {Array}
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var VALID_ARG_TYPES = ['number', 'boolean', 'string'];
	
	/**
	 * Default behavior for determining whether current state differs from previous
	 * state, which is the basis upon which memoize cache is cleared. Should return
	 * a value or array of values to be shallowly compared for strict equality.
	 *
	 * @type   {Function}
	 * @param  {Object}    state Current state object
	 * @return {(Array|*)}       Value(s) to be shallow compared
	 */
	var DEFAULT_GET_DEPENDANTS = function DEFAULT_GET_DEPENDANTS(state) {
		return state;
	};
	
	/**
	 * At runtime, assigns a function which returns a cache key for the memoized
	 * selector function, given a state object and a variable set of arguments. In
	 * development mode, this warns when the memoized selector is passed a complex
	 * object argument, as these cannot be depended upon as reliable cache keys.
	 *
	 * @type {Function} Function returning cache key for memoized selector
	 */
	var DEFAULT_GET_CACHE_KEY = function () {
		var warn = void 0,
		    includes = void 0;
		if ('production' !== process.env.NODE_ENV) {
			// Webpack can optimize bundles if it can detect that a block will
			// never be reached. Since `NODE_ENV` is defined using DefinePlugin,
			// these debugging modules will be excluded from the production build.
			warn = __webpack_require__(484);
			includes = __webpack_require__(476);
		} else {
			return function (state) {
				for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
					args[_key - 1] = arguments[_key];
				}
	
				return args.join();
			};
		}
	
		return function (state) {
			for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
				args[_key2 - 1] = arguments[_key2];
			}
	
			var hasInvalidArg = args.some(function (arg) {
				return arg && !includes(VALID_ARG_TYPES, typeof arg === 'undefined' ? 'undefined' : (0, _typeof3.default)(arg));
			});
	
			if (hasInvalidArg) {
				warn('Do not pass complex objects as arguments for a memoized selector');
			}
	
			return args.join();
		};
	}();
	
	/**
	 * Returns a memoized state selector for use with the Redux global application state.
	 *
	 * @param  {Function} selector      Function calculating cached result
	 * @param  {Function} getDependants Function describing dependent state
	 * @param  {Function} getCacheKey   Function generating cache key for arguments
	 * @return {Function}               Memoized selector
	 */
	function createSelector(selector) {
		var getDependants = arguments.length <= 1 || arguments[1] === undefined ? DEFAULT_GET_DEPENDANTS : arguments[1];
		var getCacheKey = arguments.length <= 2 || arguments[2] === undefined ? DEFAULT_GET_CACHE_KEY : arguments[2];
	
		var memoizedSelector = (0, _memoize2.default)(selector, getCacheKey);
		var lastDependants = void 0;
	
		return (0, _assign2.default)(function (state) {
			for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
				args[_key3 - 1] = arguments[_key3];
			}
	
			var currentDependants = getDependants.apply(undefined, [state].concat(args));
			if (!Array.isArray(currentDependants)) {
				currentDependants = [currentDependants];
			}
	
			if (lastDependants && !(0, _shallowEqual2.default)(currentDependants, lastDependants)) {
				memoizedSelector.cache.clear();
			}
	
			lastDependants = currentDependants;
	
			return memoizedSelector.apply(undefined, [state].concat(args));
		}, { memoizedSelector: memoizedSelector });
	}
	module.exports = exports['default'];

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(111);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoizing function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result);
	    return result;
	  };
	  memoized.cache = new memoize.Cache;
	  return memoized;
	}
	
	// Assign cache to `_.memoize`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var warn = void 0; /** @ssr-ready **/
	
	/**
	 * Internal Dependencies
	 */
	
	if ((0, _config2.default)('env') !== 'production' && 'function' === typeof console.warn) {
	  warn = function warn() {
	    var _console;
	
	    return (_console = console).warn.apply(_console, arguments);
	  };
	} else {
	  warn = function warn() {};
	}
	
	exports.default = warn;
	module.exports = exports['default'];

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(172);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _selectors = __webpack_require__(356);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Passes the activating state of themes to the supplied child component.
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	var ActivatingThemeData = _react2.default.createClass({
		displayName: 'ActivatingThemeData',
	
	
		propTypes: {
			children: _react2.default.PropTypes.element.isRequired,
			// Connected props
			isActivating: _react2.default.PropTypes.bool.isRequired,
			hasActivated: _react2.default.PropTypes.bool.isRequired,
			currentTheme: _react2.default.PropTypes.shape({
				name: _react2.default.PropTypes.string,
				id: _react2.default.PropTypes.string
			})
		},
	
		render: function render() {
			return _react2.default.cloneElement(this.props.children, (0, _omit2.default)(this.props, 'children'));
		}
	});
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = (0, _reactRedux.connect)(function (state, props) {
		return {
			isActivating: (0, _selectors.isActivating)(state),
			hasActivated: (0, _selectors.hasActivated)(state),
			currentTheme: (0, _selectors.getCurrentTheme)(state, props.siteId)
		};
	})(ActivatingThemeData);
	module.exports = exports['default'];

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  return _react2.default.createElement('div', null);
	}; /**
	    * External dependencies
	    */


	module.exports = exports['default'];

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(170);
	
	var _reactRedux = __webpack_require__(172);
	
	var _actions = __webpack_require__(330);
	
	var _selectors = __webpack_require__(356);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	var QueryCurrentTheme = function (_Component) {
		(0, _inherits3.default)(QueryCurrentTheme, _Component);
	
		function QueryCurrentTheme() {
			(0, _classCallCheck3.default)(this, QueryCurrentTheme);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(QueryCurrentTheme).apply(this, arguments));
		}
	
		(0, _createClass3.default)(QueryCurrentTheme, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var _props = this.props;
				var requestingCurrentTheme = _props.requestingCurrentTheme;
				var siteId = _props.siteId;
	
				this.refresh(requestingCurrentTheme, siteId);
			}
		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				if (nextProps.siteId === this.props.siteId) {
					return;
				}
				var requestingCurrentTheme = nextProps.requestingCurrentTheme;
				var siteId = nextProps.siteId;
	
				this.refresh(requestingCurrentTheme, siteId);
			}
		}, {
			key: 'refresh',
			value: function refresh(requestingCurrentTheme, siteId) {
				if (!requestingCurrentTheme) {
					this.props.fetchCurrentTheme(siteId);
				}
			}
		}, {
			key: 'render',
			value: function render() {
				return null;
			}
		}]);
		return QueryCurrentTheme;
	}(_react.Component);
	
	QueryCurrentTheme.propTypes = {
		siteId: _react.PropTypes.number.isRequired,
		// connected props
		requestingCurrentTheme: _react.PropTypes.bool,
		fetchCurrentTheme: _react.PropTypes.func
	};
	
	exports.default = (0, _reactRedux.connect)(function (state, props) {
		return { requestingCurrentTheme: (0, _selectors.isRequestingCurrentTheme)(state, props.site && props.site.ID) };
	}, { fetchCurrentTheme: _actions.fetchCurrentTheme })(QueryCurrentTheme);
	module.exports = exports['default'];

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
		signup: {
			label: _i18nCalypso2.default.translate('Choose this design', {
				comment: 'when signing up for a WordPress.com account with a selected theme'
			})
		},
		preview: {
			label: _i18nCalypso2.default.translate('Preview', {
				context: 'verb'
			})
		},
		purchase: {
			label: _i18nCalypso2.default.translate('Purchase', {
				context: 'verb'
			}),
			header: _i18nCalypso2.default.translate('Purchase on:', {
				context: 'verb',
				comment: 'label for selecting a site for which to purchase a theme'
			})
		},
		activate: {
			label: _i18nCalypso2.default.translate('Activate'),
			header: _i18nCalypso2.default.translate('Activate on:', { comment: 'label for selecting a site on which to activate a theme' })
		},
		customize: {
			label: _i18nCalypso2.default.translate('Customize'),
			header: _i18nCalypso2.default.translate('Customize on:', { comment: 'label for selecting a site for which to customize a theme' })
		},
		details: {
			label: _i18nCalypso2.default.translate('Details')
		},
		support: {
			label: _i18nCalypso2.default.translate('Setup')
		}
	}; /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 489 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.getBackPath = getBackPath;
	/** @ssr-ready **/
	
	// Returns destination for theme sheet 'back' button
	function getBackPath(state) {
		return state.themes.themesUI.backPath;
	}

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends2 = __webpack_require__(315);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var debug = (0, _debug2.default)('calypso:components:emptyContent'); /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	module.exports = _react2.default.createClass({
	
		displayName: 'EmptyContent',
	
		propTypes: {
			title: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.array]),
			illustration: _react2.default.PropTypes.string,
			illustrationWidth: _react2.default.PropTypes.number,
			line: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.array]),
			action: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.element]),
			actionURL: _react2.default.PropTypes.string,
			actionCallback: _react2.default.PropTypes.func,
			secondaryAction: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.element]),
			secondaryActionURL: _react2.default.PropTypes.string,
			secondaryActionCallback: _react2.default.PropTypes.func,
			className: _react2.default.PropTypes.string,
			isCompact: _react2.default.PropTypes.bool
		},
	
		componentDidMount: function componentDidMount() {
			debug('Empty Content React component mounted.');
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				title: "You haven't created any content yet.",
				illustration: '/calypso/images/drake/drake-empty-results.svg',
				isCompact: false
			};
		},
	
		primaryAction: function primaryAction() {
			if ('string' !== typeof this.props.action) {
				return this.props.action;
			}
	
			if (this.props.actionURL && this.props.actionCallback) {
				return _react2.default.createElement(
					'a',
					{ className: 'empty-content__action button is-primary', onClick: this.props.actionCallback, href: this.props.actionURL },
					this.props.action
				);
			} else if (this.props.actionURL) {
				var targetProp = {};
				if (this.props.actionTarget) {
					targetProp = { target: this.props.actionTarget };
				}
	
				return _react2.default.createElement(
					'a',
					(0, _extends3.default)({ className: 'empty-content__action button is-primary', href: this.props.actionURL }, targetProp),
					this.props.action
				);
			} else if (this.props.actionCallback) {
				return _react2.default.createElement(
					'a',
					{ className: 'empty-content__action button is-primary', onClick: this.props.actionCallback },
					this.props.action
				);
			}
		},
	
		secondaryAction: function secondaryAction() {
			if ('string' !== typeof this.props.secondaryAction) {
				return this.props.secondaryAction;
			}
	
			if (this.props.secondaryActionURL && this.props.secondaryActionCallback) {
				return _react2.default.createElement(
					'a',
					{ className: 'empty-content__action button', onClick: this.props.secondaryActionCallback, href: this.props.secondaryActionURL },
					this.props.secondaryAction
				);
			} else if (this.props.secondaryActionURL) {
				var targetProp = {};
				if (this.props.actionTarget) {
					targetProp = { target: this.props.secondaryActionTarget };
				}
	
				return _react2.default.createElement(
					'a',
					(0, _extends3.default)({ className: 'empty-content__action button', href: this.props.secondaryActionURL }, targetProp),
					this.props.secondaryAction
				);
			} else if (this.props.secondaryActionCallback) {
				return _react2.default.createElement(
					'a',
					{ className: 'empty-content__action button', onClick: this.props.secondaryActionCallback },
					this.props.secondaryAction
				);
			}
		},
	
		render: function render() {
			var action = this.props.action && this.primaryAction();
			var secondaryAction = this.props.secondaryAction && this.secondaryAction();
			var illustration = this.props.illustration && _react2.default.createElement('img', { src: this.props.illustration, width: this.props.illustrationWidth, className: 'empty-content__illustration' });
	
			return _react2.default.createElement(
				'div',
				{ className: (0, _classnames2.default)('empty-content', this.props.className, { 'is-compact': this.props.isCompact, 'has-title-only': this.props.title && !this.props.line }) },
				illustration,
				this.props.title ? _react2.default.createElement(
					'h2',
					{ className: 'empty-content__title' },
					this.props.title
				) : null,
				this.props.line ? _react2.default.createElement(
					'h3',
					{ className: 'empty-content__line' },
					this.props.line
				) : null,
				action,
				secondaryAction
			);
		}
	});

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _webPreview = __webpack_require__(492);
	
	var _webPreview2 = _interopRequireDefault(_webPreview);
	
	var _button = __webpack_require__(292);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _helpers = __webpack_require__(309);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	exports.default = _react2.default.createClass({
		displayName: 'ThemePreview',
	
		propTypes: {
			theme: _react2.default.PropTypes.object,
			showPreview: _react2.default.PropTypes.bool,
			onClose: _react2.default.PropTypes.func,
			buttonLabel: _react2.default.PropTypes.string,
			onButtonClick: _react2.default.PropTypes.func
		},
	
		onButtonClick: function onButtonClick() {
			this.props.onButtonClick(this.props.theme);
		},
		render: function render() {
			var previewUrl = (0, _helpers.getPreviewUrl)(this.props.theme);
	
			return _react2.default.createElement(
				_webPreview2.default,
				{ showPreview: this.props.showPreview,
					onClose: this.props.onClose,
					previewUrl: previewUrl,
					externalUrl: this.props.theme.demo_uri },
				_react2.default.createElement(
					_button2.default,
					{ primary: true,
						onClick: this.onButtonClick
					},
					this.props.buttonLabel
				)
			);
		}
	});
	
	/**
	 * Internal dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends2 = __webpack_require__(315);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _mixin = __webpack_require__(188);
	
	var _mixin2 = _interopRequireDefault(_mixin);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _noop = __webpack_require__(175);
	
	var _noop2 = _interopRequireDefault(_noop);
	
	var _toolbar = __webpack_require__(493);
	
	var _toolbar2 = _interopRequireDefault(_toolbar);
	
	var _touchDetect = __webpack_require__(494);
	
	var _touchDetect2 = _interopRequireDefault(_touchDetect);
	
	var _viewport = __webpack_require__(293);
	
	var _spinner = __webpack_require__(329);
	
	var _spinner2 = _interopRequireDefault(_spinner);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var debug = (0, _debug2.default)('calypso:web-preview'); /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	var WebPreview = _react2.default.createClass({
		displayName: 'WebPreview',
	
	
		_hasTouch: false,
		_isMobile: false,
	
		propTypes: {
			// Display the preview
			showPreview: _react2.default.PropTypes.bool,
			// Show external link button (only if there is a previewUrl)
			showExternal: _react2.default.PropTypes.bool,
			// Show close button
			showClose: _react2.default.PropTypes.bool,
			// Show device viewport switcher
			showDeviceSwitcher: _react2.default.PropTypes.bool,
			// The URL that should be displayed in the iframe
			previewUrl: _react2.default.PropTypes.string,
			// The URL for the external link button
			externalUrl: _react2.default.PropTypes.string,
			// The markup to display in the iframe
			previewMarkup: _react2.default.PropTypes.string,
			// The viewport device to show initially
			defaultViewportDevice: _react2.default.PropTypes.string,
			// Elements to render on the right side of the toolbar
			children: _react2.default.PropTypes.node,
			// The function to call when the iframe is loaded. Will be passed the iframe document object.
			// Only called if using previewMarkup.
			onLoad: _react2.default.PropTypes.func,
			// Called when the preview is closed, either via the 'X' button or the escape key
			onClose: _react2.default.PropTypes.func,
			// Optional loading message to display during loading
			loadingMessage: _react2.default.PropTypes.string,
			// The iframe's title element, used for accessibility purposes
			iframeTitle: _react2.default.PropTypes.string
		},
	
		mixins: [_mixin2.default],
	
		getDefaultProps: function getDefaultProps() {
			return {
				showExternal: true,
				showClose: true,
				showDeviceSwitcher: true,
				previewUrl: null,
				previewMarkup: null,
				onLoad: _noop2.default,
				onClose: _noop2.default
			};
		},
		getInitialState: function getInitialState() {
			return {
				iframeUrl: null,
				device: this.props.defaultViewportDevice || 'computer',
				loaded: false
			};
		},
		componentWillMount: function componentWillMount() {
			// Cache touch and mobile detection for the entire lifecycle of the component
			this._hasTouch = _touchDetect2.default.hasTouch();
			this._isMobile = (0, _viewport.isMobile)();
		},
		componentDidMount: function componentDidMount() {
			if (this.props.previewUrl) {
				this.setIframeUrl(this.props.previewUrl);
			}
			if (this.props.previewMarkup) {
				this.setIframeMarkup(this.props.previewMarkup);
			}
			if (this.props.showPreview) {
				document.documentElement.classList.add('no-scroll');
			}
		},
		componentDidUpdate: function componentDidUpdate(prevProps) {
			var _props = this.props;
			var showPreview = _props.showPreview;
			var previewUrl = _props.previewUrl;
	
	
			this.setIframeUrl(previewUrl);
	
			if (!this.shouldRenderIframe()) {
				this.setState({
					iframeUrl: null,
					loaded: false
				});
			}
			// If the previewMarkup changes, re-render the iframe contents
			if (this.props.previewMarkup && this.props.previewMarkup !== prevProps.previewMarkup) {
				this.setIframeMarkup(this.props.previewMarkup);
			}
			// If the previewMarkup is erased, remove the iframe contents
			if (!this.props.previewMarkup && prevProps.previewMarkup) {
				debug('removing iframe contents');
				this.setIframeMarkup('');
			}
	
			// add/remove listener if showPreview has changed
			if (showPreview === prevProps.showPreview) {
				return;
			}
			if (showPreview) {
				window.addEventListener('keydown', this.keyDown);
				document.documentElement.classList.add('no-scroll');
			} else {
				window.removeEventListener('keydown', this.keyDown);
				document.documentElement.classList.remove('no-scroll');
			}
		},
		componentWillUnmount: function componentWillUnmount() {
			window.removeEventListener('keydown', this.keyDown);
			document.documentElement.classList.remove('no-scroll');
		},
		keyDown: function keyDown(event) {
			if (event.keyCode === 27) {
				this.props.onClose();
				event.preventDefault();
			}
		},
		setIframeMarkup: function setIframeMarkup(content) {
			if (!this.refs.iframe) {
				debug('no iframe to update');
				return;
			}
			debug('adding markup to iframe', content.length);
			this.refs.iframe.contentDocument.open();
			this.refs.iframe.contentDocument.write(content);
			this.refs.iframe.contentDocument.close();
		},
		setIframeUrl: function setIframeUrl(iframeUrl) {
			// Bail if iframe isn't rendered
			if (!this.shouldRenderIframe()) {
				return;
			}
	
			// Bail if we've already set this url
			if (iframeUrl === this.state.iframeUrl) {
				return;
			}
	
			debug('setIframeUrl', iframeUrl);
			this.refs.iframe.contentWindow.location.replace(iframeUrl);
			this.setState({
				loaded: false,
				iframeUrl: iframeUrl
			});
		},
		shouldRenderIframe: function shouldRenderIframe() {
			// Don't preload iframe on mobile devices as bandwidth is typically more limited and
			// the preview causes weird issues
			return !this._isMobile || this.props.showPreview;
		},
		setDeviceViewport: function setDeviceViewport() {
			var device = arguments.length <= 0 || arguments[0] === undefined ? 'computer' : arguments[0];
	
			this.setState({ device: device });
		},
		setLoaded: function setLoaded() {
			if (!this.state.iframeUrl && !this.props.previewMarkup) {
				debug('preview loaded, but nothing to show');
				return;
			}
			if (this.props.previewMarkup) {
				debug('preview loaded with markup');
				this.props.onLoad(this.refs.iframe.contentDocument);
			} else {
				debug('preview loaded for url:', this.state.iframeUrl);
			}
			this.setState({ loaded: true });
		},
		render: function render() {
			var className = (0, _classnames2.default)(this.props.className, 'web-preview', {
				'is-touch': this._hasTouch,
				'is-visible': this.props.showPreview,
				'is-computer': this.state.device === 'computer',
				'is-tablet': this.state.device === 'tablet',
				'is-phone': this.state.device === 'phone',
				'is-loaded': this.state.loaded
			});
	
			return _react2.default.createElement(
				'div',
				{ className: className },
				_react2.default.createElement('div', { className: 'web-preview__backdrop', onClick: this.props.onClose }),
				_react2.default.createElement(
					'div',
					{ className: 'web-preview__content' },
					_react2.default.createElement(_toolbar2.default, (0, _extends3.default)({ setDeviceViewport: this.setDeviceViewport,
						device: this.state.device
					}, this.props, {
						showExternal: this.props.previewUrl ? this.props.showExternal : false,
						showDeviceSwitcher: this.props.showDeviceSwitcher && !this._isMobile
					})),
					_react2.default.createElement(
						'div',
						{ className: 'web-preview__placeholder' },
						!this.state.loaded && _react2.default.createElement(
							'div',
							null,
							_react2.default.createElement(_spinner2.default, null),
							this.props.loadingMessage && _react2.default.createElement(
								'span',
								{ className: 'web-preview__loading-message' },
								this.props.loadingMessage
							)
						),
						this.shouldRenderIframe() && _react2.default.createElement('iframe', {
							ref: 'iframe',
							className: 'web-preview__frame',
							src: 'about:blank',
							onLoad: this.setLoaded,
							title: this.props.iframeTitle || this.translate('Preview')
						})
					)
				)
			);
		}
	});
	
	exports.default = WebPreview;
	module.exports = exports['default'];

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(182);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _gridicon = __webpack_require__(187);
	
	var _gridicon2 = _interopRequireDefault(_gridicon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PreviewToolbar = _react2.default.createClass({
		displayName: 'PreviewToolbar',
	
		devices: ['computer', 'tablet', 'phone'],
	
		propTypes: {
			// Show device viewport switcher
			showDeviceSwitcher: _react2.default.PropTypes.bool,
			// Show external link button
			showExternal: _react2.default.PropTypes.bool,
			// Show close button
			showClose: _react2.default.PropTypes.bool,
			// The device to display, used for setting preview dimensions
			device: _react2.default.PropTypes.string,
			// Elements to render on the right side of the toolbar
			children: _react2.default.PropTypes.node,
			// Called when a device button is clicked
			setDeviceViewport: _react2.default.PropTypes.func,
			// Called when the close button is pressed
			onClose: _react2.default.PropTypes.func.isRequired
		},
	
		renderDevices: function renderDevices() {
			var _this = this;
	
			return this.devices.map(function (device) {
				var className = (0, _classnames2.default)('web-preview__device-button', {
					'is-active': _this.props.device === device
				});
	
				return _react2.default.createElement(
					'button',
					{
						key: device,
						className: className,
						onClick: _this.props.setDeviceViewport.bind(null, device),
						'aria-hidden': true
					},
					_react2.default.createElement(_gridicon2.default, { icon: device })
				);
			});
		},
		render: function render() {
			return _react2.default.createElement(
				'div',
				{ className: 'web-preview__toolbar' },
				this.props.showClose && _react2.default.createElement(
					'button',
					{
						className: 'web-preview__close',
						'data-tip-target': 'web-preview__close',
						onClick: this.props.onClose,
						'aria-label': this.translate('Close preview')
					},
					_react2.default.createElement(_gridicon2.default, { icon: 'cross' })
				),
				this.props.showExternal && _react2.default.createElement(
					'a',
					{ className: 'web-preview__external', href: this.props.externalUrl || this.props.previewUrl, target: '_blank' },
					_react2.default.createElement(_gridicon2.default, { icon: 'external' })
				),
				this.props.showDeviceSwitcher && this.renderDevices(),
				_react2.default.createElement(
					'div',
					{ className: 'web-preview__toolbar-tray' },
					this.props.children
				)
			);
		}
	});
	
	/**
	 * Internal dependencies
	 */
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	exports.default = PreviewToolbar;
	module.exports = exports['default'];

/***/ },
/* 494 */
/***/ function(module, exports) {

	'use strict';
	
	/** @ssr-ready **/
	
	/**
	 * Module exports.
	 */
	
	module.exports = {
		/**
	  * This test is for touch events.
	  * It may not accurately detect a touch screen, but may be close enough depending on the use case.
	  *
	  * @copyright Modernizr © 2009-2015.
	  * @license See CREDITS.md.
	  * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js
	  *
	  * @returns {Boolean} whether touch screen is available
	  */
		hasTouch: function hasTouch() {
			/* global DocumentTouch:true */
			return window && ('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch);
		}
	};

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(172);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _actions = __webpack_require__(330);
	
	var _selectors = __webpack_require__(496);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Fetches details for a theme specified by its ID
	 * and passes it to the supplied child component.
	 */
	
	
	/**
	 * Internal dependencies
	 */
	var ThemeDetailsData = _react2.default.createClass({
		displayName: 'ThemeDetailsData',
	
	
		propTypes: {
			children: _react2.default.PropTypes.element.isRequired,
			id: _react2.default.PropTypes.string.isRequired,
			// Connected props
			name: _react2.default.PropTypes.string,
			author: _react2.default.PropTypes.string,
			screenshot: _react2.default.PropTypes.string,
			description: _react2.default.PropTypes.string,
			descriptionLong: _react2.default.PropTypes.string,
			supportDocumentation: _react2.default.PropTypes.string,
			fetchThemeDetails: _react2.default.PropTypes.func.isRequired
		},
	
		componentDidMount: function componentDidMount() {
			this.refresh(this.props);
		},
		componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
			if (nextProps.id && nextProps.id !== this.props.id) {
				this.refresh(nextProps);
			}
		},
		refresh: function refresh(props) {
			if (!this.props.name && props.id) {
				this.props.fetchThemeDetails(props.id);
			}
		},
		render: function render() {
			return _react2.default.cloneElement(this.props.children, (0, _omit2.default)(this.props, 'children'));
		}
	}); /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	exports.default = (0, _reactRedux.connect)(function (state, props) {
		return (0, _selectors.getThemeDetails)(state, props.id);
	}, { fetchThemeDetails: _actions.fetchThemeDetails })(ThemeDetailsData);
	module.exports = exports['default'];

/***/ },
/* 496 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.getThemeDetails = getThemeDetails;
	/** @ssr-ready **/
	
	function getThemeDetails(state, id) {
		var theme = state.themes.themeDetails.get(id);
		theme = theme ? theme.toJS() : {};
		if (theme.price) {
			theme.price = formatPrice(theme.price);
		}
		return theme;
	}
	
	// Convert price to format used by v1.2 themes API to fit with existing components.
	// TODO (seear): remove when v1.2 theme details endpoint is added
	function formatPrice(price) {
		// premium theme price.display example: "<abbr title="United States Dollars">$</abbr>65"
		var priceMatcher = /^<[^>]*>([^<]*)<[^>]*>(\d*)$/;
		return price.display.replace(priceMatcher, '$1$2');
	}

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ClientSideEffects = function (_React$Component) {
		(0, _inherits3.default)(ClientSideEffects, _React$Component);
	
		function ClientSideEffects() {
			(0, _classCallCheck3.default)(this, ClientSideEffects);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(ClientSideEffects).call(this));
		}
	
		(0, _createClass3.default)(ClientSideEffects, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				this.props.children();
			}
		}, {
			key: 'render',
			value: function render() {
				return null;
			}
		}]);
		return ClientSideEffects;
	}(_react2.default.Component);
	
	;
	
	ClientSideEffects.propTypes = {
		children: _react2.default.PropTypes.func.isRequired
	};
	
	ClientSideEffects.defaultProps = {
		children: function children() {}
	};
	
	exports.default = ClientSideEffects;
	module.exports = exports['default'];

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * External Dependencies
	 */
	var trim = __webpack_require__(499),
	    warn = __webpack_require__(484),
	    stripTags = __webpack_require__(502);
	
	/**
	 * Internal Dependencies
	 */
	var decode = __webpack_require__(503);
	
	function decodeEntities(text) {
		if (text === undefined || text === false || text === null) {
			warn('Don\'t call `decodeEntities` with an `undefined`, `false`, or `null` value.');
			return text;
		}
	
		return decode(text);
	}
	
	/**
	 * Inserts the specified separator betwixt every element of the given list.
	 *
	 * @param {*} separator - separator to be inserted
	 * @param {*[]} list - list
	 * @returns {*[]} the list with separators
	 */
	function interpose(separator, list) {
		return list.reduce(function (previousValue, currentValue, index) {
			var value;
			if (index > 0) {
				value = previousValue.concat(separator, currentValue);
			} else {
				value = previousValue.concat(currentValue);
			}
			return value;
		}, []);
	}
	
	/**
	 * Strips HTML from a string. Does not handle tags nested in attribute strings.
	 * @param  {string} string The string to strip tags from
	 * @return {string}        The stripped string
	 */
	function stripHTML(string) {
		return stripTags(string);
	}
	
	/**
	 * Prevent widows by replacing spaces between the last `wordsToKeep` words in the text with non-breaking spaces
	 * @param  {string} text        the text to work on
	 * @param  {number} wordsToKeep the number of words to keep together
	 * @return {string}             the widow-prevented string
	 */
	function preventWidows(text, wordsToKeep) {
		var words, endWords;
	
		if (typeof text !== 'string') {
			return text;
		}
	
		text = text && trim(text);
		if (!text) {
			return text;
		}
	
		words = text.match(/\S+/g);
	
		if (!words) {
			// all whitespace
			return text;
		}
	
		if (words.length <= wordsToKeep) {
			return words.join('\xA0');
		}
	
		endWords = words.splice(-wordsToKeep, wordsToKeep);
	
		return words.join(' ') + ' ' + endWords.join('\xA0');
	}
	
	/**
	 * Automatically add paragraph and break tags
	 *
	 * Adapted from WordPress
	 *
	 * @copyright 2015 by the WordPress contributors.
	 * @license See CREDITS.md.
	 * @see wp-admin/js/editor.js
	 *
	 * @param {string} pee     html string
	 * @return {string}        html string with HTML paragraphs instead of double line-breaks
	 */
	function wpautop(pee) {
		var preserve_linebreaks = false,
		    preserve_br = false,
		    blocklist = 'table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre' + '|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section' + '|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary';
	
		if (pee.indexOf('<object') !== -1) {
			pee = pee.replace(/<object[\s\S]+?<\/object>/g, function (a) {
				return a.replace(/[\r\n]+/g, '');
			});
		}
	
		pee = pee.replace(/<[^<>]+>/g, function (a) {
			return a.replace(/[\r\n]+/g, ' ');
		});
	
		// Protect pre|script tags
		if (pee.indexOf('<pre') !== -1 || pee.indexOf('<script') !== -1) {
			preserve_linebreaks = true;
			pee = pee.replace(/<(pre|script)[^>]*>[\s\S]+?<\/\1>/g, function (a) {
				return a.replace(/(\r\n|\n)/g, '<wp-line-break>');
			});
		}
	
		// keep <br> tags inside captions and convert line breaks
		if (pee.indexOf('[caption') !== -1) {
			preserve_br = true;
			pee = pee.replace(/\[caption[\s\S]+?\[\/caption\]/g, function (a) {
				// keep existing <br>
				a = a.replace(/<br([^>]*)>/g, '<wp-temp-br$1>');
				// no line breaks inside HTML tags
				a = a.replace(/<[a-zA-Z0-9]+( [^<>]+)?>/g, function (b) {
					return b.replace(/[\r\n\t]+/, ' ');
				});
				// convert remaining line breaks to <br>
				return a.replace(/\s*\n\s*/g, '<wp-temp-br />');
			});
		}
	
		pee = pee + '\n\n';
		pee = pee.replace(/<br \/>\s*<br \/>/gi, '\n\n');
		pee = pee.replace(new RegExp('(<(?:' + blocklist + ')(?: [^>]*)?>)', 'gi'), '\n$1');
		pee = pee.replace(new RegExp('(</(?:' + blocklist + ')>)', 'gi'), '$1\n\n');
		pee = pee.replace(/<hr( [^>]*)?>/gi, '<hr$1>\n\n'); // hr is self closing block element
		pee = pee.replace(/\s*<option/gi, '<option'); // No <p> or <br> around <option>
		pee = pee.replace(/<\/option>\s*/gi, '</option>');
		pee = pee.replace(/\r\n|\r/g, '\n');
		pee = pee.replace(/\n\s*\n+/g, '\n\n');
		pee = pee.replace(/([\s\S]+?)\n\n/g, '<p>$1</p>\n');
		pee = pee.replace(/<p>\s*?<\/p>/gi, '');
		pee = pee.replace(new RegExp('<p>\\s*(</?(?:' + blocklist + ')(?: [^>]*)?>)\\s*</p>', 'gi'), '$1');
		pee = pee.replace(/<p>(<li.+?)<\/p>/gi, '$1');
		pee = pee.replace(/<p>\s*<blockquote([^>]*)>/gi, '<blockquote$1><p>');
		pee = pee.replace(/<\/blockquote>\s*<\/p>/gi, '</p></blockquote>');
		pee = pee.replace(new RegExp('<p>\\s*(</?(?:' + blocklist + ')(?: [^>]*)?>)', 'gi'), '$1');
		pee = pee.replace(new RegExp('(</?(?:' + blocklist + ')(?: [^>]*)?>)\\s*</p>', 'gi'), '$1');
		pee = pee.replace(/\s*\n/gi, '<br />\n');
		pee = pee.replace(new RegExp('(</?(?:' + blocklist + ')[^>]*>)\\s*<br />', 'gi'), '$1');
		pee = pee.replace(/<br \/>(\s*<\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)>)/gi, '$1');
		pee = pee.replace(/(?:<p>|<br ?\/?>)*\s*\[caption([^\[]+)\[\/caption\]\s*(?:<\/p>|<br ?\/?>)*/gi, '[caption$1[/caption]');
	
		pee = pee.replace(/(<(?:div|th|td|form|fieldset|dd)[^>]*>)(.*?)<\/p>/g, function (a, b, c) {
			if (c.match(/<p( [^>]*)?>/)) {
				return a;
			}
	
			return b + '<p>' + c + '</p>';
		});
	
		// put back the line breaks in pre|script
		if (preserve_linebreaks) {
			pee = pee.replace(/<wp-line-break>/g, '\n');
		}
	
		if (preserve_br) {
			pee = pee.replace(/<wp-temp-br([^>]*)>/g, '<br$1>');
		}
	
		return pee;
	}
	
	function removep(html) {
		var blocklist = 'blockquote|ul|ol|li|table|thead|tbody|tfoot|tr|th|td|h[1-6]|fieldset',
		    blocklist1 = blocklist + '|div|p',
		    blocklist2 = blocklist + '|pre',
		    preserve_linebreaks = false,
		    preserve_br = false;
	
		if (!html) {
			return '';
		}
	
		// Protect pre|script tags
		if (html.indexOf('<pre') !== -1 || html.indexOf('<script') !== -1) {
			preserve_linebreaks = true;
			html = html.replace(/<(pre|script)[^>]*>[\s\S]+?<\/\1>/g, function (a) {
				a = a.replace(/<br ?\/?>(\r\n|\n)?/g, '<wp-line-break>');
				a = a.replace(/<\/?p( [^>]*)?>(\r\n|\n)?/g, '<wp-line-break>');
				return a.replace(/\r?\n/g, '<wp-line-break>');
			});
		}
	
		// keep <br> tags inside captions and remove line breaks
		if (html.indexOf('[caption') !== -1) {
			preserve_br = true;
			html = html.replace(/\[caption[\s\S]+?\[\/caption\]/g, function (a) {
				return a.replace(/<br([^>]*)>/g, '<wp-temp-br$1>').replace(/[\r\n\t]+/, '');
			});
		}
	
		// Pretty it up for the source editor
		html = html.replace(new RegExp('\\s*</(' + blocklist1 + ')>\\s*', 'g'), '</$1>\n');
		html = html.replace(new RegExp('\\s*<((?:' + blocklist1 + ')(?: [^>]*)?)>', 'g'), '\n<$1>');
	
		// Mark </p> if it has any attributes.
		html = html.replace(/(<p [^>]+>.*?)<\/p>/g, '$1</p#>');
	
		// Separate <div> containing <p>
		html = html.replace(/<div( [^>]*)?>\s*<p>/gi, '<div$1>\n\n');
	
		// Remove <p> and <br />
		html = html.replace(/\s*<p>/gi, '');
		html = html.replace(/\s*<\/p>\s*/gi, '\n\n');
		html = html.replace(/\n[\s\u00a0]+\n/g, '\n\n');
		html = html.replace(/\s*<br ?\/?>\s*/gi, '\n');
	
		// Fix some block element newline issues
		html = html.replace(/\s*<div/g, '\n<div');
		html = html.replace(/<\/div>\s*/g, '</div>\n');
		html = html.replace(/\s*\[caption([^\[]+)\[\/caption\]\s*/gi, '\n\n[caption$1[/caption]\n\n');
		html = html.replace(/caption\]\n\n+\[caption/g, 'caption]\n\n[caption');
	
		html = html.replace(new RegExp('\\s*<((?:' + blocklist2 + ')(?: [^>]*)?)\\s*>', 'g'), '\n<$1>');
		html = html.replace(new RegExp('\\s*</(' + blocklist2 + ')>\\s*', 'g'), '</$1>\n');
		html = html.replace(/<li([^>]*)>/g, '\t<li$1>');
	
		if (html.indexOf('<option') !== -1) {
			html = html.replace(/\s*<option/g, '\n<option');
			html = html.replace(/\s*<\/select>/g, '\n</select>');
		}
	
		if (html.indexOf('<hr') !== -1) {
			html = html.replace(/\s*<hr( [^>]*)?>\s*/g, '\n\n<hr$1>\n\n');
		}
	
		if (html.indexOf('<object') !== -1) {
			html = html.replace(/<object[\s\S]+?<\/object>/g, function (a) {
				return a.replace(/[\r\n]+/g, '');
			});
		}
	
		// Unmark special paragraph closing tags
		html = html.replace(/<\/p#>/g, '</p>\n');
		html = html.replace(/\s*(<p [^>]+>[\s\S]*?<\/p>)/g, '\n$1');
	
		// Trim whitespace
		html = html.replace(/^\s+/, '');
		html = html.replace(/[\s\u00a0]+$/, '');
	
		// put back the line breaks in pre|script
		if (preserve_linebreaks) {
			html = html.replace(/<wp-line-break>/g, '\n');
		}
	
		// and the <br> tags in captions
		if (preserve_br) {
			html = html.replace(/<wp-temp-br([^>]*)>/g, '<br$1>');
		}
	
		return html;
	}
	
	function capitalPDangit(input) {
		if ('string' !== typeof input) {
			throw new Error('capitalPDangit expects a string as input');
		}
		return input.replace(/Wordpress/g, 'WordPress');
	}
	
	/**
	 * Parses HTML by using the browser's built in string to DOM converter.
	 *
	 * @param  {String} html HTML String to be converted into DOM fragment
	 * @return {Dom} DOM fragment that can be queried using built in browser functions.
	 */
	function parseHtml(html) {
		if (html && html.querySelector) {
			return html;
		}
	
		if ('string' !== typeof html) {
			return null;
		}
	
		// Element is a string and should be parsed
		var el = document.createElement('div');
		el.innerHTML = html;
	
		var elements = el.children;
		var fragment = document.createDocumentFragment();
	
		// From https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild:
		// "If the given child is a reference to an existing node in the document,
		// appendChild() moves it from its current position to the new position."
		// i.e. `elements` nodes will move to `fragment`'s children.
		while (elements.length > 0) {
			fragment.appendChild(elements[0]);
		}
	
		return fragment;
	}
	
	var nbsp = String.fromCharCode(160);
	
	/**
	 * Unescape HTML entities, then replace spaces with &nbsp;.
	 *
	 * This helper is used to transform tag names for rendering by React.  We need
	 * to decode HTML entities in tag names because the REST API returns them
	 * already escaped, and React will escape them again.  Also transform spaces to
	 * non-breaking spaces so that tags like 'a   b' will display correctly (not
	 * using '&nbsp;' for this because again, React will escape whatever we pass
	 * in).
	 *
	 * @param	{String} str String to unescape in preparation for React rendering
	 * @return	{String} Transformed string
	 */
	function unescapeAndFormatSpaces(str) {
		return decodeEntities(str).replace(/ /g, nbsp);
	}
	
	module.exports = {
		decodeEntities: decodeEntities,
		interpose: interpose,
		stripHTML: stripHTML,
		preventWidows: preventWidows,
		wpautop: wpautop,
		removep: removep,
		capitalPDangit: capitalPDangit,
		parseHtml: parseHtml,
		unescapeAndFormatSpaces: unescapeAndFormatSpaces
	};

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	var charsEndIndex = __webpack_require__(500),
	    charsStartIndex = __webpack_require__(501),
	    stringToArray = __webpack_require__(412),
	    toString = __webpack_require__(156);
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/**
	 * Removes leading and trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trim('  abc  ');
	 * // => 'abc'
	 *
	 * _.trim('-_-abc-_-', '_-');
	 * // => 'abc'
	 *
	 * _.map(['  foo  ', '  bar  '], _.trim);
	 * // => ['foo', 'bar']
	 */
	function trim(string, chars, guard) {
	  string = toString(string);
	  if (!string) {
	    return string;
	  }
	  if (guard || chars === undefined) {
	    return string.replace(reTrim, '');
	  }
	  chars = (chars + '');
	  if (!chars) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      chrSymbols = stringToArray(chars);
	
	  return strSymbols
	    .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)
	    .join('');
	}
	
	module.exports = trim;


/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(238);
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;
	
	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsEndIndex;


/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(238);
	
	/**
	 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the first unmatched string symbol.
	 */
	function charsStartIndex(strSymbols, chrSymbols) {
	  var index = -1,
	      length = strSymbols.length;
	
	  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsStartIndex;


/***/ },
/* 502 */
/***/ function(module, exports) {

	module.exports = require("striptags");

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(504).decode;

/***/ },
/* 504 */
/***/ function(module, exports) {

	module.exports = require("he");

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactHelmet = __webpack_require__(506);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var debug = (0, _debug2.default)('calypso:layout:head'); /** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	var Head = function Head(_ref) {
		var title = _ref.title;
		var description = _ref.description;
		var canonicalUrl = _ref.canonicalUrl;
		var children = _ref.children;
		return _react2.default.createElement(
			'div',
			null,
			_react2.default.createElement(_reactHelmet2.default, {
				title: title,
				meta: [description ? { name: 'description', property: 'og:description', content: description } : {}, title ? { property: 'og:title', content: title } : {}, canonicalUrl ? { property: 'og:url', content: canonicalUrl } : {}],
				link: [canonicalUrl ? { rel: 'canonical', href: canonicalUrl } : {}],
				onChangeClientState: debug
			}),
			children
		);
	};
	
	Head.displayName = 'Head';
	Head.propTypes = {
		title: _react2.default.PropTypes.string,
		description: _react2.default.PropTypes.string,
		canonicalUrl: _react2.default.PropTypes.string,
		children: _react2.default.PropTypes.node
	};
	
	exports.default = Head;
	module.exports = exports['default'];

/***/ },
/* 506 */
/***/ function(module, exports) {

	module.exports = require("react-helmet");

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(170);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _head = __webpack_require__(505);
	
	var _head2 = _interopRequireDefault(_head);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/** @ssr-ready **/
	
	/**
	 * External dependencies
	 */
	
	
	var ThemesHead = function ThemesHead(_ref) {
		var title = _ref.title;
		var tier = _ref.tier;
		var children = _ref.children;
		return _react2.default.createElement(
			_head2.default,
			{
				title: title ? title : get('title', tier),
				description: get('description', tier),
				canonicalUrl: get('canonicalUrl', tier) },
			children
		);
	};
	
	/**
	 * Internal dependencies
	 */
	
	
	ThemesHead.propTypes = {
		title: _react2.default.PropTypes.string,
		tier: _react2.default.PropTypes.string
	};
	
	var themesMeta = {
		all: {
			title: 'WordPress Themes — WordPress.com',
			description: 'Beautiful, responsive, free and premium WordPress themes for your photography site, portfolio, magazine, business website, or blog.',
			canonicalUrl: 'https://wordpress.com/design'
		},
		free: {
			title: 'Free WordPress Themes — WordPress.com',
			description: 'Discover Free WordPress Themes on the WordPress.com Theme Showcase.',
			canonicalUrl: 'https://wordpress.com/design/type/free'
		},
		premium: {
			title: 'Premium WordPress Themes — WordPress.com',
			description: 'Discover Premium WordPress Themes on the WordPress.com Theme Showcase.',
			canonicalUrl: 'https://wordpress.com/design/type/premium'
		}
	};
	
	function get(key, tier) {
		return tier in themesMeta && key in themesMeta[tier] ? themesMeta[tier][key] : '';
	}
	
	exports.default = ThemesHead;
	module.exports = exports['default'];

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function (router) {
		if (_config2.default.isEnabled('manage/themes')) {
			router('/design', _controller.makeLayout);
			router('/design/type/:tier', _controller.makeLayout);
			router('/design/*', _controller.makeLayout); // Needed so direct hits don't result in a 404.
		}
	};
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _controller = __webpack_require__(169);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports['default'];

	// `logged-out` middleware isn't SSR-compliant yet, but we can at least render
	// the layout.
	// FIXME: Also create loggedOut/multiSite/singleSite elements, depending on route.

	/**
	 * Internal dependencies
	 */

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.serverRouter = serverRouter;
	
	var _render = __webpack_require__(510);
	
	var _state = __webpack_require__(660);
	
	var _controller = __webpack_require__(169);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function serverRouter(expressApp, setUpRoute, section) {
		return function (route) {
			for (var _len = arguments.length, middlewares = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
				middlewares[_key - 1] = arguments[_key];
			}
	
			expressApp.get(route, setUpRoute, combineMiddlewares.apply(undefined, [(0, _controller.setSection)(section)].concat(middlewares)), _render.serverRender);
		};
	} /**
	   * Internal dependencies
	   */
	
	
	function combineMiddlewares() {
		for (var _len2 = arguments.length, middlewares = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
			middlewares[_key2] = arguments[_key2];
		}
	
		return function (req, res, next) {
			req.context = getEnhancedContext(req);
			applyMiddlewares.apply(undefined, [req.context].concat(middlewares, [function () {
				next();
			}]));
		};
	}
	
	// TODO: Maybe merge into getDefaultContext().
	function getEnhancedContext(req) {
		return (0, _assign2.default)({}, req.context, {
			isLoggedIn: req.cookies.wordpress_logged_in,
			isServerSide: true,
			path: req.url,
			pathname: req.path,
			params: req.params,
			query: req.query,
			store: (0, _state.createReduxStore)()
		});
	}
	
	function applyMiddlewares(context) {
		for (var _len3 = arguments.length, middlewares = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
			middlewares[_key3 - 1] = arguments[_key3];
		}
	
		var liftedMiddlewares = middlewares.map(function (middleware) {
			return function (next) {
				return middleware(context, next);
			};
		});
		compose.apply(undefined, (0, _toConsumableArray3.default)(liftedMiddlewares))();
	}
	
	function compose() {
		for (var _len4 = arguments.length, functions = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
			functions[_key4] = arguments[_key4];
		}
	
		return functions.reduceRight(function (composed, f) {
			return function (next) {
				return f(composed);
			} // eslint-disable-line no-unused-vars
			;
		}, function () {});
	}

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	exports.render = render;
	exports.serverRender = serverRender;
	
	var _server = __webpack_require__(511);
	
	var _server2 = _interopRequireDefault(_server);
	
	var _reactHelmet = __webpack_require__(506);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _superagent = __webpack_require__(658);
	
	var _superagent2 = _interopRequireDefault(_superagent);
	
	var _lruCache = __webpack_require__(659);
	
	var _lruCache2 = _interopRequireDefault(_lruCache);
	
	var _pick = __webpack_require__(418);
	
	var _pick2 = _interopRequireDefault(_pick);
	
	var _debug = __webpack_require__(6);
	
	var _debug2 = _interopRequireDefault(_debug);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var debug = (0, _debug2.default)('calypso:server-render');
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	
	var markupCache = new _lruCache2.default({ max: 3000 });
	
	function bumpStat(group, name) {
		var statUrl = 'http://pixel.wp.com/g.gif?v=wpcom-no-pv&x_' + group + '=' + name + '&t=' + Math.random();
	
		if ((0, _config2.default)('env') === 'production') {
			_superagent2.default.get(statUrl).end();
		}
	}
	
	/**
	* Render and cache supplied React element to a markup string.
	* Cache is keyed by stringified element by default.
	*
	* @param {object} element - React element to be rendered to html
	* @param {string} key - (optional) custom key
	* @return {object} context object with `renderedLayout` field populated
	*/
	function render(element) {
		var key = arguments.length <= 1 || arguments[1] === undefined ? (0, _stringify2.default)(element) : arguments[1];
	
		try {
			var startTime = Date.now();
			debug('cache access for key', key);
	
			var context = markupCache.get(key);
			if (!context) {
				bumpStat('calypso-ssr', 'loggedout-design-cache-miss');
				debug('cache miss for key', key);
				var renderedLayout = _server2.default.renderToString(element);
				context = { renderedLayout: renderedLayout };
	
				if (_reactHelmet2.default.peek()) {
					var helmetData = _reactHelmet2.default.rewind();
					(0, _assign2.default)(context, {
						helmetTitle: helmetData.title,
						helmetMeta: helmetData.meta,
						helmetLink: helmetData.link
					});
				}
				markupCache.set(key, context);
			}
			var rtsTimeMs = Date.now() - startTime;
	
			if (rtsTimeMs > 15) {
				// We think that renderToString should generally
				// never take more than 15ms. We're probably wrong.
				bumpStat('calypso-ssr', 'loggedout-design-over-15ms-rendertostring');
			}
	
			return context;
		} catch (ex) {
			if ((0, _config2.default)('env') === 'development') {
				throw ex;
			}
		}
		//todo: render an error?
	}
	
	function serverRender(req, res) {
		var context = req.context;
	
		if (context.lang !== (0, _config2.default)('i18n_default_locale_slug')) {
			context.i18nLocaleScript = '//widgets.wp.com/languages/calypso/' + context.lang + '.js';
		}
	
		if (_config2.default.isEnabled('server-side-rendering') && context.store && context.layout && !context.user) {
			context.initialReduxState = (0, _pick2.default)(context.store.getState(), 'ui', 'themes');
			var key = context.renderCacheKey || (0, _stringify2.default)(context.layout);
			(0, _assign2.default)(context, render(context.layout, key));
		}
	
		if (_config2.default.isEnabled('desktop')) {
			res.render('desktop.jade', context);
		} else {
			res.render('index.jade', context);
		}
	}

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(512);


/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */
	
	'use strict';
	
	var ReactDefaultInjection = __webpack_require__(513);
	var ReactServerRendering = __webpack_require__(654);
	var ReactVersion = __webpack_require__(657);
	
	ReactDefaultInjection.inject();
	
	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};
	
	module.exports = ReactDOMServer;

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(514);
	var ChangeEventPlugin = __webpack_require__(536);
	var ClientReactRootIndex = __webpack_require__(547);
	var DefaultEventPluginOrder = __webpack_require__(548);
	var EnterLeaveEventPlugin = __webpack_require__(549);
	var ExecutionEnvironment = __webpack_require__(527);
	var HTMLDOMPropertyConfig = __webpack_require__(583);
	var ReactBrowserComponentMixin = __webpack_require__(584);
	var ReactComponentBrowserEnvironment = __webpack_require__(586);
	var ReactDefaultBatchingStrategy = __webpack_require__(599);
	var ReactDOMComponent = __webpack_require__(600);
	var ReactDOMTextComponent = __webpack_require__(625);
	var ReactEventListener = __webpack_require__(626);
	var ReactInjection = __webpack_require__(629);
	var ReactInstanceHandles = __webpack_require__(563);
	var ReactMount = __webpack_require__(554);
	var ReactReconcileTransaction = __webpack_require__(633);
	var SelectEventPlugin = __webpack_require__(638);
	var ServerReactRootIndex = __webpack_require__(639);
	var SimpleEventPlugin = __webpack_require__(640);
	var SVGDOMPropertyConfig = __webpack_require__(649);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	
	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(650);
	      ReactDefaultPerf.start();
	    }
	  }
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventPropagators = __webpack_require__(518);
	var ExecutionEnvironment = __webpack_require__(527);
	var FallbackCompositionState = __webpack_require__(528);
	var SyntheticCompositionEvent = __webpack_require__(532);
	var SyntheticInputEvent = __webpack_require__(534);
	
	var keyOf = __webpack_require__(535);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(516);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;

/***/ },
/* 517 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function (condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error('Invariant Violation: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventPluginHub = __webpack_require__(519);
	
	var warning = __webpack_require__(523);
	
	var accumulateInto = __webpack_require__(525);
	var forEachAccumulated = __webpack_require__(526);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var EventPluginRegistry = __webpack_require__(520);
	var EventPluginUtils = __webpack_require__(521);
	var ReactErrorUtils = __webpack_require__(522);
	
	var accumulateInto = __webpack_require__(525);
	var forEachAccumulated = __webpack_require__(526);
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;
	
	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,
	
	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },
	
	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginRegistry.registrationNameModules,
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }
	
	      delete listenerBank[registrationName][id];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var ReactErrorUtils = __webpack_require__(522);
	
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ },
/* 522 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(524);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;

/***/ },
/* 524 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */
	
	"use strict";
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ },
/* 526 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;

/***/ },
/* 527 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(529);
	
	var assign = __webpack_require__(530);
	var getTextContentAccessor = __webpack_require__(531);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ },
/* 530 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */
	
	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign
	
	'use strict';
	
	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }
	
	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }
	
	    var from = Object(nextSource);
	
	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.
	
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }
	
	  return to;
	}
	
	module.exports = assign;

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(533);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(529);
	
	var assign = __webpack_require__(530);
	var emptyFunction = __webpack_require__(524);
	var warning = __webpack_require__(523);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	  this.target = nativeEventTarget;
	  this.currentTarget = nativeEventTarget;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}
	
	assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(533);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 535 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";
	
	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventPluginHub = __webpack_require__(519);
	var EventPropagators = __webpack_require__(518);
	var ExecutionEnvironment = __webpack_require__(527);
	var ReactUpdates = __webpack_require__(537);
	var SyntheticEvent = __webpack_require__(533);
	
	var getEventTarget = __webpack_require__(544);
	var isEventSupported = __webpack_require__(545);
	var isTextInputElement = __webpack_require__(546);
	var keyOf = __webpack_require__(535);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}
	
	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}
	
	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}
	
	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	
	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}
	
	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	
	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }
	
	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(538);
	var PooledClass = __webpack_require__(529);
	var ReactPerf = __webpack_require__(539);
	var ReactReconciler = __webpack_require__(540);
	var Transaction = __webpack_require__(543);
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	
	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}
	
	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(529);
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;

/***/ },
/* 539 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,
	
	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,
	
	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },
	
	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },
	
	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};
	
	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}
	
	module.exports = ReactPerf;

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(541);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(542);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;

/***/ },
/* 544 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 546 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 547 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var nextReactRootIndex = 0;
	
	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};
	
	module.exports = ClientReactRootIndex;

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(535);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventPropagators = __webpack_require__(518);
	var SyntheticMouseEvent = __webpack_require__(550);
	
	var ReactMount = __webpack_require__(554);
	var keyOf = __webpack_require__(535);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var extractedEvents = [null, null];
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
	
	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;
	
	    return extractedEvents;
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(551);
	var ViewportMetrics = __webpack_require__(552);
	
	var getEventModifierState = __webpack_require__(553);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(533);
	
	var getEventTarget = __webpack_require__(544);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 552 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 553 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(555);
	var ReactBrowserEventEmitter = __webpack_require__(556);
	var ReactCurrentOwner = __webpack_require__(558);
	var ReactDOMFeatureFlags = __webpack_require__(559);
	var ReactElement = __webpack_require__(560);
	var ReactEmptyComponentRegistry = __webpack_require__(562);
	var ReactInstanceHandles = __webpack_require__(563);
	var ReactInstanceMap = __webpack_require__(565);
	var ReactMarkupChecksum = __webpack_require__(566);
	var ReactPerf = __webpack_require__(539);
	var ReactReconciler = __webpack_require__(540);
	var ReactUpdateQueue = __webpack_require__(568);
	var ReactUpdates = __webpack_require__(537);
	
	var assign = __webpack_require__(530);
	var emptyObject = __webpack_require__(569);
	var containsNode = __webpack_require__(570);
	var instantiateReactComponent = __webpack_require__(573);
	var invariant = __webpack_require__(517);
	var setInnerHTML = __webpack_require__(581);
	var shouldUpdateReactComponent = __webpack_require__(578);
	var validateDOMNesting = __webpack_require__(582);
	var warning = __webpack_require__(523);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);
	
	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};
	
	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}
	
	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}
	
	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;
	
	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }
	
	  return id;
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}
	
	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;
	
	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}
	
	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}
	
	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
	
	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}
	
	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	
	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);
	
	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }
	
	    return prevComponent;
	  },
	
	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	
	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },
	
	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;
	
	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var prevComponent = instancesByReactRootID[getReactRootID(container)];
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }
	
	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },
	
	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];
	
	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }
	
	    return container;
	  },
	
	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },
	
	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },
	
	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;
	
	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }
	
	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;
	
	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;
	
	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.
	
	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }
	
	        child = child.nextSibling;
	      }
	
	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;
	
	        return targetChild;
	      }
	    }
	
	    firstChildren.length = 0;
	
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },
	
	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },
	
	  ownerDocumentContextKey: ownerDocumentContextKey,
	
	  /**
	   * React ID utilities.
	   */
	
	  getReactRootID: getReactRootID,
	
	  getID: getID,
	
	  setID: setID,
	
	  getNode: getNode,
	
	  getNodeFromInstance: getNodeFromInstance,
	
	  isValid: isValid,
	
	  purgeID: purgeID
	};
	
	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});
	
	module.exports = ReactMount;

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	
	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventPluginHub = __webpack_require__(519);
	var EventPluginRegistry = __webpack_require__(520);
	var ReactEventEmitterMixin = __webpack_require__(557);
	var ReactPerf = __webpack_require__(539);
	var ViewportMetrics = __webpack_require__(552);
	
	var assign = __webpack_require__(530);
	var isEventSupported = __webpack_require__(545);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },
	
	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginHub.registrationNameModules,
	
	  putListener: EventPluginHub.putListener,
	
	  getListener: EventPluginHub.getListener,
	
	  deleteListener: EventPluginHub.deleteListener,
	
	  deleteAllListeners: EventPluginHub.deleteAllListeners
	
	});
	
	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(519);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 558 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 559 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(558);
	
	var assign = __webpack_require__(530);
	var canDefineProperty = __webpack_require__(561);
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }
	
	  return element;
	};
	
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);
	
	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	
	  return newElement;
	};
	
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;

/***/ },
/* 561 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;

/***/ },
/* 562 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */
	
	'use strict';
	
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};
	
	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}
	
	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}
	
	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}
	
	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};
	
	module.exports = ReactEmptyComponentRegistry;

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactRootIndex = __webpack_require__(564);
	
	var invariant = __webpack_require__(517);
	
	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;
	
	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;
	
	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}
	
	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}
	
	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}
	
	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}
	
	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}
	
	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}
	
	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}
	
	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {
	
	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },
	
	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },
	
	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },
	
	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },
	
	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },
	
	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },
	
	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },
	
	  getFirstCommonAncestorID: getFirstCommonAncestorID,
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,
	
	  isAncestorIDOf: isAncestorIDOf,
	
	  SEPARATOR: SEPARATOR
	
	};
	
	module.exports = ReactInstanceHandles;

/***/ },
/* 564 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};
	
	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};
	
	module.exports = ReactRootIndex;

/***/ },
/* 565 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(567);
	
	var TAG_END = /\/?>/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 567 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(558);
	var ReactElement = __webpack_require__(560);
	var ReactInstanceMap = __webpack_require__(565);
	var ReactUpdates = __webpack_require__(537);
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },
	
	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },
	
	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }
	
	};
	
	module.exports = ReactUpdateQueue;

/***/ },
/* 569 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isTextNode = __webpack_require__(571);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;
	
	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;
	
	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isNode = __webpack_require__(572);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 572 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';
	
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCompositeComponent = __webpack_require__(574);
	var ReactEmptyComponent = __webpack_require__(579);
	var ReactNativeComponent = __webpack_require__(580);
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }
	
	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(575);
	var ReactCurrentOwner = __webpack_require__(558);
	var ReactElement = __webpack_require__(560);
	var ReactInstanceMap = __webpack_require__(565);
	var ReactPerf = __webpack_require__(539);
	var ReactPropTypeLocations = __webpack_require__(576);
	var ReactPropTypeLocationNames = __webpack_require__(577);
	var ReactReconciler = __webpack_require__(540);
	var ReactUpdateQueue = __webpack_require__(568);
	
	var assign = __webpack_require__(530);
	var emptyObject = __webpack_require__(569);
	var invariant = __webpack_require__(517);
	var shouldUpdateReactComponent = __webpack_require__(578);
	var warning = __webpack_require__(523);
	
	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	
	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedComponent = null;
	
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;
	
	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    // Initialize the public class
	    var inst;
	    var renderedElement;
	
	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);
	
	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }
	
	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    this._renderedComponent = this._instantiateReactComponent(renderedElement);
	
	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }
	
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }
	
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },
	
	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	
	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }
	
	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	
	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;
	
	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.
	
	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	
	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }
	
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);
	
	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },
	
	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(516);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 577 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 578 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(560);
	var ReactEmptyComponentRegistry = __webpack_require__(562);
	var ReactReconciler = __webpack_require__(540);
	
	var assign = __webpack_require__(530);
	
	var placeholderElement;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};
	
	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    ReactEmptyComponentRegistry.registerNullComponentID(rootID);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */
	
	'use strict';
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	
	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}
	
	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};
	
	module.exports = ReactNativeComponent;

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};
	
	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var assign = __webpack_require__(530);
	var emptyFunction = __webpack_require__(524);
	var warning = __webpack_require__(523);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    parentTag: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.parentTag = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };
	
	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(555);
	var ExecutionEnvironment = __webpack_require__(527);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,
	
	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: null,
	    autoCorrect: null,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoCapitalize: 'autocapitalize',
	    autoComplete: 'autocomplete',
	    autoCorrect: 'autocorrect',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */
	
	'use strict';
	
	var ReactInstanceMap = __webpack_require__(565);
	
	var findDOMNode = __webpack_require__(585);
	var warning = __webpack_require__(523);
	
	var didWarnKey = '_getDOMNodeDidWarn';
	
	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};
	
	module.exports = ReactBrowserComponentMixin;

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(558);
	var ReactInstanceMap = __webpack_require__(565);
	var ReactMount = __webpack_require__(554);
	
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}
	
	module.exports = findDOMNode;

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(587);
	var ReactMount = __webpack_require__(554);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(588);
	var DOMPropertyOperations = __webpack_require__(597);
	var ReactMount = __webpack_require__(554);
	var ReactPerf = __webpack_require__(539);
	
	var invariant = __webpack_require__(517);
	
	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;
	
	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },
	
	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};
	
	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var Danger = __webpack_require__(589);
	var ReactMultiChildUpdateTypes = __webpack_require__(594);
	var ReactPerf = __webpack_require__(539);
	
	var setInnerHTML = __webpack_require__(581);
	var setTextContent = __webpack_require__(595);
	var invariant = __webpack_require__(517);
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	
	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);
	
	  parentNode.insertBefore(childNode, beforeChild);
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
	
	  updateTextContent: setTextContent,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;
	
	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;
	
	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;
	
	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;
	
	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }
	
	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }
	
	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});
	
	module.exports = DOMChildrenOperations;

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var createNodesFromMarkup = __webpack_require__(590);
	var emptyFunction = __webpack_require__(524);
	var getMarkupWrap = __webpack_require__(593);
	var invariant = __webpack_require__(517);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }
	
	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;
	
	          resultList[resultIndex] = renderNode;
	
	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }
	
	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;
	
	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;
	
	    return resultList;
	  },
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;
	
	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }
	
	};
	
	module.exports = Danger;

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var createArrayFromMixed = __webpack_require__(591);
	var getMarkupWrap = __webpack_require__(593);
	var invariant = __webpack_require__(517);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */
	
	'use strict';
	
	var toArray = __webpack_require__(592);
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(517);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	module.exports = toArray;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var invariant = __webpack_require__(517);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(516);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	var escapeTextContentForBrowser = __webpack_require__(596);
	var setInnerHTML = __webpack_require__(581);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 596 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};
	
	var ESCAPE_REGEX = /[&><"']/g;
	
	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(555);
	var ReactPerf = __webpack_require__(539);
	
	var quoteAttributeValueForBrowser = __webpack_require__(598);
	var warning = __webpack_require__(523);
	
	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};
	
	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }
	
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});
	
	module.exports = DOMPropertyOperations;

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(596);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var ReactUpdates = __webpack_require__(537);
	var Transaction = __webpack_require__(543);
	
	var assign = __webpack_require__(530);
	var emptyFunction = __webpack_require__(524);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var AutoFocusUtils = __webpack_require__(601);
	var CSSPropertyOperations = __webpack_require__(603);
	var DOMProperty = __webpack_require__(555);
	var DOMPropertyOperations = __webpack_require__(597);
	var EventConstants = __webpack_require__(515);
	var ReactBrowserEventEmitter = __webpack_require__(556);
	var ReactComponentBrowserEnvironment = __webpack_require__(586);
	var ReactDOMButton = __webpack_require__(611);
	var ReactDOMInput = __webpack_require__(612);
	var ReactDOMOption = __webpack_require__(616);
	var ReactDOMSelect = __webpack_require__(619);
	var ReactDOMTextarea = __webpack_require__(620);
	var ReactMount = __webpack_require__(554);
	var ReactMultiChild = __webpack_require__(621);
	var ReactPerf = __webpack_require__(539);
	var ReactUpdateQueue = __webpack_require__(568);
	
	var assign = __webpack_require__(530);
	var canDefineProperty = __webpack_require__(561);
	var escapeTextContentForBrowser = __webpack_require__(596);
	var invariant = __webpack_require__(517);
	var isEventSupported = __webpack_require__(545);
	var keyOf = __webpack_require__(535);
	var setInnerHTML = __webpack_require__(581);
	var setTextContent = __webpack_require__(595);
	var shallowEqual = __webpack_require__(624);
	var validateDOMNesting = __webpack_require__(582);
	var warning = __webpack_require__(523);
	
	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	
	var ELEMENT_NODE_TYPE = 1;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}
	
	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}
	
	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}
	
	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}
	
	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}
	
	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;
	
	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}
	
	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  construct: function (element) {
	    this._currentElement = element;
	  },
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }
	
	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }
	
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },
	
	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);
	
	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }
	
	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }
	
	};
	
	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});
	
	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(554);
	
	var findDOMNode = __webpack_require__(585);
	var focusNode = __webpack_require__(602);
	
	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};
	
	var AutoFocusUtils = {
	  Mixin: Mixin,
	
	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 602 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(604);
	var ExecutionEnvironment = __webpack_require__(527);
	var ReactPerf = __webpack_require__(539);
	
	var camelizeStyleName = __webpack_require__(605);
	var dangerousStyleValue = __webpack_require__(607);
	var hyphenateStyleName = __webpack_require__(608);
	var memoizeStringOnly = __webpack_require__(610);
	var warning = __webpack_require__(523);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	
	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };
	
	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});
	
	module.exports = CSSPropertyOperations;

/***/ },
/* 604 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(606);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 606 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */
	
	"use strict";
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(604);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(609);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 609 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */
	
	'use strict';
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 610 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 611 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }
	
	    return nativeProps;
	  }
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(587);
	var LinkedValueUtils = __webpack_require__(613);
	var ReactMount = __webpack_require__(554);
	var ReactUpdates = __webpack_require__(537);
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	
	var instancesByReactID = {};
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },
	
	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactPropTypes = __webpack_require__(614);
	var ReactPropTypeLocations = __webpack_require__(576);
	
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(560);
	var ReactPropTypeLocationNames = __webpack_require__(577);
	
	var emptyFunction = __webpack_require__(524);
	var getIteratorFn = __webpack_require__(615);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 615 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(617);
	var ReactDOMSelect = __webpack_require__(619);
	
	var assign = __webpack_require__(530);
	var warning = __webpack_require__(523);
	
	var valueContextKey = ReactDOMSelect.valueContextKey;
	
	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }
	
	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];
	
	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = '';
	
	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });
	
	    nativeProps.children = content;
	    return nativeProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(529);
	var ReactElement = __webpack_require__(560);
	
	var emptyFunction = __webpack_require__(524);
	var traverseAllChildren = __webpack_require__(618);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(558);
	var ReactElement = __webpack_require__(560);
	var ReactInstanceHandles = __webpack_require__(563);
	
	var getIteratorFn = __webpack_require__(615);
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};
	
	var userProvidedKeyEscapeRegex = /[=.:]/g;
	
	var didWarnAboutMaps = false;
	
	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}
	
	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(613);
	var ReactMount = __webpack_require__(554);
	var ReactUpdates = __webpack_require__(537);
	
	var assign = __webpack_require__(530);
	var warning = __webpack_require__(523);
	
	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, props, value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,
	
	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },
	
	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(613);
	var ReactDOMIDOperations = __webpack_require__(587);
	var ReactUpdates = __webpack_require__(537);
	
	var assign = __webpack_require__(530);
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }
	
	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);
	
	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(575);
	var ReactMultiChildUpdateTypes = __webpack_require__(594);
	
	var ReactCurrentOwner = __webpack_require__(558);
	var ReactReconciler = __webpack_require__(540);
	var ReactChildReconciler = __webpack_require__(622);
	
	var flattenChildren = __webpack_require__(623);
	
	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;
	
	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];
	
	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];
	
	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}
	
	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },
	
	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },
	
	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;

/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(540);
	
	var instantiateReactComponent = __webpack_require__(573);
	var shouldUpdateReactComponent = __webpack_require__(578);
	var traverseAllChildren = __webpack_require__(618);
	var warning = __webpack_require__(523);
	
	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */
	
	'use strict';
	
	var traverseAllChildren = __webpack_require__(618);
	var warning = __webpack_require__(523);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}
	
	module.exports = flattenChildren;

/***/ },
/* 624 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(588);
	var DOMPropertyOperations = __webpack_require__(597);
	var ReactComponentBrowserEnvironment = __webpack_require__(586);
	var ReactMount = __webpack_require__(554);
	
	var assign = __webpack_require__(530);
	var escapeTextContentForBrowser = __webpack_require__(596);
	var setTextContent = __webpack_require__(595);
	var validateDOMNesting = __webpack_require__(582);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};
	
	assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;
	
	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },
	
	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventListener = __webpack_require__(627);
	var ExecutionEnvironment = __webpack_require__(527);
	var PooledClass = __webpack_require__(529);
	var ReactInstanceHandles = __webpack_require__(563);
	var ReactMount = __webpack_require__(554);
	var ReactUpdates = __webpack_require__(537);
	
	var assign = __webpack_require__(530);
	var getEventTarget = __webpack_require__(544);
	var getUnboundedScrollPosition = __webpack_require__(628);
	
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }
	
	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}
	
	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);
	
	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);
	
	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(524);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function () {}
	};
	
	module.exports = EventListener;

/***/ },
/* 628 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(555);
	var EventPluginHub = __webpack_require__(519);
	var ReactComponentEnvironment = __webpack_require__(575);
	var ReactClass = __webpack_require__(630);
	var ReactEmptyComponent = __webpack_require__(579);
	var ReactBrowserEventEmitter = __webpack_require__(556);
	var ReactNativeComponent = __webpack_require__(580);
	var ReactPerf = __webpack_require__(539);
	var ReactRootIndex = __webpack_require__(564);
	var ReactUpdates = __webpack_require__(537);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var ReactComponent = __webpack_require__(631);
	var ReactElement = __webpack_require__(560);
	var ReactPropTypeLocations = __webpack_require__(576);
	var ReactPropTypeLocationNames = __webpack_require__(577);
	var ReactNoopUpdateQueue = __webpack_require__(632);
	
	var assign = __webpack_require__(530);
	var emptyObject = __webpack_require__(569);
	var invariant = __webpack_require__(517);
	var keyMirror = __webpack_require__(516);
	var keyOf = __webpack_require__(535);
	var warning = __webpack_require__(523);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}
	
	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	
	  var proto = Constructor.prototype;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    validateMethodOverride(proto, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;
	
	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};
	
	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;

/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var ReactNoopUpdateQueue = __webpack_require__(632);
	
	var canDefineProperty = __webpack_require__(561);
	var emptyObject = __webpack_require__(569);
	var invariant = __webpack_require__(517);
	var warning = __webpack_require__(523);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(523);
	
	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }
	
	};
	
	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(538);
	var PooledClass = __webpack_require__(529);
	var ReactBrowserEventEmitter = __webpack_require__(556);
	var ReactDOMFeatureFlags = __webpack_require__(559);
	var ReactInputSelection = __webpack_require__(634);
	var Transaction = __webpack_require__(543);
	
	var assign = __webpack_require__(530);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(635);
	
	var containsNode = __webpack_require__(570);
	var focusNode = __webpack_require__(602);
	var getActiveElement = __webpack_require__(637);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var getNodeForCharacterOffset = __webpack_require__(636);
	var getTextContentAccessor = __webpack_require__(531);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 636 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 637 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not yet defined.
	 */
	'use strict';
	
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventPropagators = __webpack_require__(518);
	var ExecutionEnvironment = __webpack_require__(527);
	var ReactInputSelection = __webpack_require__(634);
	var SyntheticEvent = __webpack_require__(533);
	
	var getActiveElement = __webpack_require__(637);
	var isTextInputElement = __webpack_require__(546);
	var keyOf = __webpack_require__(535);
	var shallowEqual = __webpack_require__(624);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 639 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
	
	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};
	
	module.exports = ServerReactRootIndex;

/***/ },
/* 640 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(515);
	var EventListener = __webpack_require__(627);
	var EventPropagators = __webpack_require__(518);
	var ReactMount = __webpack_require__(554);
	var SyntheticClipboardEvent = __webpack_require__(641);
	var SyntheticEvent = __webpack_require__(533);
	var SyntheticFocusEvent = __webpack_require__(642);
	var SyntheticKeyboardEvent = __webpack_require__(643);
	var SyntheticMouseEvent = __webpack_require__(550);
	var SyntheticDragEvent = __webpack_require__(646);
	var SyntheticTouchEvent = __webpack_require__(647);
	var SyntheticUIEvent = __webpack_require__(551);
	var SyntheticWheelEvent = __webpack_require__(648);
	
	var emptyFunction = __webpack_require__(524);
	var getEventCharCode = __webpack_require__(644);
	var invariant = __webpack_require__(517);
	var keyOf = __webpack_require__(535);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;

/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(533);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(551);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(551);
	
	var getEventCharCode = __webpack_require__(644);
	var getEventKey = __webpack_require__(645);
	var getEventModifierState = __webpack_require__(553);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 644 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(644);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(550);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(551);
	
	var getEventModifierState = __webpack_require__(553);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(550);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(555);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(555);
	var ReactDefaultPerfAnalysis = __webpack_require__(651);
	var ReactMount = __webpack_require__(554);
	var ReactPerf = __webpack_require__(539);
	
	var performanceNow = __webpack_require__(652);
	
	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}
	
	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}
	
	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,
	
	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }
	
	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },
	
	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },
	
	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },
	
	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },
	
	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },
	
	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },
	
	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      var totalTime;
	      var rv;
	      var start;
	
	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {
	
	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }
	
	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';
	
	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
	
	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }
	
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }
	
	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };
	
	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};
	
	module.exports = ReactDefaultPerf;

/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */
	
	'use strict';
	
	var assign = __webpack_require__(530);
	
	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
	};
	
	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}
	
	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}
	
	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;
	
	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });
	
	  return arr;
	}
	
	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;
	
	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }
	
	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }
	
	      var displayName = measurement.displayNames[id];
	
	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;
	
	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };
	
	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });
	
	  return arr;
	}
	
	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}
	
	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};
	
	module.exports = ReactDefaultPerfAnalysis;

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */
	
	'use strict';
	
	var performance = __webpack_require__(653);
	var curPerformance = performance;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (!curPerformance || !curPerformance.now) {
	  curPerformance = Date;
	}
	
	var performanceNow = curPerformance.now.bind(curPerformance);
	
	module.exports = performanceNow;

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(527);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';
	
	var ReactDefaultBatchingStrategy = __webpack_require__(599);
	var ReactElement = __webpack_require__(560);
	var ReactInstanceHandles = __webpack_require__(563);
	var ReactMarkupChecksum = __webpack_require__(566);
	var ReactServerBatchingStrategy = __webpack_require__(655);
	var ReactServerRenderingTransaction = __webpack_require__(656);
	var ReactUpdates = __webpack_require__(537);
	
	var emptyObject = __webpack_require__(569);
	var instantiateReactComponent = __webpack_require__(573);
	var invariant = __webpack_require__(517);
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

/***/ },
/* 655 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};
	
	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(529);
	var CallbackQueue = __webpack_require__(538);
	var Transaction = __webpack_require__(543);
	
	var assign = __webpack_require__(530);
	var emptyFunction = __webpack_require__(524);
	
	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  close: emptyFunction
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 657 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '0.14.3';

/***/ },
/* 658 */
/***/ function(module, exports) {

	module.exports = require("superagent");

/***/ },
/* 659 */
/***/ function(module, exports) {

	module.exports = require("lru-cache");

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.reducer = undefined;
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	exports.createReduxStore = createReduxStore;
	
	var _reduxThunk = __webpack_require__(661);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(663);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(666);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	var _reducer5 = __webpack_require__(670);
	
	var _reducer6 = _interopRequireDefault(_reducer5);
	
	var _reducer7 = __webpack_require__(671);
	
	var _reducer8 = _interopRequireDefault(_reducer7);
	
	var _reducer9 = __webpack_require__(673);
	
	var _reducer10 = _interopRequireDefault(_reducer9);
	
	var _reducer11 = __webpack_require__(674);
	
	var _reducer12 = _interopRequireDefault(_reducer11);
	
	var _reducer13 = __webpack_require__(678);
	
	var _reducer14 = _interopRequireDefault(_reducer13);
	
	var _reducer15 = __webpack_require__(680);
	
	var _reducer16 = _interopRequireDefault(_reducer15);
	
	var _reducer17 = __webpack_require__(682);
	
	var _reducer18 = _interopRequireDefault(_reducer17);
	
	var _reducer19 = __webpack_require__(683);
	
	var _reducer20 = _interopRequireDefault(_reducer19);
	
	var _reducer21 = __webpack_require__(685);
	
	var _reducer22 = _interopRequireDefault(_reducer21);
	
	var _reducer23 = __webpack_require__(687);
	
	var _reducer24 = _interopRequireDefault(_reducer23);
	
	var _reducer25 = __webpack_require__(722);
	
	var _reducer26 = _interopRequireDefault(_reducer25);
	
	var _reducer27 = __webpack_require__(728);
	
	var _reducer28 = _interopRequireDefault(_reducer27);
	
	var _reducer29 = __webpack_require__(732);
	
	var _reducer30 = _interopRequireDefault(_reducer29);
	
	var _reducer31 = __webpack_require__(748);
	
	var _reducer32 = _interopRequireDefault(_reducer31);
	
	var _reducer33 = __webpack_require__(749);
	
	var _reducer34 = _interopRequireDefault(_reducer33);
	
	var _reducer35 = __webpack_require__(752);
	
	var _reducer36 = _interopRequireDefault(_reducer35);
	
	var _reducer37 = __webpack_require__(760);
	
	var _reducer38 = _interopRequireDefault(_reducer37);
	
	var _reducer39 = __webpack_require__(763);
	
	var _reducer40 = _interopRequireDefault(_reducer39);
	
	var _reducer41 = __webpack_require__(769);
	
	var _reducer42 = _interopRequireDefault(_reducer41);
	
	var _reducer43 = __webpack_require__(770);
	
	var _reducer44 = _interopRequireDefault(_reducer43);
	
	var _reducer45 = __webpack_require__(774);
	
	var _reducer46 = _interopRequireDefault(_reducer45);
	
	var _reducer47 = __webpack_require__(783);
	
	var _reducer48 = _interopRequireDefault(_reducer47);
	
	var _reducer49 = __webpack_require__(796);
	
	var _reducer50 = _interopRequireDefault(_reducer49);
	
	var _reducer51 = __webpack_require__(797);
	
	var _reducer52 = _interopRequireDefault(_reducer51);
	
	var _reducer53 = __webpack_require__(799);
	
	var _reducer54 = _interopRequireDefault(_reducer53);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	var reducer = exports.reducer = (0, _redux.combineReducers)({
		application: _reducer2.default,
		comments: _reducer4.default,
		componentsUsageStats: _reducer6.default,
		currentUser: _reducer8.default,
		documentHead: _reducer10.default,
		domains: _reducer12.default,
		googleAppsUsers: _reducer14.default,
		jetpackConnect: _reducer16.default,
		notices: _reducer18.default,
		plugins: _reducer26.default,
		plans: _reducer20.default,
		preferences: _reducer54.default,
		preview: _reducer22.default,
		posts: _reducer24.default,
		postTypes: _reducer28.default,
		reader: _reducer30.default,
		receipts: _reducer32.default,
		sharing: _reducer34.default,
		sites: _reducer36.default,
		siteSettings: _reducer38.default,
		stats: _reducer40.default,
		support: _reducer42.default,
		terms: _reducer44.default,
		themes: _reducer46.default,
		ui: _reducer48.default,
		users: _reducer50.default,
		wordads: _reducer52.default
	});
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	
	
	var middleware = [_reduxThunk2.default];
	
	// Analytics middleware currently only works in the browser
	if ((typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object') {
		middleware = [].concat((0, _toConsumableArray3.default)(middleware), [__webpack_require__(801).analyticsMiddleware]);
	}
	
	var createStoreWithMiddleware = _redux.applyMiddleware.apply(null, middleware);
	
	function createReduxStore() {
		var initialState = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
		if ((typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object' && window.app && window.app.isDebug && window.devToolsExtension) {
			createStoreWithMiddleware = (0, _redux.compose)(createStoreWithMiddleware, window.devToolsExtension());
		}
		return createStoreWithMiddleware(_redux.createStore)(reducer, initialState);
	}

/***/ },
/* 661 */
/***/ function(module, exports) {

	module.exports = require("redux-thunk");

/***/ },
/* 662 */
/***/ function(module, exports) {

	module.exports = require("redux");

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.connectionState = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _createReducer; /**
	                     * External dependencies
	                     */
	
	
	/**
	 * Internal dependencies
	 */
	
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var connectionState = exports.connectionState = (0, _utils.createReducer)('CHECKING', (_createReducer = {}, (0, _defineProperty3.default)(_createReducer, _actionTypes.CONNECTION_LOST, function () {
		return 'OFFLINE';
	}), (0, _defineProperty3.default)(_createReducer, _actionTypes.CONNECTION_RESTORED, function () {
		return 'ONLINE';
	}), _createReducer));
	
	exports.default = (0, _redux.combineReducers)({
		connectionState: connectionState
	});

/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.isValidStateWithSchema = isValidStateWithSchema;
	exports.createReducer = createReducer;
	
	var _tv = __webpack_require__(665);
	
	var _tv2 = _interopRequireDefault(_tv);
	
	var _actionTypes = __webpack_require__(174);
	
	var _warn = __webpack_require__(484);
	
	var _warn2 = _interopRequireDefault(_warn);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	
	/**
	 * Internal dependencies
	 */
	function isValidStateWithSchema(state, schema) {
		var checkForCycles = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
		var banUnknownProperties = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];
	
		var result = _tv2.default.validateResult(state, schema, checkForCycles, banUnknownProperties);
		if (!result.valid) {
			(0, _warn2.default)('state validation failed', state, result.error);
		}
		return result.valid;
	} /**
	   * External dependencies
	   */
	
	
	function createReducer() {
		var initialState = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	
		var _defaultHandlers;
	
		var handlers = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
		var schema = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
		var defaultHandlers = (_defaultHandlers = {}, (0, _defineProperty3.default)(_defaultHandlers, _actionTypes.SERIALIZE, function (state) {
			if (schema !== null) {
				return state;
			}
	
			return initialState;
		}), (0, _defineProperty3.default)(_defaultHandlers, _actionTypes.DESERIALIZE, function (state) {
			if (schema !== null && isValidStateWithSchema(state, schema)) {
				return state;
			}
	
			return initialState;
		}), _defaultHandlers);
	
		handlers = (0, _assign2.default)({}, defaultHandlers, handlers);
	
		return function () {
			var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
			var action = arguments[1];
			var type = action.type;
	
	
			if (handlers.hasOwnProperty(type)) {
				return handlers[type](state, action);
			}
	
			return state;
		};
	}

/***/ },
/* 665 */
/***/ function(module, exports) {

	module.exports = require("tv4");

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	exports.items = items;
	exports.requests = requests;
	exports.totalCommentsCount = totalCommentsCount;
	
	var _immutable = __webpack_require__(667);
	
	var _immutable2 = _interopRequireDefault(_immutable);
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(668);
	
	var _constants = __webpack_require__(669);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/***
	 * Creates a function that updates like count
	 * @param {Boolean} like true to like, false to unlike
	 * @returns {Function} function that updates like count for comment
	 */
	function getLikeSetter(_ref) {
		var _ref$like = _ref.like;
		var like = _ref$like === undefined ? true : _ref$like;
		var likeCount = _ref.likeCount;
	
		return function (comment) {
			return comment.set('i_like', like).update('like_count', function (count) {
				if (typeof likeCount !== 'undefined') {
					return likeCount;
				}
	
				return like ? count + 1 : count - 1;
			});
		};
	}
	
	/***
	 * Updates a specific state in the general state
	 * @param {Immutable.Map} state general state for all commentTargetId
	 * @param {Object} action action object
	 * @param {Number} action.siteId site identifier
	 * @param {Number} action.postId post identifier
	 * @param {Function|Object} updaterOrValue an updater function or a value
	 * @returns {Immutable.Map} new state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function updateSpecificState(state, action, updaterOrValue) {
		var id = (0, _utils.getCommentParentKey)(action.siteId, action.postId);
	
		if (typeof updaterOrValue === 'function') {
			return state.update(id, function (value) {
				return updaterOrValue(value);
			});
		}
	
		return state.set(id, updaterOrValue);
	}
	
	/***
	 * Comments items reducer, stores a comments items Immutable.List per siteId, postId
	 * @param {Immutable.Map} state redux state
	 * @param {Object} action redux action
	 * @returns {Immutable.Map} new redux state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.Map() : arguments[0];
		var action = arguments[1];
	
		var _ret = function () {
			switch (action.type) {
				case _actionTypes.COMMENTS_RECEIVE:
					// create set of ids for faster lookup for filter later
					var newIds = _immutable2.default.Set(action.comments.map(function (comment) {
						return comment.ID;
					}));
	
					// we prefer freshly retrieved data, so throw away old data
					return {
						v: updateSpecificState(state, action, function () {
							var comments = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.List() : arguments[0];
	
							var newComments = comments.filter(function (comment) {
								return !newIds.has(comment.get('ID'));
							}).concat(_immutable2.default.fromJS(action.comments));
	
							if (!action.skipSort) {
								newComments = newComments.sort(function (a, b) {
									return new Date(b.get('date')) - new Date(a.get('date'));
								});
							}
	
							return newComments;
						})
					};
	
				case _actionTypes.COMMENTS_REMOVE:
					return {
						v: updateSpecificState(state, action, function () {
							var comments = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.List() : arguments[0];
							return comments.filter(function (comment) {
								return comment.get('ID') !== action.commentId;
							});
						})
					};
				case _actionTypes.COMMENTS_LIKE:
					return {
						v: updateSpecificState(state, action, function () {
							var comments = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.List() : arguments[0];
							return (0, _utils.updateExistingIn)(comments, function (comment) {
								return comment.get('ID') === action.commentId;
							}, getLikeSetter({ like: true }));
						})
					};
				case _actionTypes.COMMENTS_LIKE_UPDATE:
					return {
						v: updateSpecificState(state, action, function () {
							var comments = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.List() : arguments[0];
							return (0, _utils.updateExistingIn)(comments, function (comment) {
								return comment.get('ID') === action.commentId;
							}, getLikeSetter({ like: action.iLike, likeCount: action.likeCount }));
						})
					};
				case _actionTypes.COMMENTS_UNLIKE:
					return {
						v: updateSpecificState(state, action, function () {
							var comments = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.List() : arguments[0];
							return (0, _utils.updateExistingIn)(comments, function (comment) {
								return comment.get('ID') === action.commentId;
							}, getLikeSetter({ like: false }));
						})
					};
				case _actionTypes.COMMENTS_ERROR:
					return {
						v: updateSpecificState(state, action, function () {
							var comments = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.List() : arguments[0];
							return (0, _utils.updateExistingIn)(comments, function (comment) {
								return comment.get('ID') === action.commentId;
							}, function (comment) {
								return comment.set('placeholderState', _constants.PLACEHOLDER_STATE.ERROR).set('placeholderError', action.error);
							});
						})
					};
				case _actionTypes.SERIALIZE:
					return {
						v: {}
					};
				case _actionTypes.DESERIALIZE:
					return {
						v: _immutable2.default.Map()
					};
			}
		}();
	
		if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
		return state;
	}
	
	/***
	 * Stores information regarding requests status per requestId
	 * @param {Immutable.Map} state redux state
	 * @param {Object} action redux action
	 * @returns {Immutable.Map} new redux state
	 */
	function requests() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.Map() : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.COMMENTS_REQUEST:
			case _actionTypes.COMMENTS_REQUEST_SUCCESS:
			case _actionTypes.COMMENTS_REQUEST_FAILURE:
				return updateSpecificState(state, action, function () {
					var requestStatuses = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.Map() : arguments[0];
					return requestStatuses.set(action.requestId, action.type);
				});
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return _immutable2.default.Map();
		}
	
		return state;
	}
	
	/***
	 * Stores latest comments count for post we've seen from the server
	 * @param {Immutable.Map} state redux state, prev totalCommentsCount
	 * @param {Object} action redux action
	 * @returns {Immutable.Map} new redux state
	 */
	function totalCommentsCount() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? _immutable2.default.Map() : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.COMMENTS_COUNT_RECEIVE:
				return updateSpecificState(state, action, action.totalCommentsCount);
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return _immutable2.default.Map();
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		requests: requests,
		totalCommentsCount: totalCommentsCount
	});

/***/ },
/* 667 */
/***/ function(module, exports) {

	module.exports = require("immutable");

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _keys = __webpack_require__(404);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	exports.getCommentParentKey = getCommentParentKey;
	exports.createRequestId = createRequestId;
	exports.buildCommentsTree = buildCommentsTree;
	exports.updateExistingIn = updateExistingIn;
	
	var _immutable = __webpack_require__(667);
	
	var _immutable2 = _interopRequireDefault(_immutable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/***
	 * Creates a comment target id, a concatenation of siteId and postId basically
	 * @param {Number} siteId site identification
	 * @param {Number} postId post identification
	 * @returns {String} comment target id
	 */
	function getCommentParentKey(siteId, postId) {
		return siteId + '-' + postId;
	}
	
	/***
	 * Creates a request id, a concatenation of siteId, postId, and query params basically
	 * @param {Number} siteId site identification
	 * @param {Number} postId post identification
	 * @param {Object} query post identification
	 * @returns {String} request id
	 */
	/**
	 * External dependencies
	 */
	function createRequestId(siteId, postId, query) {
		var queryKeys = (0, _keys2.default)(query).sort();
		var queryString = queryKeys.map(function (key) {
			return key + '=' + query[key];
		}).join('-');
	
		return siteId + '-' + postId + '-' + queryString;
	}
	
	/***
	 * Builds a comment tree of the shape
	 * Map<id, CommentNode> {
	 * 	children: List<id>, // Array of root level comments ids
	 * }
	 * @param {Immutable.List} comments list of comments (as built on state.comments.items) sorted by date in descending order
	 * @returns {Immutable.Map} Immutable map comments tree instance of the shape Map<id, CommentNode>{ children: List<id> }
	 */
	function buildCommentsTree(comments) {
		var tree = _immutable2.default.fromJS({ children: [] });
	
		return tree.withMutations(function (commentsTree) {
			comments.forEach(function (comment) {
				// if the comment has a parent, but we haven't seen that parent yet, create a placeholder
				if (comment.get('parent') && !commentsTree.has(comment.getIn(['parent', 'ID']))) {
					commentsTree.set(comment.getIn(['parent', 'ID']), _immutable2.default.fromJS({
						children: [],
						parentId: undefined,
						data: undefined
					}));
				}
	
				// if it's the first time we see that comment, create it
				if (!commentsTree.has(comment.get('ID'))) {
					commentsTree.set(comment.get('ID'), _immutable2.default.fromJS({
						children: [],
						parentId: comment.get('parent') ? comment.getIn(['parent', 'ID']) : null,
						data: comment
					}));
				} else {
					// we already saw that comment, so it means it's parent of some other comment, so it already has children
					// array, so we need only update the parentId and the data
					var parentId = comment.get('parent') ? comment.getIn(['parent', 'ID']) : null;
	
					commentsTree.setIn([comment.get('ID'), 'parentId'], parentId);
					commentsTree.setIn([comment.get('ID'), 'data'], comment);
				}
	
				if (comment.get('parent')) {
					commentsTree.updateIn([comment.getIn(['parent', 'ID']), 'children'], function (children) {
						return children.push(comment.get('ID'));
					});
				}
	
				// We check here for commentNodeChanged in order to not add the comment if we already saw it
				if (commentsTree.getIn([comment.get('ID'), 'parentId']) === null) {
					commentsTree.update('children', function (children) {
						return children.push(comment.get('ID'));
					});
				}
			}); // forEach comments
		}); // withMutations
	}
	
	/***
	 * Finds and modifies item in an Immutable.IndexedIterable
	 * @param {Immutable.IndexedIterable} iterable the iterable on which to update
	 * @param {Function} predicate function that returns true for an item to modify
	 * @param {Function} updater function that returns new value for item
	 * @returns {Immutable.IndexedIterable} modified iterable according to updater and predicate
	 */
	function updateExistingIn(iterable, predicate, updater) {
		var index = iterable.findIndex(predicate);
	
		if (index === -1) {
			return iterable;
		}
	
		return iterable.update(index, updater);
	}

/***/ },
/* 669 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var NUMBER_OF_COMMENTS_PER_FETCH = exports.NUMBER_OF_COMMENTS_PER_FETCH = 50;
	
	var PLACEHOLDER_STATE = exports.PLACEHOLDER_STATE = {
		PENDING: 'PENDING',
		ERROR: 'ERROR'
	};

/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = componentsUsageStats;
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks usage stats fetching state
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function componentsUsageStats() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {
			isFetching: false,
			componentsUsageStats: {}
		} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.COMPONENTS_USAGE_STATS_REQUEST:
				return (0, _assign2.default)({}, state, {
					isFetching: true
				});
			case _actionTypes.COMPONENTS_USAGE_STATS_RECEIVE:
				return (0, _assign2.default)({}, state, {
					isFetching: false,
					componentsUsageStats: action.componentsUsageStats
				});
			default:
				return state;
		}
	} /**
	   * Internal dependencies
	   */

	module.exports = exports['default'];

/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.capabilities = exports.id = undefined;
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _createReducer2; /**
	                      * External dependencies
	                      */
	
	
	/**
	 * Internal dependencies
	 */
	
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(672);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks the current user ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	var id = exports.id = (0, _utils.createReducer)(null, (0, _defineProperty3.default)({}, _actionTypes.CURRENT_USER_ID_SET, function (state, action) {
		return action.userId;
	}), _schema.idSchema);
	
	/**
	 * Returns the updated capabilities state after an action has been dispatched.
	 * The state maps site ID keys to an object of current user capabilities for
	 * that site.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	var capabilities = exports.capabilities = (0, _utils.createReducer)({}, (_createReducer2 = {}, (0, _defineProperty3.default)(_createReducer2, _actionTypes.SITE_RECEIVE, function (state, action) {
		if (!action.site.capabilities) {
			return state;
		}
	
		return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.site.ID, action.site.capabilities));
	}), (0, _defineProperty3.default)(_createReducer2, _actionTypes.SITES_RECEIVE, function (state, action) {
		var siteCapabilities = action.sites.reduce(function (memo, site) {
			if (site.capabilities) {
				memo[site.ID] = site.capabilities;
			}
	
			return memo;
		}, {});
	
		return (0, _assign2.default)({}, state, siteCapabilities);
	}), _createReducer2), _schema.capabilitiesSchema);
	
	exports.default = (0, _redux.combineReducers)({
		id: id,
		capabilities: capabilities
	});

/***/ },
/* 672 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var idSchema = exports.idSchema = {
		type: ['integer', 'null'],
		minimum: 0
	};
	
	var capabilitiesSchema = exports.capabilitiesSchema = {
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			'^\\d+$': {
				type: 'object',
				properties: {
					edit_pages: { type: 'boolean' },
					edit_posts: { type: 'boolean' },
					edit_others_posts: { type: 'boolean' },
					edit_others_pages: { type: 'boolean' },
					delete_posts: { type: 'boolean' },
					delete_others_posts: { type: 'boolean' },
					edit_theme_options: { type: 'boolean' },
					edit_users: { type: 'boolean' },
					list_users: { type: 'boolean' },
					manage_categories: { type: 'boolean' },
					manage_options: { type: 'boolean' },
					promote_users: { type: 'boolean' },
					publish_posts: { type: 'boolean' },
					upload_files: { type: 'boolean' },
					delete_users: { type: 'boolean' },
					remove_users: { type: 'boolean' },
					view_stats: { type: 'boolean' }
				}
			}
		}
	};

/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	exports.title = title;
	exports.unreadCount = unreadCount;
	exports.meta = meta;
	exports.link = link;
	
	exports.default = function (state, action) {
		if (_actionTypes.SERIALIZE === action.type || _actionTypes.DESERIALIZE === action.type) {
			return {};
		}
	
		return reducer(state, action);
	};
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	function title() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.DOCUMENT_HEAD_TITLE_SET:
				return action.title;
		}
	
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	function unreadCount() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.DOCUMENT_HEAD_UNREAD_COUNT_SET:
				return action.count;
		}
	
		return state;
	}
	
	function meta() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.DOCUMENT_HEAD_META_ADD:
				return [].concat((0, _toConsumableArray3.default)(state), [action.meta]);
		}
	
		return state;
	}
	
	function link() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.DOCUMENT_HEAD_LINK_ADD:
				return [].concat((0, _toConsumableArray3.default)(state), [action.link]);
		}
	
		return state;
	}
	
	var reducer = (0, _redux.combineReducers)({
		link: link,
		meta: meta,
		title: title,
		unreadCount: unreadCount
	});

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(675);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  suggestions: _reducer2.default
	});
	
	/**
	 * Internal dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	exports.requesting = requesting;
	exports.errors = errors;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(676);
	
	var _utils = __webpack_require__(664);
	
	var _utils2 = __webpack_require__(677);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks domains suggestions, indexed by a serialized query.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.DOMAINS_SUGGESTIONS_RECEIVE:
				var serializedQuery = (0, _utils2.getSerializedDomainsSuggestionsQuery)(action.queryObject);
				if (serializedQuery) {
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, serializedQuery, action.suggestions));
				}
				return state;
			case _actionTypes.SERIALIZE:
				return state;
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return state;
				}
				return {};
		}
		return state;
	}
	
	/**
	 * Tracks domains suggestions request state, indexed by a serialized query.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.DOMAINS_SUGGESTIONS_REQUEST:
			case _actionTypes.DOMAINS_SUGGESTIONS_REQUEST_FAILURE:
			case _actionTypes.DOMAINS_SUGGESTIONS_REQUEST_SUCCESS:
				var serializedQuery = (0, _utils2.getSerializedDomainsSuggestionsQuery)(action.queryObject);
				if (serializedQuery) {
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, serializedQuery, action.type === _actionTypes.DOMAINS_SUGGESTIONS_REQUEST));
				}
				return state;
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Tracks domains suggestions error state, indexed by a serialized query.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function errors() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		var serializedQuery = action.queryObject && (0, _utils2.getSerializedDomainsSuggestionsQuery)(action.queryObject);
		switch (action.type) {
			case _actionTypes.DOMAINS_SUGGESTIONS_REQUEST:
			case _actionTypes.DOMAINS_SUGGESTIONS_REQUEST_SUCCESS:
				if (serializedQuery) {
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, serializedQuery, null));
				}
				return state;
			case _actionTypes.DOMAINS_SUGGESTIONS_REQUEST_FAILURE:
				if (serializedQuery) {
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, serializedQuery, action.error));
				}
				return state;
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		requesting: requesting,
		errors: errors
	});

/***/ },
/* 676 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			// Queries are JSON strings
			'^\\{[^\\}]*\\}$': {
				type: 'array',
				items: {
					type: 'object',
					required: ['domain_name'],
					properties: {
						domain_name: { type: 'string' },
						cost: { type: 'string' },
						product_id: { type: 'integer' },
						product_slug: { type: 'string' }
					}
				}
			}
		}
	};

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	exports.getSerializedDomainsSuggestionsQuery = getSerializedDomainsSuggestionsQuery;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns a serialized domains suggestions query, used as the key in the
	 * `state.domains.suggestions` state object.
	 *
	 * @param  {Object} queryObject   DomainsSuggestions query
	 * @return {?String}              Serialized DomainsSuggestions query
	 */
	function getSerializedDomainsSuggestionsQuery(queryObject) {
		if (!queryObject) {
			return null;
		}
		var query = queryObject.query;
		var quantity = queryObject.quantity;
		var vendor = queryObject.vendor;
	
		if (!query || query.length === 0 || !quantity || quantity <= 0 || !vendor || vendor.length === 0) {
			return null;
		}
		var include_wordpressdotcom = !!(queryObject.include_wordpressdotcom || queryObject.includeSubdomain);
		return (0, _stringify2.default)({
			query: query,
			quantity: quantity,
			vendor: vendor,
			include_wordpressdotcom: include_wordpressdotcom
		}).toLocaleLowerCase();
	}

/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.items = items;
	exports.loaded = loaded;
	
	var _redux = __webpack_require__(662);
	
	var _uniqBy = __webpack_require__(679);
	
	var _uniqBy2 = _interopRequireDefault(_uniqBy);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.GOOGLE_APPS_USERS_FETCH_COMPLETED:
				return (0, _uniqBy2.default)(state.concat(action.items), 'email');
			case _actionTypes.SERIALIZE:
				return [];
			case _actionTypes.DESERIALIZE:
				return [];
		}
		return state;
	}
	
	/**
	 * Internal Dependencies
	 */
	/**
	 * External Dependencies
	 */
	
	function loaded() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.GOOGLE_APPS_USERS_FETCH:
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return false;
			case _actionTypes.GOOGLE_APPS_USERS_FETCH_FAILED:
			case _actionTypes.GOOGLE_APPS_USERS_FETCH_COMPLETED:
				return true;
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		loaded: loaded
	});

/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(98),
	    baseUniq = __webpack_require__(457);
	
	/**
	 * This method is like `_.uniq` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the criterion by which
	 * uniqueness is computed. The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 * @example
	 *
	 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	 * // => [2.1, 1.2]
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	 * // => [{ 'x': 1 }, { 'x': 2 }]
	 */
	function uniqBy(array, iteratee) {
	  return (array && array.length)
	    ? baseUniq(array, baseIteratee(iteratee))
	    : [];
	}
	
	module.exports = uniqBy;


/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.jetpackConnectSessions = jetpackConnectSessions;
	exports.jetpackConnectSite = jetpackConnectSite;
	exports.jetpackConnectAuthorize = jetpackConnectAuthorize;
	exports.jetpackSSO = jetpackSSO;
	exports.jetpackSSOSessions = jetpackSSOSessions;
	
	var _isEmpty = __webpack_require__(462);
	
	var _isEmpty2 = _interopRequireDefault(_isEmpty);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _redux = __webpack_require__(662);
	
	var _url = __webpack_require__(419);
	
	var _url2 = _interopRequireDefault(_url);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(681);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultAuthorizeState = {
		queryObject: {},
		isAuthorizing: false,
		authorizeSuccess: false,
		authorizeError: false
	};
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencis
	 */
	
	
	function buildNoProtocolUrlObj(url, isInstall) {
		var noProtocolUrl = url.replace(/.*?:\/\//g, '');
		var sessionValue = {
			timestamp: Date.now(),
			isInstall: !!isInstall
		};
		return (0, _defineProperty3.default)({}, noProtocolUrl, sessionValue);
	}
	
	function jetpackConnectSessions() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.JETPACK_CONNECT_CHECK_URL:
				return (0, _assign2.default)({}, state, buildNoProtocolUrlObj(action.url, action.isInstall));
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.jetpackConnectSessionsSchema)) {
					return state;
				}
				return {};
			case _actionTypes.SERIALIZE:
				return state;
		}
		return state;
	}
	
	function jetpackConnectSite() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		var defaultState = {
			url: null,
			isFetching: false,
			isFetched: false,
			isDismissed: false,
			data: {}
		};
		switch (action.type) {
			case _actionTypes.JETPACK_CONNECT_CHECK_URL:
				return (0, _assign2.default)({}, defaultState, { url: action.url, isFetching: true, isFetched: false, isDismissed: false, data: {} });
			case _actionTypes.JETPACK_CONNECT_CHECK_URL_RECEIVE:
				if (action.url === state.url) {
					return (0, _assign2.default)({}, state, { isFetching: false, isFetched: true, data: action.data });
				}
				return state;
			case _actionTypes.JETPACK_CONNECT_DISMISS_URL_STATUS:
				if (action.url === state.url) {
					return (0, _assign2.default)({}, state, { isDismissed: true });
				}
				return state;
			case _actionTypes.JETPACK_CONNECT_REDIRECT:
				if (action.url === state.url) {
					return (0, _assign2.default)({}, state, { isRedirecting: true });
				}
				return state;
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return defaultState;
		}
		return state;
	}
	
	function jetpackConnectAuthorize() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.JETPACK_CONNECT_AUTHORIZE:
				return (0, _assign2.default)({}, state, { isAuthorizing: true, authorizeSuccess: false, authorizeError: false, isRedirectingToWpAdmin: false });
			case _actionTypes.JETPACK_CONNECT_AUTHORIZE_RECEIVE:
				if ((0, _isEmpty2.default)(action.error) && action.data) {
					var _action$data = action.data;
					var plans_url = _action$data.plans_url;
					var activate_manage = _action$data.activate_manage;
	
					return (0, _assign2.default)({}, state, { authorizeError: false, authorizeSuccess: true, autoAuthorize: false, plansUrl: plans_url, siteReceived: false, activateManageSecret: activate_manage });
				}
				return (0, _assign2.default)({}, state, { isAuthorizing: false, authorizeError: action.error, authorizeSuccess: false, autoAuthorize: false });
			case _actionTypes.JETPACK_CONNECT_AUTHORIZE_RECEIVE_SITE_LIST:
				var updateQueryObject = (0, _omit2.default)(state.queryObject, '_wp_nonce', 'secret', 'scope');
				return (0, _assign2.default)({}, (0, _omit2.default)(state, 'queryObject'), { siteReceived: true, isAuthorizing: false, queryObject: updateQueryObject });
			case _actionTypes.JETPACK_CONNECT_ACTIVATE_MANAGE:
				return (0, _assign2.default)({}, state, { isActivating: true });
			case _actionTypes.JETPACK_CONNECT_ACTIVATE_MANAGE_RECEIVE:
				var error = action.error;
				return (0, _assign2.default)({}, state, { isActivating: false, manageActivated: true, manageActivatedError: error, activateManageSecret: false });
			case _actionTypes.JETPACK_CONNECT_QUERY_SET:
				var queryObject = (0, _assign2.default)({}, action.queryObject);
				return (0, _assign2.default)({}, defaultAuthorizeState, { queryObject: queryObject });
			case _actionTypes.JETPACK_CONNECT_QUERY_UPDATE:
				return (0, _assign2.default)({}, state, { queryObject: (0, _assign2.default)({}, state.queryObject, (0, _defineProperty3.default)({}, action.property, action.value)) });
			case _actionTypes.JETPACK_CONNECT_CREATE_ACCOUNT:
				return (0, _assign2.default)({}, state, { isAuthorizing: true, authorizeSuccess: false, authorizeError: false, autoAuthorize: true });
			case _actionTypes.JETPACK_CONNECT_CREATE_ACCOUNT_RECEIVE:
				if (!(0, _isEmpty2.default)(action.error)) {
					return (0, _assign2.default)({}, state, { isAuthorizing: false, authorizeSuccess: false, authorizeError: true, autoAuthorize: false });
				}
				return (0, _assign2.default)({}, state, { isAuthorizing: true, authorizeSuccess: false, authorizeError: false, autoAuthorize: true, userData: action.userData, bearerToken: action.data.bearer_token });
			case _actionTypes.JETPACK_CONNECT_REDIRECT_WP_ADMIN:
				return (0, _assign2.default)({}, state, { isRedirectingToWpAdmin: true });
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return state;
		}
		return state;
	}
	
	function jetpackSSO() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.JETPACK_CONNECT_SSO_VALIDATION_REQUEST:
				return (0, _assign2.default)(state, { isValidating: true });
			case _actionTypes.JETPACK_CONNECT_SSO_VALIDATION_SUCCESS:
				return (0, _assign2.default)(state, {
					isValidating: false,
					validationError: false,
					nonceValid: action.success,
					blogDetails: action.blogDetails,
					sharedDetails: action.sharedDetails
				});
			case _actionTypes.JETPACK_CONNECT_SSO_VALIDATION_ERROR:
				return (0, _assign2.default)(state, { isValidating: false, validationError: action.error, nonceValid: false });
			case _actionTypes.JETPACK_CONNECT_SSO_AUTHORIZE_REQUEST:
				return (0, _assign2.default)(state, { isAuthorizing: true });
			case _actionTypes.JETPACK_CONNECT_SSO_AUTHORIZE_SUCCESS:
				return (0, _assign2.default)(state, { isAuthorizing: false, authorizationError: false, ssoUrl: action.ssoUrl });
			case _actionTypes.JETPACK_CONNECT_SSO_AUTHORIZE_ERROR:
				return (0, _assign2.default)(state, { isAuthorizing: false, authorizationError: action.error, ssoUrl: false });
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	function jetpackSSOSessions() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.JETPACK_CONNECT_SSO_AUTHORIZE_SUCCESS:
				var parsedUrl = _url2.default.parse(action.ssoUrl);
				return (0, _assign2.default)({}, state, buildNoProtocolUrlObj(parsedUrl.hostname));
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return state;
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		jetpackConnectSite: jetpackConnectSite,
		jetpackConnectAuthorize: jetpackConnectAuthorize,
		jetpackConnectSessions: jetpackConnectSessions,
		jetpackSSOSessions: jetpackSSOSessions,
		jetpackSSO: jetpackSSO
	});

/***/ },
/* 681 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var jetpackConnectSessionsSchema = exports.jetpackConnectSessionsSchema = {
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			'^.+$': {
				type: 'object',
				required: ['timestamp'],
				properties: {
					timestamp: { type: 'number' },
					isInstall: { type: 'boolean' }
				},
				additionalProperties: false
			}
		}
	};

/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.NEW_NOTICE:
				return [action.notice].concat((0, _toConsumableArray3.default)(state));
			case _actionTypes.REMOVE_NOTICE:
				return state.filter(function (notice) {
					return notice.noticeId !== action.noticeId;
				});
			case _actionTypes.SET_ROUTE:
				return state.filter(function (notice) {
					var show = notice.isPersistent || notice.displayOnNextPage;
					if (notice.displayOnNextPage) {
						notice.displayOnNextPage = false;
					}
					return show;
				});
			case _actionTypes.SERIALIZE:
				return [];
			case _actionTypes.DESERIALIZE:
				return [];
		}
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = (0, _redux.combineReducers)({
		items: items
	});

/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.error = exports.requesting = exports.items = undefined;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(684);
	
	/**
	 * Plans `Reducer` function
	 * root state -> state.plans.items =>
	 * [ {}, {}, ... {} ]
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - plans action
	 * @return {Object} updated state
	 */
	/**
	 * External dependencies
	 */
	var items = exports.items = function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PLANS_RECEIVE:
				return action.plans.slice(0);
	
			case _actionTypes.DESERIALIZE:
				var isValidState = (0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema);
				if (isValidState) {
					return state;
				}
				return [];
			case _actionTypes.SERIALIZE:
				return state;
		}
	
		return state;
	};
	
	/**
	 * `Reducer` function which handles request/response actions
	 * to/from WP REST-API
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - plans action
	 * @return {Object} updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	var requesting = exports.requesting = function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PLANS_REQUEST:
			case _actionTypes.PLANS_REQUEST_SUCCESS:
			case _actionTypes.PLANS_REQUEST_FAILURE:
				return action.type === _actionTypes.PLANS_REQUEST;
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	};
	
	/**
	 * `Reducer` function which handles ERROR REST-API response actions
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - plans action
	 * @return {Object} updated state
	 */
	var error = exports.error = function error() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PLANS_REQUEST:
			case _actionTypes.PLANS_REQUEST_SUCCESS:
				return false;
	
			case _actionTypes.PLANS_REQUEST_FAILURE:
				return true;
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	};
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		requesting: requesting,
		error: error
	});

/***/ },
/* 684 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'array',
		items: {
			type: 'object',
			required: ['product_id'],
			properties: {
				android_sku: { type: 'string' },
				apple_sku: { type: 'string' },
				available: { type: 'string' },
				bill_period: { type: 'number' },
				bill_period_label: { type: 'string' },
				bundle_product_ids: { type: 'array' },
				cost: { type: 'number' },
				capability: { type: 'string' },
				description: { type: 'string' },
				feature_1: { type: 'string' },
				feature_2: { type: 'string' },
				feature_3: { type: 'string' },
				features_highlight: { type: ['null', 'array'] },
				formatted_price: { type: 'string' },
				formatted_original_price: { type: 'string' },
				height: { type: 'number' },
				icon: { type: 'string' },
				icon_active: { type: 'string' },
				multi: { type: 'number' },
				original: { type: 'number' },
				price: { type: 'string' },
				prices: { type: 'object' },
				product_id: { type: 'number' },
				product_name: { type: 'string' },
				product_name_en: { type: 'string' },
				product_name_short: { type: 'string' },
				product_slug: { type: 'string' },
				product_type: { type: 'string' },
				raw_price: { type: 'number' },
				saving: { type: 'number' },
				shortdesc: { type: 'string' },
				store: { type: ['number', 'null'] },
				support_document: { type: 'string' },
				tagline: { type: 'string' },
				width: { type: 'number' }
			},
	
			additionalProperties: false
		}
	};

/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = function () {
		var newState = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
		var state = (0, _assign2.default)({}, initialState, newState);
		switch (action.type) {
			case ActionTypes.PREVIEW_MARKUP_RECEIVE:
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_CLEAR:
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_UPDATE:
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_UNDO:
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_SAVED:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, siteReducer(state[action.siteId], action)));
			case ActionTypes.SERIALIZE:
				return state;
			case ActionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.previewSchema)) {
					return state;
				}
				return initialState;
		}
		return state;
	};
	
	var _actionTypes = __webpack_require__(174);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	var _schema = __webpack_require__(686);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {}; /**
	                        * Internal dependencies
	                        */
	
	
	var siteInitialState = {
		previousCustomizations: [],
		customizations: {},
		isUnsaved: false,
		previewMarkup: ''
	};
	
	function siteReducer() {
		var newState = arguments.length <= 0 || arguments[0] === undefined ? siteInitialState : arguments[0];
		var action = arguments[1];
	
		var state = (0, _assign2.default)({}, siteInitialState, newState);
		switch (action.type) {
			case ActionTypes.PREVIEW_MARKUP_RECEIVE:
				if (action.markup === state.previewMarkup) {
					return state;
				}
				return (0, _assign2.default)({}, state, { previewMarkup: action.markup });
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_CLEAR:
				return (0, _assign2.default)({}, state, { isUnsaved: false, customizations: {}, previousCustomizations: [] });
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_UPDATE:
				return (0, _assign2.default)({}, state, {
					isUnsaved: true,
					previousCustomizations: state.previousCustomizations.concat(state.customizations),
					customizations: (0, _assign2.default)({}, state.customizations, action.customizations)
				});
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_UNDO:
				var undoneCustomizations = state.previousCustomizations.length > 0 ? state.previousCustomizations.slice(-1)[0] : {};
				return (0, _assign2.default)({}, state, {
					isUnsaved: true,
					previousCustomizations: state.previousCustomizations.slice(0, -1),
					customizations: undoneCustomizations
				});
			case ActionTypes.PREVIEW_CUSTOMIZATIONS_SAVED:
				return (0, _assign2.default)({}, state, { isUnsaved: false });
		}
		return state;
	}
	
	module.exports = exports['default'];

/***/ },
/* 686 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var previewSchema = exports.previewSchema = {
		description: 'Data for previewing sites, including any customizations',
		type: 'object',
		patternProperties: {
			'^[0-9a-z]+$': {
				type: 'object',
				description: 'Data for previewing a particular site keyed by the site ID',
				required: ['previewMarkup', 'previousCustomizations', 'customizations', 'isUnsaved'],
				properties: {
					previewMarkup: {
						type: 'string',
						description: 'The raw markup to preview'
					},
					previousCustomizations: {
						type: 'array',
						description: 'Previous values of the customizations property to enable undo'
					},
					customizations: {
						type: ['object', 'null'],
						description: 'A set of customizations by key used to modify the preview'
					},
					isUnsaved: {
						type: ['boolean', 'null'],
						description: 'True if the customizations in the customizations property have not been saved'
					}
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	exports.siteRequests = siteRequests;
	exports.queryRequests = queryRequests;
	exports.queries = queries;
	exports.edits = edits;
	
	var _redux = __webpack_require__(662);
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _set = __webpack_require__(688);
	
	var _set2 = _interopRequireDefault(_set);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _isEqual = __webpack_require__(313);
	
	var _isEqual2 = _interopRequireDefault(_isEqual);
	
	var _reduce = __webpack_require__(693);
	
	var _reduce2 = _interopRequireDefault(_reduce);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _merge3 = __webpack_require__(383);
	
	var _merge4 = _interopRequireDefault(_merge3);
	
	var _findKey = __webpack_require__(696);
	
	var _findKey2 = _interopRequireDefault(_findKey);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _post = __webpack_require__(697);
	
	var _post2 = _interopRequireDefault(_post);
	
	var _actionTypes = __webpack_require__(174);
	
	var _reducer = __webpack_require__(717);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _utils = __webpack_require__(719);
	
	var _schema = __webpack_require__(721);
	
	var _utils2 = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks all known post objects, indexed by post global ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POSTS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _keyBy2.default)(action.posts, 'global_ID'));
	
			case _actionTypes.POST_DELETE:
				var globalId = (0, _findKey2.default)(state, {
					ID: action.postId,
					site_ID: action.siteId
				});
	
				if (!globalId) {
					break;
				}
	
				// Posts and pages are first sent to trash before being permanently
				// deleted. Therefore, only omit if already trashed or custom type.
				var post = state[globalId];
				if ('trash' === post.status || !(0, _includes2.default)(['post', 'page'], post.type)) {
					return (0, _omit2.default)(state, globalId);
				}
	
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, globalId, { status: 'trash' }));
	
			case _actionTypes.SERIALIZE:
				return state;
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils2.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return state;
				}
	
				return {};
		}
		return state;
	}
	
	/**
	 * Returns the updated site post requests state after an action has been
	 * dispatched. The state reflects a mapping of site ID, post ID pairing to a
	 * boolean reflecting whether a request for the post is in progress.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function siteRequests() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_REQUEST:
			case _actionTypes.POST_REQUEST_SUCCESS:
			case _actionTypes.POST_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _assign2.default)({}, state[action.siteId], (0, _defineProperty3.default)({}, action.postId, _actionTypes.POST_REQUEST === action.type))));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated post query requesting state after an action has been
	 * dispatched. The state reflects a mapping of serialized query to whether a
	 * network request is in-progress for that query.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function queryRequests() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POSTS_REQUEST:
			case _actionTypes.POSTS_REQUEST_SUCCESS:
			case _actionTypes.POSTS_REQUEST_FAILURE:
				var serializedQuery = (0, _utils.getSerializedPostsQuery)(action.query, action.siteId);
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, serializedQuery, _actionTypes.POSTS_REQUEST === action.type));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated post query state after an action has been dispatched.
	 * The state reflects a mapping of serialized query key to an array of post
	 * global IDs for the query, if a query response was successfully received.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function queries() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POSTS_REQUEST_SUCCESS:
				{
					var siteId = action.siteId;
					var query = action.query;
					var posts = action.posts;
					var found = action.found;
	
					if (!state[siteId]) {
						state[siteId] = new _post2.default();
					}
	
					var nextPosts = state[siteId].receive(posts, {
						query: query,
						found: found
					});
	
					if (nextPosts === state[siteId]) {
						return state;
					}
	
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, nextPosts));
				}
	
			case _actionTypes.POST_DELETE:
				{
					if (!state[action.siteId]) {
						return state;
					}
	
					var _nextPosts = state[action.siteId].receive({
						ID: action.postId,
						status: 'trash'
					}, { patch: true });
	
					if (_nextPosts === state[action.siteId]) {
						return state;
					}
	
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, _nextPosts));
				}
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated editor posts state after an action has been dispatched.
	 * The state maps site ID, post ID pairing to an object containing revisions
	 * for the post.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function edits() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POSTS_RECEIVE:
				return (0, _reduce2.default)(action.posts, function (memoState, post) {
					var postEdits = (0, _get2.default)(memoState, [post.site_ID, post.ID]);
					if (!postEdits) {
						return memoState;
					} else if (memoState === state) {
						memoState = (0, _merge4.default)({}, state);
					}
	
					return (0, _set2.default)(memoState, [post.site_ID, post.ID], (0, _omitBy2.default)(postEdits, function (value, key) {
						return (0, _isEqual2.default)(post[key], value);
					}));
				}, state);
	
			case _actionTypes.POST_EDIT:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postId || '', action.post)));
	
			case _actionTypes.POST_EDITS_RESET:
				if (!state.hasOwnProperty(action.siteId)) {
					break;
				}
	
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _omit2.default)(state[action.siteId], action.postId || '')));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		counts: _reducer2.default,
		items: items,
		siteRequests: siteRequests,
		queryRequests: queryRequests,
		queries: queries,
		edits: edits
	});

/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

	var baseSet = __webpack_require__(689);
	
	/**
	 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist
	 * it's created. Arrays are created for missing index properties while objects
	 * are created for all other missing properties. Use `_.setWith` to customize
	 * `path` creation.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.set(object, 'a[0].b.c', 4);
	 * console.log(object.a[0].b.c);
	 * // => 4
	 *
	 * _.set(object, 'x[0].y.z', 5);
	 * console.log(object.x[0].y.z);
	 * // => 5
	 */
	function set(object, path, value) {
	  return object == null ? object : baseSet(object, path, value);
	}
	
	module.exports = set;


/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(13),
	    baseCastPath = __webpack_require__(154),
	    isIndex = __webpack_require__(23),
	    isKey = __webpack_require__(158),
	    isObject = __webpack_require__(21);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  path = isKey(path, object) ? [path + ''] : baseCastPath(path);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = path[index];
	    if (isObject(nested)) {
	      var newValue = value;
	      if (index != lastIndex) {
	        var objValue = nested[key];
	        newValue = customizer ? customizer(objValue, key, nested) : undefined;
	        if (newValue === undefined) {
	          newValue = objValue == null
	            ? (isIndex(path[index + 1]) ? [] : {})
	            : objValue;
	        }
	      }
	      assignValue(nested, key, newValue);
	    }
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(98),
	    basePickBy = __webpack_require__(691);
	
	/**
	 * The opposite of `_.pickBy`; this method creates an object composed of the
	 * own and inherited enumerable properties of `object` that `predicate`
	 * doesn't return truthy for.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omitBy(object, _.isNumber);
	 * // => { 'b': '2' }
	 */
	function omitBy(object, predicate) {
	  predicate = baseIteratee(predicate, 2);
	  return basePickBy(object, function(value, key) {
	    return !predicate(value, key);
	  });
	}
	
	module.exports = omitBy;


/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	var baseForIn = __webpack_require__(692);
	
	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, predicate) {
	  var result = {};
	  baseForIn(object, function(value, key) {
	    if (predicate(value, key)) {
	      result[key] = value;
	    }
	  });
	  return result;
	}
	
	module.exports = basePickBy;


/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(93),
	    keysIn = __webpack_require__(247);
	
	/**
	 * The base implementation of `_.forIn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForIn(object, iteratee) {
	  return object == null ? object : baseFor(object, iteratee, keysIn);
	}
	
	module.exports = baseForIn;


/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(246),
	    baseEach = __webpack_require__(91),
	    baseIteratee = __webpack_require__(98),
	    baseReduce = __webpack_require__(694),
	    isArray = __webpack_require__(36);
	
	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` through `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;
	
	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}
	
	module.exports = reduce;


/***/ },
/* 694 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseReduce;


/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	var createAggregator = __webpack_require__(467);
	
	/**
	 * Creates an object composed of keys generated from the results of running
	 * each element of `collection` through `iteratee`. The corresponding value
	 * of each key is the last element responsible for generating the key. The
	 * iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.
	 * @returns {Object} Returns the composed aggregate object.
	 * @example
	 *
	 * var array = [
	 *   { 'dir': 'left', 'code': 97 },
	 *   { 'dir': 'right', 'code': 100 }
	 * ];
	 *
	 * _.keyBy(array, function(o) {
	 *   return String.fromCharCode(o.code);
	 * });
	 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	 *
	 * _.keyBy(array, 'dir');
	 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	 */
	var keyBy = createAggregator(function(result, value, key) {
	  result[key] = value;
	});
	
	module.exports = keyBy;


/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	var baseFind = __webpack_require__(96),
	    baseForOwn = __webpack_require__(92),
	    baseIteratee = __webpack_require__(98);
	
	/**
	 * This method is like `_.find` except that it returns the key of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to search.
	 * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
	 * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
	 * @example
	 *
	 * var users = {
	 *   'barney':  { 'age': 36, 'active': true },
	 *   'fred':    { 'age': 40, 'active': false },
	 *   'pebbles': { 'age': 1,  'active': true }
	 * };
	 *
	 * _.findKey(users, function(o) { return o.age < 40; });
	 * // => 'barney' (iteration order is not guaranteed)
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findKey(users, { 'age': 1, 'active': true });
	 * // => 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findKey(users, ['active', false]);
	 * // => 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findKey(users, 'active');
	 * // => 'barney'
	 */
	function findKey(object, predicate) {
	  return baseFind(object, baseIteratee(predicate, 3), baseForOwn, true);
	}
	
	module.exports = findKey;


/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _get2 = __webpack_require__(698);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _moment = __webpack_require__(479);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _every = __webpack_require__(446);
	
	var _every2 = _interopRequireDefault(_every);
	
	var _some = __webpack_require__(454);
	
	var _some2 = _interopRequireDefault(_some);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _get4 = __webpack_require__(152);
	
	var _get5 = _interopRequireDefault(_get4);
	
	var _paginated = __webpack_require__(702);
	
	var _paginated2 = _interopRequireDefault(_paginated);
	
	var _key = __webpack_require__(715);
	
	var _key2 = _interopRequireDefault(_key);
	
	var _constants = __webpack_require__(716);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * PostQueryManager manages posts which can be queried and change over time
	 */
	/**
	 * External dependencies
	 */
	
	var PostQueryManager = function (_PaginatedQueryManage) {
		(0, _inherits3.default)(PostQueryManager, _PaginatedQueryManage);
	
		function PostQueryManager() {
			(0, _classCallCheck3.default)(this, PostQueryManager);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PostQueryManager).apply(this, arguments));
		}
	
		(0, _createClass3.default)(PostQueryManager, [{
			key: 'matches',
	
			/**
	   * Returns true if the post matches the given query, or false otherwise.
	   *
	   * @param  {Object}  query Query object
	   * @param  {Object}  post  Item to consider
	   * @return {Boolean}       Whether post matches query
	   */
			value: function matches(query, post) {
				var queryWithDefaults = (0, _assign2.default)({}, _constants.DEFAULT_POST_QUERY, query);
				return (0, _every2.default)(queryWithDefaults, function (value, key) {
					switch (key) {
						case 'search':
							if (!value) {
								return true;
							}
	
							var content = (post.title || '') + (post.content || '');
							return (0, _includes2.default)(content.toLowerCase(), value.toLowerCase());
	
						case 'after':
						case 'before':
						case 'modified_after':
						case 'modified_before':
							{
								var queryDate = (0, _moment2.default)(value, _moment2.default.ISO_8601);
								var comparison = /after$/.test(key) ? 'isAfter' : 'isBefore';
								var field = /^modified_/.test(key) ? 'modified' : 'date';
								return queryDate.isValid() && (0, _moment2.default)(post[field])[comparison](queryDate);
							}
	
						case 'tag':
						case 'category':
							{
								var _ret = function () {
									if (!value) {
										return {
											v: true
										};
									}
	
									var valueLowercase = value.toLowerCase();
									var field = 'tag' === key ? 'tags' : 'categories';
									return {
										v: (0, _some2.default)(post[field], function (_ref) {
											var name = _ref.name;
											var slug = _ref.slug;
	
											return name && name.toLowerCase() === valueLowercase || slug && slug.toLowerCase() === valueLowercase;
										})
									};
								}();
	
								if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
							}
	
						case 'type':
							return 'any' === value || value === post.type;
	
						case 'parent_id':
							return value === post.parent || post.parent && value === post.parent.ID;
	
						case 'exclude':
							if (Array.isArray(value)) {
								return !(0, _includes2.default)(value, post.ID);
							}
	
							return value !== post.ID;
	
						case 'sticky':
							if ('require' === value) {
								return post.sticky;
							} else if ('exclude' === value) {
								return !post.sticky;
							}
	
							return true;
	
						case 'author':
							return (0, _get5.default)(post, 'author.ID', post.author) === value;
	
						case 'status':
							return 'any' === value || String(value).split(',').some(function (status) {
								return status === post[key];
							});
					}
	
					return true;
				});
			}
	
			/**
	   * A sort comparison function that defines the sort order of posts under
	   * consideration of the specified query.
	   *
	   * @param  {Object} query Query object
	   * @param  {Object} postA First post
	   * @param  {Object} postB Second post
	   * @return {Number}       0 if equal, less than 0 if postA is first,
	   *                        greater than 0 if postB is first.
	   */
	
		}, {
			key: 'sort',
			value: function sort(query, postA, postB) {
				var order = void 0;
	
				switch (query.order_by) {
					case 'ID':
						order = postA.ID - postB.ID;
						break;
	
					case 'comment_count':
						order = (0, _get5.default)(postA.discussion, 'comment_count', 0) - (0, _get5.default)(postB.discussion, 'comment_count', 0);
						break;
	
					case 'title':
						order = postA.title.localeCompare(postB.title);
						break;
	
					case 'modified':
						order = (0, _moment2.default)(postA.modified).diff(postB.modified);
						break;
	
					case 'date':
					default:
						order = (0, _moment2.default)(postA.date).diff(postB.date);
				}
	
				// Default to descending order, opposite sign of ordered result
				if (!query.order || /^desc$/i.test(query.order)) {
					order *= -1;
				}
	
				return order || 0;
			}
	
			/**
	   * Returns a new post after consideration of incoming revision of that
	   * post. The post can be undefined in the case that the revision is
	   * new. Optionally patch the post to merge, not replace. Returning
	   * undefined indicates that post should be removed from known set. Posts
	   * are omitted if trashed as a custom post type (not post or page), or if
	   * trashed a second time for posts and pages.
	   *
	   * @param  {?Object} post        Existing post, if exists
	   * @param  {Object}  revisedPost Incoming revision of post
	   * @param  {Boolean} patch       Use patching application
	   * @return {?Object}             Item to track, or undefined to omit
	   */
	
		}, {
			key: 'mergeItem',
			value: function mergeItem(post, revisedPost) {
				var patch = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
	
				if (patch && post && 'trash' === revisedPost.status && (!(0, _includes2.default)(['post', 'page'], post.type) || 'trash' === post.status)) {
					return undefined;
				}
	
				return (0, _get3.default)((0, _getPrototypeOf2.default)(PostQueryManager.prototype), 'mergeItem', this).apply(this, arguments);
			}
		}]);
		return PostQueryManager;
	}(_paginated2.default);
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = PostQueryManager;
	
	
	PostQueryManager.QueryKey = _key2.default;
	
	PostQueryManager.DEFAULT_QUERY = _constants.DEFAULT_POST_QUERY;
	module.exports = exports['default'];

/***/ },
/* 698 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _getOwnPropertyDescriptor = __webpack_require__(699);
	
	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function get(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);
	
	  if (desc === undefined) {
	    var parent = (0, _getPrototypeOf2.default)(object);
	
	    if (parent === null) {
	      return undefined;
	    } else {
	      return get(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;
	
	    if (getter === undefined) {
	      return undefined;
	    }
	
	    return getter.call(receiver);
	  }
	};

/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(700), __esModule: true };

/***/ },
/* 700 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(701);
	var $Object = __webpack_require__(47).Object;
	module.exports = function getOwnPropertyDescriptor(it, key){
	  return $Object.getOwnPropertyDescriptor(it, key);
	};

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(64)
	  , $getOwnPropertyDescriptor = __webpack_require__(275).f;
	
	__webpack_require__(259)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _get2 = __webpack_require__(698);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _isEqual = __webpack_require__(313);
	
	var _isEqual2 = _interopRequireDefault(_isEqual);
	
	var _cloneDeep = __webpack_require__(703);
	
	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);
	
	var _range = __webpack_require__(704);
	
	var _range2 = _interopRequireDefault(_range);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _ = __webpack_require__(707);
	
	var _2 = _interopRequireDefault(_);
	
	var _key = __webpack_require__(713);
	
	var _key2 = _interopRequireDefault(_key);
	
	var _constants = __webpack_require__(714);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * PaginatedQueryManager manages paginated data which can be queried and
	 * change over time
	 */
	/**
	 * External dependencies
	 */
	
	var PaginatedQueryManager = function (_QueryManager) {
		(0, _inherits3.default)(PaginatedQueryManager, _QueryManager);
	
		function PaginatedQueryManager() {
			(0, _classCallCheck3.default)(this, PaginatedQueryManager);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PaginatedQueryManager).apply(this, arguments));
		}
	
		(0, _createClass3.default)(PaginatedQueryManager, [{
			key: 'getItems',
	
	
			/**
	   * Returns items tracked by the instance. If a query is specified, returns
	   * items specific to that query.
	   *
	   * @param  {?Object}  query Optional query object
	   * @return {Object[]}       Items tracked
	   */
			value: function getItems(query) {
				if (!query) {
					return (0, _get3.default)((0, _getPrototypeOf2.default)(PaginatedQueryManager.prototype), 'getItems', this).call(this, query);
				}
	
				// Get all items, ignoring page. Test as truthy to ensure that query is
				// in-fact being tracked, otherwise bail early.
				var dataIgnoringPage = this.getItemsIgnoringPage(query, true);
				if (!dataIgnoringPage) {
					return dataIgnoringPage;
				}
	
				// Slice the unpaginated set of data
				var page = query.page || this.constructor.DEFAULT_QUERY.page;
				var perPage = query.number || this.constructor.DEFAULT_QUERY.number;
				var startOffset = (page - 1) * perPage;
	
				return dataIgnoringPage.slice(startOffset, startOffset + perPage);
			}
	
			/**
	   * Returns items tracked by the instance, ignoring pagination for the given
	   * query.
	   *
	   * @param  {Object}   query         Query object
	   * @param  {Boolean}  includeFiller Whether page structure should be left
	   *                                  intact to reflect found count, with
	   *                                  items yet to be received as `undefined`
	   * @return {Object[]}               Items tracked, ignoring page
	   */
	
		}, {
			key: 'getItemsIgnoringPage',
			value: function getItemsIgnoringPage(query) {
				var includeFiller = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	
				if (!query) {
					return null;
				}
	
				var items = (0, _get3.default)((0, _getPrototypeOf2.default)(PaginatedQueryManager.prototype), 'getItems', this).call(this, (0, _omit2.default)(query, _constants.PAGINATION_QUERY_KEYS));
				if (!items || includeFiller) {
					return items;
				}
	
				return items.filter(function (item) {
					return undefined !== item;
				});
			}
	
			/**
	   * Returns the number of pages for the specified query, or null if the
	   * query is not known.
	   *
	   * @param  {Object}  query Query object
	   * @return {?Number}       Pages for query
	   */
	
		}, {
			key: 'getNumberOfPages',
			value: function getNumberOfPages(query) {
				var found = this.getFound(query);
				if (null === found) {
					return found;
				}
	
				var perPage = query.number || this.constructor.DEFAULT_QUERY.number;
				return Math.ceil(found / perPage);
			}
	
			/**
	   * Signal that an item(s) has been received for tracking. Optionally
	   * specify that items received are intended for patch application, or that
	   * they are associated with a query. This function does not mutate the
	   * instance state. Instead, it returns a new instance of QueryManager if
	   * the tracked items have been modified, or the current instance otherwise.
	   *
	   * @param  {(Array|Object)} items              Item(s) to be received
	   * @param  {Object}         options            Options for receive
	   * @param  {Boolean}        options.patch      Apply changes as partial
	   * @param  {Object}         options.query      Query set to set or replace
	   * @param  {Boolean}        options.mergeQuery Add to existing query set
	   * @param  {Number}         options.found      Total found items for query
	   * @return {QueryManager}                      New instance if changed, or
	   *                                             same instance otherwise
	   */
	
		}, {
			key: 'receive',
			value: function receive(items) {
				var _this2 = this;
	
				var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
				// When tracking queries, remove pagination query arguments. These are
				// simulated in `PaginatedQueryManager.prototype.getItems`.
				var modifiedOptions = options;
				if (options.query) {
					modifiedOptions = (0, _assign2.default)({
						mergeQuery: true
					}, options, {
						query: (0, _omit2.default)(options.query, _constants.PAGINATION_QUERY_KEYS)
					});
				}
	
				// Receive the updated manager, passing a modified set of options to
				// exclude pagination keys, and to indicate appending query.
				var nextManager = (0, _get3.default)((0, _getPrototypeOf2.default)(PaginatedQueryManager.prototype), 'receive', this).call(this, items, modifiedOptions);
	
				// If manager is the same instance, assume no changes have been made
				if (this === nextManager) {
					return nextManager;
				}
	
				// If original query does not have any pagination keys, we don't need
				// to update its item set
				if (!this.constructor.hasQueryPaginationKeys(options.query)) {
					return nextManager;
				}
	
				var queryKey = this.constructor.QueryKey.stringify(options.query);
				var page = options.query.page || _constants.DEFAULT_QUERY.page;
				var perPage = options.query.number || _constants.DEFAULT_QUERY.number;
				var startOffset = (page - 1) * perPage;
				var nextQuery = nextManager.data.queries[queryKey];
	
				// Coerce received single item to array
				if (!Array.isArray(items)) {
					items = [items];
				}
	
				// If the item set for the queried page is identical, there are no
				// updates to be made
				var pageItemKeys = items.map(function (item) {
					return item[_this2.options.itemKey];
				});
	
				// If we've reached this point, we know that we've received a paged
				// set of data where our assumed item set is incorrect.
				var modifiedNextQuery = (0, _cloneDeep2.default)(nextQuery);
	
				// Replace the assumed set with the received items.
				modifiedNextQuery.itemKeys = [].concat((0, _toConsumableArray3.default)((0, _range2.default)(0, startOffset).map(function (index) {
					// Ensure that item set is comprised of all indices leading up
					// to received page, even if those items are not known.
					var itemKey = nextQuery.itemKeys[index];
					if (!(0, _includes2.default)(pageItemKeys, itemKey)) {
						return itemKey;
					}
				})), (0, _toConsumableArray3.default)((0, _range2.default)(0, perPage).map(function (index) {
					// Fill page with items from the received set, or undefined to
					// at least ensure page matches expected range
					return pageItemKeys[index];
				})), (0, _toConsumableArray3.default)(nextQuery.itemKeys.slice(startOffset + perPage).filter(function (itemKey) {
					// Filter out any item keys which exist in the page set, as
					// this indicates that they've trickled down from later page
					return itemKey && !(0, _includes2.default)(pageItemKeys, itemKey);
				})));
	
				// If found is known from options, ensure that we fill the end of the
				// array with undefined entries until found count
				if (nextQuery.hasOwnProperty('found')) {
					modifiedNextQuery.itemKeys = (0, _range2.default)(0, modifiedNextQuery.found).map(function (index) {
						return modifiedNextQuery.itemKeys[index];
					});
				}
	
				return new this.constructor((0, _assign2.default)({}, nextManager.data, {
					queries: (0, _assign2.default)({}, nextManager.data.queries, (0, _defineProperty3.default)({}, queryKey, modifiedNextQuery))
				}), nextManager.options);
			}
		}], [{
			key: 'hasQueryPaginationKeys',
	
			/**
	   * Returns true if the specified query is an object containing one or more
	   * query pagination keys.
	   *
	   * @param  {Object}  query Query object to check
	   * @return {Boolean}       Whether query contains pagination key
	   */
			value: function hasQueryPaginationKeys(query) {
				if (!query) {
					return false;
				}
	
				return _constants.PAGINATION_QUERY_KEYS.some(function (key) {
					return query.hasOwnProperty(key);
				});
			}
		}]);
		return PaginatedQueryManager;
	}(_2.default);
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = PaginatedQueryManager;
	
	
	PaginatedQueryManager.QueryKey = _key2.default;
	
	PaginatedQueryManager.DEFAULT_QUERY = _constants.DEFAULT_QUERY;
	module.exports = exports['default'];

/***/ },
/* 703 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(332);
	
	/**
	 * This method is like `_.clone` except that it recursively clones `value`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to recursively clone.
	 * @returns {*} Returns the deep cloned value.
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var deep = _.cloneDeep(objects);
	 * console.log(deep[0] === objects[0]);
	 * // => false
	 */
	function cloneDeep(value) {
	  return baseClone(value, true);
	}
	
	module.exports = cloneDeep;


/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(705);
	
	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the new array of numbers.
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();
	
	module.exports = range;


/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

	var baseRange = __webpack_require__(706),
	    isIterateeCall = __webpack_require__(16),
	    toNumber = __webpack_require__(27);
	
	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toNumber(start);
	    start = start === start ? start : 0;
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toNumber(end) || 0;
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
	    return baseRange(start, end, step, fromRight);
	  };
	}
	
	module.exports = createRange;


/***/ },
/* 706 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments to numbers.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the new array of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);
	
	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}
	
	module.exports = baseRange;


/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _isFinite = __webpack_require__(708);
	
	var _isFinite2 = _interopRequireDefault(_isFinite);
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _isEqual = __webpack_require__(313);
	
	var _isEqual2 = _interopRequireDefault(_isEqual);
	
	var _reduce = __webpack_require__(693);
	
	var _reduce2 = _interopRequireDefault(_reduce);
	
	var _values = __webpack_require__(477);
	
	var _values2 = _interopRequireDefault(_values);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _cloneDeep = __webpack_require__(703);
	
	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);
	
	var _difference = __webpack_require__(461);
	
	var _difference2 = _interopRequireDefault(_difference);
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _key = __webpack_require__(711);
	
	var _key2 = _interopRequireDefault(_key);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * QueryManager manages items which can be queried and change over time. It is
	 * intended to be extended by a more specific implementation which is
	 * responsible for implementing its matching, merging, and sorting behaviors.
	 */
	
	var QueryManager = function () {
		(0, _createClass3.default)(QueryManager, null, [{
			key: 'parse',
	
			/**
	   * Returns an instance of QueryManager or extending class given a
	   * serialized string representation of the instance. If the serialized
	   * string is invalid, a new empty instance is returned.
	   *
	   * @param  {String}       serialized Serialized QueryManager
	   * @return {QueryManager}            QueryManager instance
	   */
			value: function parse(serialized) {
				try {
					var _JSON$parse = JSON.parse(serialized);
	
					var data = _JSON$parse.data;
					var options = _JSON$parse.options;
	
					return new this.prototype.constructor(data, options);
				} catch (e) {
					return new this.prototype.constructor();
				}
			}
	
			/**
	   * Constructs a new instance of QueryManager
	   *
	   * @param {Object} data            Initial data
	   * @param {Object} options         Manager options
	   * @param {String} options.itemKey Field to key items by
	   */
	
		}]);
	
		function QueryManager(data, options) {
			(0, _classCallCheck3.default)(this, QueryManager);
	
			this.data = (0, _assign2.default)({
				items: {},
				queries: {}
			}, data);
	
			this.options = (0, _assign2.default)({
				itemKey: 'ID'
			}, options);
		}
	
		/**
	  * Returns a serialized string representation of the instance
	  *
	  * @return {String} String representation of the instance
	  */
	
	
		(0, _createClass3.default)(QueryManager, [{
			key: 'toJSON',
			value: function toJSON() {
				var data = this.data;
				var options = this.options;
	
				return (0, _stringify2.default)({ data: data, options: options });
			}
	
			/**
	   * Returns a new item after consideration of incoming revision of that
	   * item. The item can be undefined in the case that the revision is
	   * new. Optionally patch the item to merge, not replace. Returning
	   * undefined indicates that item should be removed from known set.
	   *
	   * @param  {?Object} item        Existing item, if exists
	   * @param  {Object}  revisedItem Incoming revision of item
	   * @param  {Boolean} patch       Use patching application
	   * @return {?Object}             Item to track, or undefined to omit
	   */
	
		}, {
			key: 'mergeItem',
			value: function mergeItem(item, revisedItem) {
				var patch = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
	
				if (patch) {
					return (0, _assign2.default)({}, item, revisedItem);
				}
	
				return revisedItem;
			}
	
			/**
	   * Returns true if the item matches the given query, or false otherwise.
	   *
	   * @param  {Object}  query Query object
	   * @param  {Object}  item  Item to consider
	   * @return {Boolean}       Whether item matches query
	   */
	
		}, {
			key: 'matches',
			value: function matches(query, item) {
				return !!item;
			}
	
			/**
	   * A sort comparison function that defines the sort order of items under
	   * consideration of the specified query.
	   *
	   * @param  {Object} query Query object
	   * @param  {Object} itemA First item
	   * @param  {Object} itemB Second item
	   * @return {Number}       0 if equal, less than 0 if itemA is first,
	   *                        greater than 0 if itemB is first.
	   */
	
		}, {
			key: 'sort',
			value: function sort(query, itemA, itemB) {
				if (itemA === itemB) {
					return 0;
				}
	
				return itemB - itemA;
			}
	
			/**
	   * Returns a single item by key.
	   *
	   * @param  {String} itemKey Item key
	   * @return {Object}         Item
	   */
	
		}, {
			key: 'getItem',
			value: function getItem(itemKey) {
				return this.data.items[itemKey];
			}
	
			/**
	   * Returns items tracked by the instance. If a query is specified, returns
	   * items specific to that query.
	   *
	   * @param  {?Object} query Optional query object
	   * @return {Object[]}      Items tracked
	   */
	
		}, {
			key: 'getItems',
			value: function getItems(query) {
				var _this = this;
	
				if (!query) {
					return (0, _values2.default)(this.data.items);
				}
	
				var queryKey = this.constructor.QueryKey.stringify(query);
				var itemKeys = (0, _get2.default)(this.data.queries, [queryKey, 'itemKeys']);
				if (!itemKeys) {
					return null;
				}
	
				return itemKeys.map(function (itemKey) {
					return _this.getItem(itemKey);
				});
			}
	
			/**
	   * Returns the number of total known items for the specified query, as
	   * included in the REST API posts response. Returns null if the query is
	   * not known.
	   *
	   * @param  {Object}  query Query object
	   * @return {?Number}       Found items for query
	   */
	
		}, {
			key: 'getFound',
			value: function getFound(query) {
				var queryKey = this.constructor.QueryKey.stringify(query);
				return (0, _get2.default)(this.data.queries, [queryKey, 'found'], null);
			}
	
			/**
	   * Signal that an item(s) has been received for tracking. Optionally
	   * specify that items received are intended for patch application, or that
	   * they are associated with a query. This function does not mutate the
	   * instance state. Instead, it returns a new instance of QueryManager if
	   * the tracked items have been modified, or the current instance otherwise.
	   *
	   * @param  {(Array|Object)} items              Item(s) to be received
	   * @param  {Object}         options            Options for receive
	   * @param  {Boolean}        options.patch      Apply changes as partial
	   * @param  {Object}         options.query      Query set to set or replace
	   * @param  {Boolean}        options.mergeQuery Add to existing query set
	   * @param  {Number}         options.found      Total found items for query
	   * @return {QueryManager}                      New instance if changed, or
	   *                                             same instance otherwise
	   */
	
		}, {
			key: 'receive',
			value: function receive() {
				var _this2 = this;
	
				var items = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
				var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
				// Coerce received single item to array
				if (!Array.isArray(items)) {
					items = [items];
				}
	
				var nextItems = (0, _reduce2.default)(items, function (memo, receivedItem) {
					var receivedItemKey = receivedItem[_this2.options.itemKey];
					var item = _this2.getItem(receivedItemKey);
					var mergedItem = _this2.mergeItem(item, receivedItem, options.patch);
	
					if (undefined === mergedItem) {
						// `undefined` item is an intended omission from set
						return (0, _omit2.default)(memo, receivedItemKey);
					}
	
					if (!item || !(0, _isEqual2.default)(mergedItem, item)) {
						// Did not exist previously or has changed
						if (memo === _this2.data.items) {
							// Create a copy of memo, as we don't want to mutate the
							// original items set
							memo = (0, _cloneDeep2.default)(memo);
						}
	
						memo[receivedItemKey] = mergedItem;
					}
	
					return memo;
				}, this.data.items);
	
				var isModified = nextItems !== this.data.items,
				    nextQueries = this.data.queries,
				    isNewlyReceivedQueryKey = false,
				    receivedQueryKey = void 0;
	
				// Skip if no items have been updated, added, or removed. If query
				// specified with received items, we may need to update queries
				if (!isModified && !options.query) {
					return this;
				}
	
				if (options.query) {
					var receivedItemKeys = (0, _map2.default)(items, this.options.itemKey);
					receivedQueryKey = this.constructor.QueryKey.stringify(options.query);
					isNewlyReceivedQueryKey = !this.data.queries[receivedQueryKey];
	
					var nextQueryReceivedItemKeys = void 0;
					if (isNewlyReceivedQueryKey || !(0, _isEqual2.default)(this.data.queries[receivedQueryKey].itemKeys, receivedItemKeys)) {
						if (options.mergeQuery && !isNewlyReceivedQueryKey) {
							// When merging into a query where items already exist,
							// omit incoming keys from existing set. These keys will
							// be restored below during match testing.
							nextQueryReceivedItemKeys = (0, _difference2.default)(this.data.queries[receivedQueryKey].itemKeys, receivedItemKeys);
						} else {
							// If not merging, assign incoming keys as next items
							nextQueryReceivedItemKeys = receivedItemKeys;
						}
					}
	
					var nextQueryFound = void 0;
					if (options.found >= 0 && options.found !== (0, _get2.default)(nextQueries, [receivedQueryKey, 'found'])) {
						nextQueryFound = options.found;
					}
	
					if (nextQueryReceivedItemKeys || nextQueryFound >= 0) {
						// Consider modified if either the current query set is not
						// tracked or if the keys differ from currently known set
						isModified = true;
						var nextReceivedQuery = (0, _assign2.default)({}, nextQueries[receivedQueryKey]);
	
						if (nextQueryReceivedItemKeys) {
							nextReceivedQuery.itemKeys = nextQueryReceivedItemKeys;
						}
	
						if (nextQueryFound >= 0) {
							nextReceivedQuery.found = nextQueryFound;
						}
	
						nextQueries = (0, _assign2.default)({}, nextQueries, (0, _defineProperty3.default)({}, receivedQueryKey, nextReceivedQuery));
					}
				}
	
				nextQueries = (0, _reduce2.default)(nextQueries, function (memo, queryDetails, queryKey) {
					memo[queryKey] = queryDetails;
	
					var isReceivedQueryKey = receivedQueryKey && receivedQueryKey === queryKey;
					if (isReceivedQueryKey && (isNewlyReceivedQueryKey || !options.mergeQuery)) {
						// We can save the effort testing against received items in
						// the current query, since we know they'll match
						return memo;
					}
	
					// Found counts should not be adjusted for the received query if
					// merging into existing items
					var shouldAdjustFoundCount = !isReceivedQueryKey;
	
					var query = _this2.constructor.QueryKey.parse(queryKey);
					items.forEach(function (receivedItem) {
						// Find item in known data for query
						var receivedItemKey = receivedItem[_this2.options.itemKey];
						var updatedItem = nextItems[receivedItemKey];
						var index = memo[queryKey].itemKeys.indexOf(receivedItemKey);
	
						if (-1 !== index) {
							// Item already exists in query, check to see whether the
							// updated item is being removed or no longer matches
							if (!updatedItem || !_this2.matches(query, updatedItem)) {
								// Create a copy of the original details to avoid mutating
								if (memo[queryKey] === queryDetails) {
									memo[queryKey] = (0, _cloneDeep2.default)(queryDetails);
								}
	
								// Omit item by slicing previous and next
								memo[queryKey].itemKeys = [].concat((0, _toConsumableArray3.default)(memo[queryKey].itemKeys.slice(0, index)), (0, _toConsumableArray3.default)(memo[queryKey].itemKeys.slice(index + 1)));
	
								// Decrement found count for query
								if (shouldAdjustFoundCount && (0, _isFinite2.default)(memo[queryKey].found)) {
									memo[queryKey].found--;
								}
							}
						} else if (updatedItem && _this2.matches(query, updatedItem)) {
							// Item doesn't currently exist in query but is a match, so
							// insert item into set
	
							// Create a copy of the original details to avoid mutating
							if (memo[queryKey] === queryDetails) {
								memo[queryKey] = (0, _cloneDeep2.default)(queryDetails);
							}
	
							// Increment found count for query
							if (shouldAdjustFoundCount && (0, _isFinite2.default)(memo[queryKey].found)) {
								memo[queryKey].found++;
							}
	
							// A matching item should be inserted into the query set
							memo[queryKey].itemKeys = (0, _get2.default)(memo, [queryKey, 'itemKeys'], []).concat(receivedItemKey);
	
							// Re-sort the set
							memo[queryKey].itemKeys.sort(function (keyA, keyB) {
								if (!nextItems[keyA] || !nextItems[keyB]) {
									// One of the items has yet to be removed from the
									// set at this point in iteration, so don't bother
									// trying to sort.
									return 0;
								}
	
								return _this2.sort(query, nextItems[keyA], nextItems[keyB]);
							});
						}
					});
	
					isModified = isModified || memo[queryKey] !== queryDetails;
					return memo;
				}, {});
	
				if (!isModified) {
					return this;
				}
	
				return new this.constructor((0, _assign2.default)({}, this.data, {
					items: nextItems,
					queries: nextQueries
				}), this.options);
			}
		}]);
		return QueryManager;
	}();
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	
	
	exports.default = QueryManager;
	
	
	QueryManager.QueryKey = _key2.default;
	module.exports = exports['default'];

/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(709), __esModule: true };

/***/ },
/* 709 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(710);
	module.exports = __webpack_require__(47).Number.isFinite;

/***/ },
/* 710 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(45)
	  , _isFinite = __webpack_require__(46).isFinite;
	
	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _sortBy = __webpack_require__(470);
	
	var _sortBy2 = _interopRequireDefault(_sortBy);
	
	var _toPairs = __webpack_require__(148);
	
	var _toPairs2 = _interopRequireDefault(_toPairs);
	
	var _fromPairs = __webpack_require__(712);
	
	var _fromPairs2 = _interopRequireDefault(_fromPairs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * QueryKey manages the serialization and deserialization of a query key for
	 * use in tracking query results in an instance of QueryManager.
	 */
	
	var QueryKey = function () {
		function QueryKey() {
			(0, _classCallCheck3.default)(this, QueryKey);
		}
	
		(0, _createClass3.default)(QueryKey, null, [{
			key: 'stringify',
	
			/**
	   * Returns a serialized query, given a query object
	   *
	   * @param  {Object} query Query object
	   * @return {String}       Serialized query
	   */
			value: function stringify(query) {
				return (0, _stringify2.default)((0, _sortBy2.default)((0, _toPairs2.default)(query), function (pair) {
					return pair[0];
				}));
			}
	
			/**
	   * Returns a query object, given a serialized query
	   *
	   * @param  {String} key Serialized query
	   * @return {Object}     Query object
	   */
	
		}, {
			key: 'parse',
			value: function parse(key) {
				return (0, _fromPairs2.default)(JSON.parse(key));
			}
		}]);
		return QueryKey;
	}(); /**
	      * External dependencies
	      */
	
	
	exports.default = QueryKey;
	module.exports = exports['default'];

/***/ },
/* 712 */
/***/ function(module, exports) {

	/**
	 * The inverse of `_.toPairs`; this method returns an object composed
	 * from key-value `pairs`.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} pairs The key-value pairs.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * _.fromPairs([['fred', 30], ['barney', 40]]);
	 * // => { 'fred': 30, 'barney': 40 }
	 */
	function fromPairs(pairs) {
	  var index = -1,
	      length = pairs ? pairs.length : 0,
	      result = {};
	
	  while (++index < length) {
	    var pair = pairs[index];
	    result[pair[0]] = pair[1];
	  }
	  return result;
	}
	
	module.exports = fromPairs;


/***/ },
/* 713 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _get2 = __webpack_require__(698);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _key = __webpack_require__(711);
	
	var _key2 = _interopRequireDefault(_key);
	
	var _constants = __webpack_require__(714);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * PaginatedQueryKey manages the serialization and deserialization of a query
	 * key for use in tracking query results in an instance of PostQueryManager.
	 */
	
	
	/**
	 * Internal dependencies
	 */
	
	var PaginatedQueryKey = function (_QueryKey) {
		(0, _inherits3.default)(PaginatedQueryKey, _QueryKey);
	
		function PaginatedQueryKey() {
			(0, _classCallCheck3.default)(this, PaginatedQueryKey);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PaginatedQueryKey).apply(this, arguments));
		}
	
		(0, _createClass3.default)(PaginatedQueryKey, null, [{
			key: 'stringify',
	
			/**
	   * Returns a serialized query, given a query object
	   *
	   * @param  {Object} query Query object
	   * @return {String}       Serialized query
	   */
			value: function stringify(query) {
				return (0, _get3.default)((0, _getPrototypeOf2.default)(PaginatedQueryKey), 'stringify', this).call(this, (0, _omit2.default)(query, _constants.PAGINATION_QUERY_KEYS));
			}
	
			/**
	   * Returns a query object, given a serialized query
	   *
	   * @param  {String} key Serialized query
	   * @return {Object}     Query object
	   */
	
		}, {
			key: 'parse',
			value: function parse(key) {
				return (0, _omit2.default)((0, _get3.default)((0, _getPrototypeOf2.default)(PaginatedQueryKey), 'parse', this).call(this, key), _constants.PAGINATION_QUERY_KEYS);
			}
		}]);
		return PaginatedQueryKey;
	}(_key2.default); /**
	                   * External dependencies
	                   */
	
	
	exports.default = PaginatedQueryKey;
	module.exports = exports['default'];

/***/ },
/* 714 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var DEFAULT_QUERY = exports.DEFAULT_QUERY = {
		number: 20,
		page: 1
	};
	
	var PAGINATION_QUERY_KEYS = exports.PAGINATION_QUERY_KEYS = ['number', 'offset', 'page'];

/***/ },
/* 715 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _getPrototypeOf = __webpack_require__(256);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(260);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(261);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(262);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _get2 = __webpack_require__(698);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _inherits2 = __webpack_require__(278);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _key = __webpack_require__(713);
	
	var _key2 = _interopRequireDefault(_key);
	
	var _constants = __webpack_require__(716);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns true if the specified key value query pair is identical to that of
	 * the default post query.
	 *
	 * @param  {*}       value Value to check
	 * @param  {String}  key   Key to check
	 * @return {Boolean}       Whether key value matches default query
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function isDefaultQueryValue(value, key) {
		return _constants.DEFAULT_POST_QUERY[key] === value;
	}
	
	/**
	 * PostQueryKey manages the serialization and deserialization of a query key
	 * for use in tracking query results in an instance of PostQueryManager.
	 */
	/**
	 * External dependencies
	 */
	
	var PostQueryKey = function (_PaginatedQueryKey) {
		(0, _inherits3.default)(PostQueryKey, _PaginatedQueryKey);
	
		function PostQueryKey() {
			(0, _classCallCheck3.default)(this, PostQueryKey);
			return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PostQueryKey).apply(this, arguments));
		}
	
		(0, _createClass3.default)(PostQueryKey, null, [{
			key: 'stringify',
	
			/**
	   * Returns a serialized query, given a query object
	   *
	   * @param  {Object} query Query object
	   * @return {String}       Serialized query
	   */
			value: function stringify(query) {
				return (0, _get3.default)((0, _getPrototypeOf2.default)(PostQueryKey), 'stringify', this).call(this, (0, _omitBy2.default)(query, isDefaultQueryValue));
			}
	
			/**
	   * Returns a query object, given a serialized query
	   *
	   * @param  {String} key Serialized query
	   * @return {Object}     Query object
	   */
	
		}, {
			key: 'parse',
			value: function parse(key) {
				return (0, _omitBy2.default)((0, _get3.default)((0, _getPrototypeOf2.default)(PostQueryKey), 'parse', this).call(this, key), isDefaultQueryValue);
			}
		}]);
		return PostQueryKey;
	}(_key2.default);
	
	exports.default = PostQueryKey;
	module.exports = exports['default'];

/***/ },
/* 716 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var DEFAULT_POST_QUERY = exports.DEFAULT_POST_QUERY = {
		context: 'display',
		http_envelope: false,
		pretty: false,
		number: 20,
		offset: 0,
		page: 1,
		order: 'DESC',
		order_by: 'date',
		type: 'post',
		status: 'publish',
		sticky: 'include',
		search: ''
	};

/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.requesting = requesting;
	exports.counts = counts;
	
	var _redux = __webpack_require__(662);
	
	var _merge3 = __webpack_require__(383);
	
	var _merge4 = _interopRequireDefault(_merge3);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(718);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated post types requesting state after an action has been
	 * dispatched. The state reflects a mapping of site ID, post type pairing to a
	 * boolean reflecting whether a request for the post types is in progress.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_COUNTS_REQUEST:
			case _actionTypes.POST_COUNTS_REQUEST_SUCCESS:
			case _actionTypes.POST_COUNTS_REQUEST_FAILURE:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postType, _actionTypes.POST_COUNTS_REQUEST === action.type)));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated post count state after an action has been dispatched.
	 * The state reflects a mapping of site ID, post type, [all/mine], post status
	 * to the number of posts.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function counts() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_COUNTS_RECEIVE:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postType, action.counts)));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.countsSchema)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		counts: counts
	});

/***/ },
/* 718 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var countsSchema = exports.countsSchema = {
		type: 'object',
		patternProperties: {
			'^[0-9]+$': {
				type: 'object',
				patternProperties: {
					'^[\\w-]+$': {
						type: 'object',
						patternProperties: {
							'^(all|mine)$': {
								type: 'object',
								patternProperties: {
									'^\\w+$': {
										type: 'integer'
									}
								},
								additionalProperties: false
							}
						},
						additionalProperties: false
					}
				},
				additionalProperties: false
			}
		},
		additionalProperties: false
	};

/***/ },
/* 719 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	exports.getNormalizedPostsQuery = getNormalizedPostsQuery;
	exports.getSerializedPostsQuery = getSerializedPostsQuery;
	exports.getSerializedPostsQueryWithoutPage = getSerializedPostsQueryWithoutPage;
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _constants = __webpack_require__(720);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns a normalized posts query, excluding any values which match the
	 * default post query.
	 *
	 * @param  {Object} query Posts query
	 * @return {Object}       Normalized posts query
	 */
	function getNormalizedPostsQuery(query) {
	  return (0, _omitBy2.default)(query, function (value, key) {
	    return _constants.DEFAULT_POST_QUERY[key] === value;
	  });
	}
	
	/**
	 * Returns a serialized posts query
	 *
	 * @param  {Object} query  Posts query
	 * @param  {Number} siteId Optional site ID
	 * @return {String}        Serialized posts query
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function getSerializedPostsQuery() {
	  var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var siteId = arguments[1];
	
	  var normalizedQuery = getNormalizedPostsQuery(query);
	  var serializedQuery = (0, _stringify2.default)(normalizedQuery).toLocaleLowerCase();
	
	  if (siteId) {
	    return [siteId, serializedQuery].join(':');
	  }
	
	  return serializedQuery;
	}
	
	/**
	 * Returns a serialized posts query, excluding any page parameter
	 *
	 * @param  {Object} query  Posts query
	 * @param  {Number} siteId Optional site ID
	 * @return {String}        Serialized posts query
	 */
	function getSerializedPostsQueryWithoutPage(query, siteId) {
	  return getSerializedPostsQuery((0, _omit2.default)(query, 'page'), siteId);
	}

/***/ },
/* 720 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var DEFAULT_POST_QUERY = exports.DEFAULT_POST_QUERY = {
		context: 'display',
		http_envelope: false,
		pretty: false,
		number: 20,
		offset: 0,
		page: 1,
		order: 'DESC',
		order_by: 'date',
		type: 'post',
		status: 'publish',
		sticky: 'include',
		search: ''
	};

/***/ },
/* 721 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		patternProperties: {
			//be careful to escape regexes properly
			'^[0-9a-z]+$': {
				type: 'object',
				required: ['ID', 'site_ID', 'global_ID'],
				properties: {
					ID: { type: 'integer' },
					site_ID: { type: 'integer' },
					global_ID: { type: 'string' },
					author: { type: 'object' },
					date: { type: 'string' },
					modified: { type: 'string' },
					title: { type: 'string' },
					URL: { type: 'string' },
					short_URL: { type: 'string' },
					content: { type: 'string' },
					excerpt: { type: 'string' },
					slug: { type: 'string' },
					guid: { type: 'string' },
					status: { type: 'string' },
					sticky: { type: 'boolean' },
					password: { type: 'string' },
					parent: { type: ['object', 'boolean'] },
					type: { type: 'string' },
					discussion: { type: 'object' },
					likes_enabled: { type: 'boolean' },
					sharing_enabled: { type: 'boolean' },
					like_count: { type: 'integer' },
					i_like: { type: 'boolean' },
					is_reblogged: { type: 'boolean' },
					is_following: { type: 'boolean' },
					featured_image: { type: 'string' },
					post_thumbnail: { type: ['object', 'string', 'null'] },
					format: { type: 'string' },
					geo: { type: ['object', 'boolean'] },
					menu_order: { type: 'integer' },
					page_template: { type: 'string' },
					publicize_URLS: { type: 'array' },
					tags: { type: 'object' },
					categories: { type: 'object' },
					attachments: { type: 'object' },
					attachment_count: { type: 'integer' },
					metadata: { type: ['array', 'boolean'] },
					meta: { type: 'object' },
					capabilities: { type: 'object' },
					other_URLs: { type: 'object' }
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(723);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(724);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  wporg: _reducer2.default,
	  premium: _reducer4.default
	}); /**
	     * External dependencies
	     */

	module.exports = exports['default'];

/***/ },
/* 723 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.fetchingItems = fetchingItems;
	exports.items = items;
	
	var _actionTypes = __webpack_require__(174);
	
	var _redux = __webpack_require__(662);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	function updatePluginState() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var pluginSlug = arguments[1];
		var attributes = arguments[2];
	
		return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, pluginSlug, (0, _assign2.default)({}, state[pluginSlug], attributes)));
	}
	
	function fetchingItems() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.FETCH_WPORG_PLUGIN_DATA:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.pluginSlug, true));
			case _actionTypes.WPORG_PLUGIN_DATA_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.pluginSlug, false));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
		var type = action.type;
		var pluginSlug = action.pluginSlug;
	
		switch (type) {
			case _actionTypes.WPORG_PLUGIN_DATA_RECEIVE:
				if (action.data) {
					return updatePluginState(state, pluginSlug, (0, _assign2.default)({ fetched: true, wporg: true }, action.data));
				}
				return updatePluginState(state, pluginSlug, (0, _assign2.default)({ fetched: false, wporg: false }));
	
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
			default:
				return state;
		}
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		fetchingItems: fetchingItems
	});

/***/ },
/* 724 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.isRequesting = isRequesting;
	exports.hasRequested = hasRequested;
	exports.plugins = plugins;
	
	var _redux = __webpack_require__(662);
	
	var _forEach = __webpack_require__(725);
	
	var _forEach2 = _interopRequireDefault(_forEach);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(727);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*
	 * Tracks the requesting state for premium plugin "instructions" (the list
	 * of plugins and API keys) on a per-site index.
	 */
	function isRequesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PLUGIN_SETUP_INSTRUCTIONS_FETCH:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, true));
			case _actionTypes.PLUGIN_SETUP_INSTRUCTIONS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, false));
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
			default:
				return state;
		}
	}
	
	/*
	 * Tracks the requesting state for premium plugin "instructions" (the list
	 * of plugins and API keys) on a per-site index.
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	* External dependencies
	*/
	function hasRequested() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PLUGIN_SETUP_INSTRUCTIONS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, true));
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
			default:
				return state;
		}
	}
	
	/*
	 * Tracks all known premium plugin objects (plugin meta and install status),
	 * indexed by site ID.
	 */
	function plugins() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		var _ret = function () {
			switch (action.type) {
				case _actionTypes.PLUGIN_SETUP_INSTRUCTIONS_RECEIVE:
					return {
						v: (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.data))
					};
				case _actionTypes.PLUGIN_SETUP_INSTALL:
				case _actionTypes.PLUGIN_SETUP_ACTIVATE:
				case _actionTypes.PLUGIN_SETUP_CONFIGURE:
				case _actionTypes.PLUGIN_SETUP_FINISH:
				case _actionTypes.PLUGIN_SETUP_ERROR:
					if (typeof state[action.siteId] !== 'undefined') {
						return {
							v: (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, pluginsForSite(state[action.siteId], action)))
						};
					}
					return {
						v: state
					};
				case _actionTypes.SERIALIZE:
					var processedState = {};
					// Save the error state as a string message.
					(0, _forEach2.default)(state, function (pluginList, key) {
						processedState[key] = pluginList.map(function (item) {
							if (item.error !== null) {
								return (0, _assign2.default)({}, item, { error: item.error.toString() });
							}
							return item;
						});
					});
					return {
						v: processedState
					};
				case _actionTypes.DESERIALIZE:
					if (!(0, _utils.isValidStateWithSchema)(state, _schema.pluginInstructionSchema)) {
						return {
							v: {}
						};
					}
					return {
						v: state
					};
				default:
					return {
						v: state
					};
			}
		}();
	
		if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
	}
	
	/*
	 * Tracks the list of premium plugin objects for a single site
	 */
	function pluginsForSite() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PLUGIN_SETUP_INSTRUCTIONS_RECEIVE:
				return action.data;
			case _actionTypes.PLUGIN_SETUP_INSTALL:
			case _actionTypes.PLUGIN_SETUP_ACTIVATE:
			case _actionTypes.PLUGIN_SETUP_CONFIGURE:
			case _actionTypes.PLUGIN_SETUP_FINISH:
			case _actionTypes.PLUGIN_SETUP_ERROR:
				return state.map(function (p) {
					return plugin(p, action);
				});
			default:
				return state;
		}
	}
	
	/*
	 * Tracks the state of a single premium plugin object
	 */
	function plugin(state, action) {
		switch (action.type) {
			case _actionTypes.PLUGIN_SETUP_INSTALL:
			case _actionTypes.PLUGIN_SETUP_ACTIVATE:
			case _actionTypes.PLUGIN_SETUP_CONFIGURE:
			case _actionTypes.PLUGIN_SETUP_FINISH:
				if (state.slug !== action.slug) {
					return state;
				}
				return (0, _assign2.default)({}, state, {
					status: pluginStatus(state.status, action)
				});
			case _actionTypes.PLUGIN_SETUP_ERROR:
				if (state.slug !== action.slug) {
					return state;
				}
				return (0, _assign2.default)({}, state, {
					status: pluginStatus(state.status, action),
					error: action.error
				});
			default:
				return state;
		}
	}
	
	/*
	 * Tracks the status of a plugin through the install/activate/configure process
	 */
	function pluginStatus(state, action) {
		switch (action.type) {
			case _actionTypes.PLUGIN_SETUP_INSTALL:
				return 'install';
			case _actionTypes.PLUGIN_SETUP_ACTIVATE:
				return 'activate';
			case _actionTypes.PLUGIN_SETUP_CONFIGURE:
				return 'configure';
			case _actionTypes.PLUGIN_SETUP_FINISH:
				return 'done';
			default:
				return state || 'wait';
		}
	}
	
	exports.default = (0, _redux.combineReducers)({
		isRequesting: isRequesting,
		hasRequested: hasRequested,
		plugins: plugins
	});

/***/ },
/* 725 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(333),
	    baseCastFunction = __webpack_require__(726),
	    baseEach = __webpack_require__(91),
	    isArray = __webpack_require__(36);
	
	/**
	 * Iterates over elements of `collection` invoking `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length" property
	 * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`
	 * for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @example
	 *
	 * _([1, 2]).forEach(function(value) {
	 *   console.log(value);
	 * });
	 * // => logs `1` then `2`
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => logs 'a' then 'b' (iteration order is not guaranteed)
	 */
	function forEach(collection, iteratee) {
	  return (typeof iteratee == 'function' && isArray(collection))
	    ? arrayEach(collection, iteratee)
	    : baseEach(collection, baseCastFunction(iteratee));
	}
	
	module.exports = forEach;


/***/ },
/* 726 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(165);
	
	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the array-like object.
	 */
	function baseCastFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}
	
	module.exports = baseCastFunction;


/***/ },
/* 727 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var pluginInstructionSchema = exports.pluginInstructionSchema = {
		type: 'object',
		patternProperties: {
			//be careful to escape regexes properly
			'^[0-9]+$': {
				type: 'array',
				items: {
					required: ['slug', 'key'],
					properties: {
						name: { type: 'string' },
						slug: { type: 'string' },
						key: { type: 'string' },
						status: { type: 'string' },
						error: { type: ['object', 'string', 'null'] }
					}
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 728 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.requesting = requesting;
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(729);
	
	var schema = _interopRequireWildcard(_schema);
	
	var _reducer = __webpack_require__(730);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated requests state after an action has been dispatched. The
	 * state maps site ID keys to whether a request for post types is in progress.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_TYPES_REQUEST:
			case _actionTypes.POST_TYPES_REQUEST_SUCCESS:
			case _actionTypes.POST_TYPES_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, _actionTypes.POST_TYPES_REQUEST === action.type));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated items state after an action has been dispatched. The
	 * state maps site ID keys to an object of post type name to post type for all
	 * supported post types on the site.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_TYPES_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _keyBy2.default)(action.types, 'name')));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, schema.items)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		items: items,
		taxonomies: _reducer2.default
	});

/***/ },
/* 729 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var items = exports.items = {
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			'^\\d+$': {
				type: 'object',
				additionalProperties: {
					type: 'object',
					required: ['name'],
					properties: {
						name: { type: 'string' },
						label: { type: 'string' },
						labels: { type: 'object' },
						description: { type: 'string' },
						map_meta_cap: { type: 'boolean' },
						capabilities: { type: 'object' },
						api_queryable: { type: 'boolean' },
						hierarchical: { type: 'boolean' },
						supports: { type: 'object' }
					}
				}
			}
		}
	};

/***/ },
/* 730 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.requesting = requesting;
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _merge3 = __webpack_require__(383);
	
	var _merge4 = _interopRequireDefault(_merge3);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(731);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated requests state after an action has been dispatched. The
	 * state is a mapping of site ID to post type to whether a request for that
	 * post type is in progress.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_TYPES_TAXONOMIES_REQUEST:
			case _actionTypes.POST_TYPES_TAXONOMIES_REQUEST_SUCCESS:
			case _actionTypes.POST_TYPES_TAXONOMIES_REQUEST_FAILURE:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postType, _actionTypes.POST_TYPES_TAXONOMIES_REQUEST === action.type)));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated requests state after an action has been dispatched. The
	 * state is a mapping of site ID to post type to taxonomies.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_TYPES_TAXONOMIES_RECEIVE:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postType, (0, _keyBy2.default)(action.taxonomies, 'name'))));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		items: items
	});

/***/ },
/* 731 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		patternProperties: {
			// Site ID
			'^[0-9]+$': {
				type: 'object',
				patternProperties: {
					// Post Type
					'^.*$': {
						type: 'object',
						patternProperties: {
							// Taxonomy name
							'^.*$': {
								type: 'object',
								required: ['name'],
								properties: {
									name: { type: 'string' },
									label: { type: 'string' },
									labels: { type: 'object' },
									description: { type: 'string' },
									hierarchical: { type: 'boolean' },
									'public': { type: 'boolean' },
									capabilities: { type: 'object' }
								}
							}
						},
						additionalProperties: false
					}
				},
				additionalProperties: false
			}
		},
		additionalProperties: false
	};

/***/ },
/* 732 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(733);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(736);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	var _reducer5 = __webpack_require__(738);
	
	var _reducer6 = _interopRequireDefault(_reducer5);
	
	var _reducer7 = __webpack_require__(741);
	
	var _reducer8 = _interopRequireDefault(_reducer7);
	
	var _reducer9 = __webpack_require__(742);
	
	var _reducer10 = _interopRequireDefault(_reducer9);
	
	var _reducer11 = __webpack_require__(745);
	
	var _reducer12 = _interopRequireDefault(_reducer11);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
		feeds: _reducer4.default,
		lists: _reducer2.default,
		sites: _reducer6.default,
		start: _reducer8.default,
		posts: _reducer10.default,
		relatedPosts: _reducer12.default
	}); /**
	     * External dependencies
	     */

	module.exports = exports['default'];

/***/ },
/* 733 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	exports.subscribedLists = subscribedLists;
	exports.updatedLists = updatedLists;
	exports.isRequestingList = isRequestingList;
	exports.isRequestingLists = isRequestingLists;
	exports.errors = errors;
	exports.missingLists = missingLists;
	
	var _redux = __webpack_require__(662);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _union = __webpack_require__(734);
	
	var _union2 = _interopRequireDefault(_union);
	
	var _filter = __webpack_require__(317);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _find = __webpack_require__(90);
	
	var _find2 = _interopRequireDefault(_find);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(735);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks all known list objects, indexed by list ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LISTS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _keyBy2.default)(action.lists, 'ID'));
			case _actionTypes.READER_LIST_REQUEST_SUCCESS:
			case _actionTypes.READER_LIST_UPDATE_SUCCESS:
				return (0, _assign2.default)({}, state, (0, _keyBy2.default)([action.data.list], 'ID'));
			case _actionTypes.READER_LIST_UPDATE_TITLE:
				var listForTitleChange = (0, _assign2.default)({}, state[action.listId]);
				if (!listForTitleChange) {
					return state;
				}
				listForTitleChange.title = action.title;
				return (0, _assign2.default)({}, state, (0, _keyBy2.default)([listForTitleChange], 'ID'));
			case _actionTypes.READER_LIST_UPDATE_DESCRIPTION:
				var listForDescriptionChange = (0, _assign2.default)({}, state[action.listId]);
				if (!listForDescriptionChange) {
					return state;
				}
				listForDescriptionChange.description = action.description;
				return (0, _assign2.default)({}, state, (0, _keyBy2.default)([listForDescriptionChange], 'ID'));
			case _actionTypes.SERIALIZE:
				return state;
			case _actionTypes.DESERIALIZE:
				if (!(0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return {};
				}
				return state;
		}
		return state;
	}
	
	/**
	 * Tracks which list IDs the current user is subscribed to.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function subscribedLists() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LISTS_RECEIVE:
				return (0, _union2.default)(state, (0, _map2.default)(action.lists, 'ID'));
			case _actionTypes.READER_LISTS_UNFOLLOW_SUCCESS:
				// Remove the unfollowed list ID from subscribedLists
				return (0, _filter2.default)(state, function (listId) {
					return listId !== action.data.list.ID;
				});
			case _actionTypes.SERIALIZE:
				return state;
			case _actionTypes.DESERIALIZE:
				if (!(0, _utils.isValidStateWithSchema)(state, _schema.subscriptionsSchema)) {
					return [];
				}
				return state;
		}
		return state;
	}
	
	/**
	 * Tracks which list IDs have been updated recently. Used to show the correct success message.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function updatedLists() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LIST_UPDATE_SUCCESS:
				var newListId = (0, _get2.default)(action, 'data.list.ID');
				if (!newListId) {
					return state;
				}
				return (0, _union2.default)(state, [newListId]);
			case _actionTypes.READER_LIST_DISMISS_NOTICE:
				// Remove the dismissed list ID
				return (0, _filter2.default)(state, function (listId) {
					return listId !== action.listId;
				});
			case _actionTypes.SERIALIZE:
				return state;
			case _actionTypes.DESERIALIZE:
				if (!(0, _utils.isValidStateWithSchema)(state, _schema.updatedListsSchema)) {
					return [];
				}
				return state;
		}
		return state;
	}
	
	/**
	 * Returns the updated requests state after an action has been dispatched.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function isRequestingList() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LIST_REQUEST:
			case _actionTypes.READER_LIST_REQUEST_SUCCESS:
			case _actionTypes.READER_LIST_REQUEST_FAILURE:
				return _actionTypes.READER_LIST_REQUEST === action.type;
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	}
	
	/**
	 * Returns the updated requests state after an action has been dispatched.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function isRequestingLists() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LISTS_REQUEST:
			case _actionTypes.READER_LISTS_REQUEST_SUCCESS:
			case _actionTypes.READER_LISTS_REQUEST_FAILURE:
				return _actionTypes.READER_LISTS_REQUEST === action.type;
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	}
	
	/**
	 * Returns errors received when trying to update lists, keyed by list ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function errors() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LIST_UPDATE_FAILURE:
				var newError = {};
				newError[action.list.ID] = action.error.statusCode;
				return (0, _assign2.default)({}, state, newError);
	
			case _actionTypes.READER_LIST_DISMISS_NOTICE:
				// Remove the dismissed list ID
				return (0, _omit2.default)(state, action.listId);
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				if (!(0, _utils.isValidStateWithSchema)(state, _schema.errorsSchema)) {
					return {};
				}
				return state;
		}
	
		return state;
	}
	
	/**
	 * A missing list is one that's been requested, but we couldn't find (API response 404-ed).
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function missingLists() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_LISTS_RECEIVE:
				// Remove any valid lists from missingLists
				return (0, _filter2.default)(state, function (list) {
					return !(0, _find2.default)(action.lists, { owner: list.owner, slug: list.slug });
				});
			case _actionTypes.READER_LIST_REQUEST_SUCCESS:
				// Remove any valid lists from missingLists
				return (0, _filter2.default)(state, function (list) {
					return action.data.list.owner !== list.owner && action.data.list.slug !== list.slug;
				});
			case _actionTypes.READER_LIST_REQUEST_FAILURE:
				// Add lists that have failed with a 403 or 404 to missingLists
				if (!action.error || !(0, _includes2.default)([403, 404], action.error.statusCode)) {
					return state;
				}
				return (0, _union2.default)(state, [{ owner: action.owner, slug: action.slug }]);
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return state;
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		subscribedLists: subscribedLists,
		updatedLists: updatedLists,
		isRequestingList: isRequestingList,
		isRequestingLists: isRequestingLists,
		errors: errors,
		missingLists: missingLists
	});

/***/ },
/* 734 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(243),
	    baseUniq = __webpack_require__(457),
	    rest = __webpack_require__(24);
	
	/**
	 * Creates an array of unique values, in order, from all given arrays using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of combined values.
	 * @example
	 *
	 * _.union([2, 1], [4, 2], [1, 2]);
	 * // => [2, 1, 4]
	 */
	var union = rest(function(arrays) {
	  return baseUniq(baseFlatten(arrays, 1, true));
	});
	
	module.exports = union;


/***/ },
/* 735 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		patternProperties: {
			//be careful to escape regexes properly
			'^[0-9]+$': {
				type: 'object',
				required: ['ID'],
				properties: {
					ID: { type: 'integer' },
					title: { type: 'string' },
					slug: { type: 'string' },
					description: { type: 'string' },
					owner: { type: 'string' },
					is_owner: { type: 'boolean' },
					is_public: { type: 'boolean' }
				}
			}
		},
		additionalProperties: false
	};
	
	var subscriptionsSchema = exports.subscriptionsSchema = {
		type: 'array'
	};
	
	var updatedListsSchema = exports.updatedListsSchema = {
		type: 'array'
	};
	
	var errorsSchema = exports.errorsSchema = {
		type: 'object'
	};

/***/ },
/* 736 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _actionMap;
	
	exports.items = items;
	exports.queuedRequests = queuedRequests;
	
	var _redux = __webpack_require__(662);
	
	var _assign4 = __webpack_require__(10);
	
	var _assign5 = _interopRequireDefault(_assign4);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _actionTypes = __webpack_require__(174);
	
	var _formatting = __webpack_require__(498);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(737);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var actionMap = (_actionMap = {}, (0, _defineProperty3.default)(_actionMap, _actionTypes.SERIALIZE, handleSerialize), (0, _defineProperty3.default)(_actionMap, _actionTypes.DESERIALIZE, handleDeserialize), (0, _defineProperty3.default)(_actionMap, _actionTypes.READER_FEED_REQUEST_SUCCESS, handleRequestSuccess), (0, _defineProperty3.default)(_actionMap, _actionTypes.READER_FEED_REQUEST_FAILURE, handleRequestFailure), (0, _defineProperty3.default)(_actionMap, _actionTypes.READER_FEED_UPDATE, handleFeedUpdate), _actionMap);
	
	function defaultHandler(state) {
		return state;
	}
	
	function handleSerialize(state) {
		// remove errors from the serialized state
		return (0, _omitBy2.default)(state, 'is_error');
	}
	
	function handleDeserialize(state) {
		if ((0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
			return state;
		}
		return {};
	}
	
	function handleRequestFailure(state, action) {
		// new object proceeds current state to prevent new errors from overwriting existing values
		return (0, _assign5.default)((0, _defineProperty3.default)({}, action.payload.feed_ID, {
			feed_ID: action.payload.feed_ID,
			is_error: true
		}), state);
	}
	
	function handleRequestSuccess(state, action) {
		var feed = (0, _assign5.default)({}, action.payload);
		if (feed.name) {
			feed.name = (0, _formatting.decodeEntities)(feed.name);
		}
		return (0, _assign5.default)({}, state, (0, _defineProperty3.default)({}, action.payload.feed_ID, feed));
	}
	
	function handleFeedUpdate(state, action) {
		var feeds = (0, _map2.default)(action.payload, function (feed) {
			feed = (0, _assign5.default)({}, feed);
			if (feed.name) {
				feed.name = (0, _formatting.decodeEntities)(feed.name);
			}
			return feed;
		});
		return (0, _assign5.default)({}, state, (0, _keyBy2.default)(feeds, 'feed_ID'));
	}
	
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		var handler = actionMap[action.type] || defaultHandler;
		return handler(state, action);
	}
	
	function queuedRequests() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_FEED_REQUEST:
				return (0, _assign5.default)({}, state, (0, _defineProperty3.default)({}, action.payload.feed_ID, true));
				break;
			case _actionTypes.READER_FEED_REQUEST_SUCCESS:
			case _actionTypes.READER_FEED_REQUEST_FAILURE:
				return (0, _omit2.default)(state, action.payload.feed_ID);
				break;
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		queuedRequests: queuedRequests
	});

/***/ },
/* 737 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		patternProperties: {
			//be careful to escape regexes properly
			'^[0-9a-z]+$': {
				type: 'object',
				required: ['feed_ID', 'blog_ID'],
				properties: {
					feed_ID: { type: 'integer' },
					blog_ID: { type: 'integer' },
					name: { type: 'string' },
					URL: { type: 'string' },
					feed_URL: { type: 'string' },
					is_following: { type: 'boolean' },
					subscribers_count: { type: 'integer' },
					meta: { type: 'object' }
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 738 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _actionMap;
	
	exports.items = items;
	exports.queuedRequests = queuedRequests;
	
	var _redux = __webpack_require__(662);
	
	var _assign4 = __webpack_require__(10);
	
	var _assign5 = _interopRequireDefault(_assign4);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(739);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var actionMap = (_actionMap = {}, (0, _defineProperty3.default)(_actionMap, _actionTypes.SERIALIZE, handleSerialize), (0, _defineProperty3.default)(_actionMap, _actionTypes.DESERIALIZE, handleDeserialize), (0, _defineProperty3.default)(_actionMap, _actionTypes.READER_SITE_REQUEST_SUCCESS, handleRequestSuccess), (0, _defineProperty3.default)(_actionMap, _actionTypes.READER_SITE_REQUEST_FAILURE, handleRequestFailure), (0, _defineProperty3.default)(_actionMap, _actionTypes.READER_SITE_UPDATE, handleSiteUpdate), _actionMap);
	
	function defaultHandler(state) {
		return state;
	}
	
	function handleSerialize(state) {
		// remove errors from the serialized state
		return (0, _omitBy2.default)(state, 'is_error');
	}
	
	function handleDeserialize(state) {
		if ((0, _utils.isValidStateWithSchema)(state, _schema.readerSitesSchema)) {
			return state;
		}
		return {};
	}
	
	function handleRequestFailure(state, action) {
		// new object proceeds current state to prevent new errors from overwriting existing values
		return (0, _assign5.default)((0, _defineProperty3.default)({}, action.payload.ID, {
			ID: action.payload.ID,
			is_error: true
		}), state);
	}
	
	function adaptSite(attributes) {
		// this also ends up cloning attributes, which is important since we mutate it
		attributes = (0, _omit2.default)(attributes, ['meta', '_headers']);
	
		if (attributes.URL) {
			attributes.domain = attributes.URL.replace(/^https?:\/\//, '');
			attributes.slug = attributes.domain.replace(/\//g, '::');
		}
		attributes.title = attributes.name ? attributes.name : attributes.domain;
	
		// If a WordPress.com site has a mapped domain create a `wpcom_url`
		// attribute to allow site selection with either domain.
		if (attributes.options && attributes.options.is_mapped_domain && !attributes.is_jetpack) {
			attributes.wpcom_url = attributes.options.unmapped_url.replace(/^https?:\/\//, '');
		}
	
		// If a site has an `is_redirect` property use the `unmapped_url`
		// for the slug and domain to match the wordpress.com original site.
		if (attributes.options && attributes.options.is_redirect) {
			attributes.slug = attributes.options.unmapped_url.replace(/^https?:\/\//, '');
			attributes.domain = attributes.slug;
		}
		return attributes;
	}
	
	function handleRequestSuccess(state, action) {
		var site = adaptSite(action.payload);
		// TODO do we need to normalize site entries somehow?
		return (0, _assign5.default)({}, state, (0, _defineProperty3.default)({}, action.payload.ID, site));
	}
	
	function handleSiteUpdate(state, action) {
		var sites = (0, _map2.default)(action.payload, adaptSite);
		return (0, _assign5.default)({}, state, (0, _keyBy2.default)(sites, 'ID'));
	}
	
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		var handler = actionMap[action.type] || defaultHandler;
		return handler(state, action);
	}
	
	function queuedRequests() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_SITE_REQUEST:
				return (0, _assign5.default)({}, state, (0, _defineProperty3.default)({}, action.payload.ID, true));
				break;
			case _actionTypes.READER_SITE_REQUEST_SUCCESS:
			case _actionTypes.READER_SITE_REQUEST_FAILURE:
				return (0, _omit2.default)(state, action.payload.ID);
				break;
			// we intentionally don't update state on READER_SITE_UPDATE because those can't affect inflight requests
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		queuedRequests: queuedRequests
	});

/***/ },
/* 739 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.readerSitesSchema = undefined;
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _schema = __webpack_require__(740);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var readerSitesSchema = exports.readerSitesSchema = (0, _assign2.default)({}, _schema.sitesSchema);
	
	readerSitesSchema.patternProperties['^\\d+$'].properties.feed_ID = { type: 'number' };

/***/ },
/* 740 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var sitesSchema = exports.sitesSchema = {
		type: 'object',
		patternProperties: {
			//be careful to escape regexes properly
			'^\\d+$': {
				type: 'object',
				required: ['ID', 'name'],
				properties: {
					ID: { type: 'number' },
					name: { type: 'string' },
					description: { type: 'string' },
					URL: { type: 'string' },
					jetpack: { type: 'boolean' },
					post_count: { type: 'number' },
					subscribers_count: { type: 'number' },
					slug: { type: 'string' },
					lang: { type: 'string' },
					icon: {
						type: 'object',
						properties: {
							img: { type: 'string' },
							ico: { type: 'string' }
						}
					},
					logo: {
						type: 'object',
						properties: {
							id: { type: 'number' },
							sizes: { type: ['array', 'object'] },
							url: { type: 'string' }
						}
					},
					visible: { type: 'boolean' },
					is_private: { type: 'boolean' },
					is_following: { type: 'boolean' },
					options: { type: 'object' },
					meta: { type: 'object' },
					user_can_manager: { type: 'boolean' },
					is_vip: { type: 'boolean' },
					is_previewable: { type: 'boolean' },
					is_customizable: { type: 'boolean' },
					is_multisite: { type: 'boolean' },
					capabilities: {
						type: 'object',
						patternProperties: {
							'^[a-z_]+$': { type: 'boolean' }
						}
					},
					plan: {
						type: 'object',
						properties: {
							product_id: { type: 'number' },
							product_slug: { type: 'string' },
							product_name_short: { type: 'string' },
							free_trial: { type: 'boolean' }
						}
					},
					single_user_site: { type: 'boolean' }
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 741 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.items = items;
	exports.isRequestingRecommendations = isRequestingRecommendations;
	exports.recommendationsInteractedWith = recommendationsInteractedWith;
	
	var _redux = __webpack_require__(662);
	
	var _union = __webpack_require__(734);
	
	var _union2 = _interopRequireDefault(_union);
	
	var _find = __webpack_require__(90);
	
	var _find2 = _interopRequireDefault(_find);
	
	var _filter = __webpack_require__(317);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks all known list objects, indexed by list ID.
	 *
	 * @param  {Array} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Array}        Updated state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_START_RECOMMENDATIONS_RECEIVE:
				// Filter out any recommendations we already have
				var newRecommendations = (0, _filter2.default)(action.recommendations, function (incomingRecommendation) {
					return !(0, _find2.default)(state, { ID: incomingRecommendation.ID });
				});
	
				// No new recommendations? Just return the existing ones.
				if (newRecommendations.length < 1) {
					return state;
				}
	
				return state.concat(newRecommendations);
	
			// Always return default state - we don't want to serialize recommendations
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return [];
		}
	
		return state;
	}
	
	/**
	 * Returns the updated requests state after an action has been dispatched.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function isRequestingRecommendations() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_START_RECOMMENDATIONS_REQUEST:
			case _actionTypes.READER_START_RECOMMENDATIONS_REQUEST_SUCCESS:
			case _actionTypes.READER_START_RECOMMENDATIONS_REQUEST_FAILURE:
				return _actionTypes.READER_START_RECOMMENDATIONS_REQUEST === action.type;
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	}
	
	function recommendationsInteractedWith() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_START_RECOMMENDATION_INTERACTION:
				return (0, _union2.default)(state, [action.recommendationId]);
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return [];
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		isRequestingRecommendations: isRequestingRecommendations,
		recommendationsInteractedWith: recommendationsInteractedWith
	});

/***/ },
/* 742 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _isUndefined = __webpack_require__(743);
	
	var _isUndefined2 = _interopRequireDefault(_isUndefined);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(744);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks all known post objects, indexed by post ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_POSTS_RECEIVE:
				{
					return (0, _assign2.default)({}, state, (0, _keyBy2.default)(action.posts, 'global_ID'));
				}
			case _actionTypes.SERIALIZE:
				return state;
			case _actionTypes.DESERIALIZE:
				if (!(0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return {};
				}
				return state;
		}
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	
	
	exports.default = (0, _redux.combineReducers)({
		items: items
	});

/***/ },
/* 743 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}
	
	module.exports = isUndefined;


/***/ },
/* 744 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object'
	};

/***/ },
/* 745 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.queuedRequests = exports.items = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _createReducer2; /**
	                      * External Dependencies
	                      */
	
	
	/**
	 * Internal Dependencies
	 */
	
	
	var _redux = __webpack_require__(662);
	
	var _assign3 = __webpack_require__(10);
	
	var _assign4 = _interopRequireDefault(_assign3);
	
	var _partial = __webpack_require__(746);
	
	var _partial2 = _interopRequireDefault(_partial);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _utils = __webpack_require__(664);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils2 = __webpack_require__(747);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var items = exports.items = (0, _utils.createReducer)({}, (0, _defineProperty3.default)({}, _actionTypes.READER_RELATED_POSTS_RECEIVE, function (state, action) {
		state = (0, _assign4.default)({}, state, (0, _defineProperty3.default)({}, (0, _utils2.key)(action.payload.siteId, action.payload.postId), (0, _map2.default)(action.payload.posts, 'global_ID')));
		return state;
	}));
	
	function setRequestFlag(val, state, action) {
		return (0, _assign4.default)({}, state, (0, _defineProperty3.default)({}, (0, _utils2.key)(action.payload.siteId, action.payload.postId), val));
	}
	
	var queuedRequests = exports.queuedRequests = (0, _utils.createReducer)({}, (_createReducer2 = {}, (0, _defineProperty3.default)(_createReducer2, _actionTypes.READER_RELATED_POSTS_REQUEST, (0, _partial2.default)(setRequestFlag, true)), (0, _defineProperty3.default)(_createReducer2, _actionTypes.READER_RELATED_POSTS_REQUEST_SUCCESS, (0, _partial2.default)(setRequestFlag, false)), (0, _defineProperty3.default)(_createReducer2, _actionTypes.READER_RELATED_POSTS_REQUEST_FAILURE, (0, _partial2.default)(setRequestFlag, false)), _createReducer2));
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		queuedRequests: queuedRequests
	});

/***/ },
/* 746 */
/***/ function(module, exports, __webpack_require__) {

	var createWrapper = __webpack_require__(359),
	    replaceHolders = __webpack_require__(380),
	    rest = __webpack_require__(24);
	
	/** Used to compose bitmasks for wrapper metadata. */
	var PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with `partial` arguments prepended
	 * to those provided to the new function. This method is like `_.bind` except
	 * it does **not** alter the `this` binding.
	 *
	 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * var greet = function(greeting, name) {
	 *   return greeting + ' ' + name;
	 * };
	 *
	 * var sayHelloTo = _.partial(greet, 'hello');
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 *
	 * // Partially applied with placeholders.
	 * var greetFred = _.partial(greet, _, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 */
	var partial = rest(function(func, partials) {
	  var placeholder = partial.placeholder,
	      holders = replaceHolders(partials, placeholder);
	
	  return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partial.placeholder = {};
	
	module.exports = partial;


/***/ },
/* 747 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.key = key;
	function key(siteId, postId) {
		return siteId + "-" + postId;
	}

/***/ },
/* 748 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.initialReceiptState = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	var initialReceiptState = exports.initialReceiptState = {
		data: null,
		error: null,
		hasLoadedFromServer: false,
		isRequesting: false
	};
	
	/**
	 * Returns a new state with the given attributes for the given receipt ID.
	 *
	 * @param {Object} state current state
	 * @param {Number} receiptId identifier of the site
	 * @param {Object} attributes list of attributes and their values
	 * @returns {Object} the new state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function updateReceiptState(state, receiptId, attributes) {
		return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, receiptId, (0, _assign2.default)({}, initialReceiptState, state[receiptId], attributes)));
	}
	
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.RECEIPT_FETCH:
				return updateReceiptState(state, action.receiptId, {
					isRequesting: true
				});
			case _actionTypes.RECEIPT_FETCH_COMPLETED:
				return updateReceiptState(state, action.receiptId, {
					data: action.receipt,
					error: null,
					hasLoadedFromServer: true,
					isRequesting: false
				});
			case _actionTypes.RECEIPT_FETCH_FAILED:
				return updateReceiptState(state, action.receiptId, {
					error: action.error,
					isRequesting: false
				});
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items
	});

/***/ },
/* 749 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(750);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  publicize: _reducer2.default
	});
	
	/**
	 * Internal dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 750 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.fetchingConnections = fetchingConnections;
	exports.connections = connections;
	
	var _redux = __webpack_require__(662);
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(751);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Track the current status for fetching connections. Maps site ID to the
	 * fetching status for that site. Assigns `true` for currently fetching,
	 * `false` for done or failed fetching, or `undefined` if no fetch attempt
	 * has been made for the site.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function fetchingConnections() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PUBLICIZE_CONNECTIONS_REQUEST:
			case _actionTypes.PUBLICIZE_CONNECTIONS_RECEIVE:
			case _actionTypes.PUBLICIZE_CONNECTIONS_REQUEST_FAILURE:
				var type = action.type;
				var siteId = action.siteId;
	
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, _actionTypes.PUBLICIZE_CONNECTIONS_REQUEST === type));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Tracks all known connection objects, indexed by connection ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function connections() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.PUBLICIZE_CONNECTIONS_RECEIVE:
				state = (0, _omitBy2.default)(state, { site_ID: action.siteId });
				return (0, _assign2.default)(state, (0, _keyBy2.default)(action.data.connections, 'ID'));
	
			case _actionTypes.SERIALIZE:
				return state;
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.connectionsSchema)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		fetchingConnections: fetchingConnections,
		connections: connections
	});

/***/ },
/* 751 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var connectionsSchema = exports.connectionsSchema = {
		type: 'object',
		patternProperties: {
			'^\\d+$': {
				type: 'object',
				required: ['ID', 'site_ID'],
				properties: {
					ID: { type: 'integer' },
					site_ID: { type: 'integer' },
					user_ID: { type: 'integer' },
					keyring_connection_ID: { type: 'integer' },
					keyring_connection_user_ID: { type: 'integer' },
					shared: { type: 'boolean' },
					service: { type: 'string' },
					label: { type: 'string' },
					issued: { type: 'string' },
					expires: { type: 'string' },
					external_ID: { type: ['string', 'null'] },
					external_name: { type: ['string', 'null'] },
					external_display: { type: ['string', 'null'] },
					external_profile_picture: { type: ['string', 'null'] },
					external_profile_URL: { type: ['string', 'null'] },
					external_follower_count: { type: ['integer', 'null'] },
					status: { type: 'string' },
					refresh_URL: { type: 'string' },
					meta: { type: 'object' }
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 752 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _keys = __webpack_require__(404);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	exports.items = items;
	exports.fetchingItems = fetchingItems;
	
	var _redux = __webpack_require__(662);
	
	var _pick = __webpack_require__(418);
	
	var _pick2 = _interopRequireDefault(_pick);
	
	var _merge = __webpack_require__(383);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	var _reducer = __webpack_require__(753);
	
	var _reducer2 = __webpack_require__(754);
	
	var _reducer3 = _interopRequireDefault(_reducer2);
	
	var _reducer4 = __webpack_require__(756);
	
	var _reducer5 = _interopRequireDefault(_reducer4);
	
	var _reducer6 = __webpack_require__(758);
	
	var _reducer7 = _interopRequireDefault(_reducer6);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(740);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Constants
	 */
	// [TODO]: This validation is only necessary so long as we continue to receive
	// decorated sites from the `lib/sites-list` module.
	/**
	 * External dependencies
	 */
	var VALID_SITE_KEYS = (0, _keys2.default)(_schema.sitesSchema.patternProperties['^\\d+$'].properties);
	
	/**
	 * Tracks all known site objects, indexed by site ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_SUCCESS:
				var prevSite = state[action.siteId];
				if (prevSite) {
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _merge2.default)({}, prevSite, { options: { wordads: true } })));
				}
				return state;
			case _actionTypes.SITE_RECEIVE:
				{
					var site = (0, _pick2.default)(action.site, VALID_SITE_KEYS);
					return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, site.ID, site));
				}
	
			case _actionTypes.SITES_RECEIVE:
				return action.sites.reduce(function (memo, site) {
					memo[site.ID] = (0, _pick2.default)(site, VALID_SITE_KEYS);
					return memo;
				}, {});
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.sitesSchema)) {
					return state;
				}
				return {};
		}
	
		return state;
	}
	
	/**
	 * Tracks sites fetching state
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function fetchingItems() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITES_REQUEST:
			case _actionTypes.SITES_REQUEST_FAILURE:
			case _actionTypes.SITES_REQUEST_SUCCESS:
				return (0, _assign2.default)({}, state, {
					all: action.type === _actionTypes.SITES_REQUEST
				});
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		domains: _reducer3.default,
		fetchingItems: fetchingItems,
		items: items,
		mediaStorage: _reducer7.default,
		plans: _reducer.plans,
		vouchers: _reducer5.default
	});

/***/ },
/* 753 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.initialSiteState = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.plans = plans;
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	var initialSiteState = exports.initialSiteState = {
		data: null,
		error: null,
		hasLoadedFromServer: false,
		isRequesting: false
	};
	
	/**
	 * Returns a new state with the given attributes updated for the specified site.
	 *
	 * @param {Object} state current state
	 * @param {Number} siteId identifier of the site
	 * @param {Object} attributes list of attributes and their values
	 * @returns {Object} the new state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function updateSiteState(state, siteId, attributes) {
		return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, (0, _assign2.default)({}, initialSiteState, state[siteId], attributes)));
	}
	
	function plans() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_PLANS_FETCH:
				return updateSiteState(state, action.siteId, {
					error: null,
					isRequesting: true
				});
	
			case _actionTypes.SITE_PLANS_FETCH_COMPLETED:
				return updateSiteState(state, action.siteId, {
					error: null,
					hasLoadedFromServer: true,
					isRequesting: false,
					data: action.plans
				});
	
			case _actionTypes.SITE_PLANS_FETCH_FAILED:
				return updateSiteState(state, action.siteId, {
					error: action.error,
					isRequesting: false
				});
	
			case _actionTypes.SITE_PLANS_REMOVE:
				return (0, _omit2.default)(state, action.siteId);
	
			case _actionTypes.SITE_PLANS_TRIAL_CANCEL:
				return updateSiteState(state, action.siteId, {
					isRequesting: true
				});
	
			case _actionTypes.SITE_PLANS_TRIAL_CANCEL_COMPLETED:
				return updateSiteState(state, action.siteId, {
					error: null,
					hasLoadedFromServer: true,
					isRequesting: false,
					data: action.plans
				});
	
			case _actionTypes.SITE_PLANS_TRIAL_CANCEL_FAILED:
				return updateSiteState(state, action.siteId, {
					error: action.error,
					isRequesting: false
				});
	
			case _actionTypes.SERIALIZE:
				//TODO: we have full instances of moment.js on sites.plans[siteID].data
				return {};
	
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}

/***/ },
/* 754 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.errors = exports.requesting = exports.items = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(755);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Domains `Reducer` function
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - domains action
	 * @return {Object} updated state
	 */
	/**
	 * External dependencies
	 */
	var items = exports.items = function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
		var siteId = action.siteId;
	
		switch (action.type) {
			case _actionTypes.SITE_DOMAINS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, action.domains));
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return state;
				}
				return {};
			case _actionTypes.SERIALIZE:
				return state;
		}
	
		return state;
	};
	
	/**
	 * `Reducer` function which handles request/response actions
	 * to/from WP REST-API
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - domains action
	 * @return {Object} updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	var requesting = exports.requesting = function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_DOMAINS_REQUEST:
			case _actionTypes.SITE_DOMAINS_REQUEST_SUCCESS:
			case _actionTypes.SITE_DOMAINS_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.type === _actionTypes.SITE_DOMAINS_REQUEST));
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	};
	
	/**
	 * `Reducer` function which handles ERRORs REST-API response actions
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - domains action
	 * @return {Object} updated state
	 */
	var errors = exports.errors = function errors() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_DOMAINS_REQUEST:
			case _actionTypes.SITE_DOMAINS_REQUEST_SUCCESS:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, null));
	
			case _actionTypes.SITE_DOMAINS_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.error));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	};
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		requesting: requesting,
		errors: errors
	});

/***/ },
/* 755 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			'^\\d+$': {
				type: 'array',
				items: {
					type: 'object',
					required: ['domain'],
					properties: {
						autoRenewalDate: { type: 'string' },
						autoRenewing: { type: 'boolean' },
						blogId: { type: 'number' },
						canSetAsPrimary: { type: 'boolean' },
						domain: { type: 'string' },
						expired: { type: 'boolean' },
						expiry: { type: ['boolean', 'string'] },
						expirySoon: { type: 'boolean' },
						googleAppsSubscription: { type: 'object' },
						hasPrivateRegistration: { type: 'boolean' },
						hasRegistration: { type: 'boolean' },
						hasZone: { type: 'boolean' },
						isPendingIcannVerification: { type: 'boolean' },
						manualTransferRequired: { type: 'boolean' },
						newRegistration: { type: 'boolean' },
						partnerDomain: { type: 'boolean' },
						pendingRegistration: { type: 'boolean' },
						pendingRegistrationTime: { type: 'string' },
						isPrimary: { type: 'boolean' },
						isPrivate: { type: 'boolean' },
						registrationDate: { type: 'string' },
						type: { type: 'string' },
						wpcomDomain: { type: 'boolean' }
					}
				}
			}
		}
	};

/***/ },
/* 756 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.errors = exports.requesting = exports.items = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(757);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * vouchers `Reducer` function
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - vouchers action
	 * @return {Object} updated state
	 */
	/**
	 * External dependencies
	 */
	var items = exports.items = function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
		var siteId = action.siteId;
		var type = action.type;
		var voucher = action.voucher;
		var vouchers = action.vouchers;
		var serviceType = action.serviceType;
	
	
		switch (type) {
			case _actionTypes.SITE_VOUCHERS_ASSIGN_RECEIVE:
				var serviceVouchers = state[siteId] ? state[siteId][serviceType] || [] : [];
	
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, (0, _defineProperty3.default)({}, serviceType, serviceVouchers.concat(voucher))));
	
				return (0, _defineProperty3.default)({}, serviceType, {});
	
			case _actionTypes.SITE_VOUCHERS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, vouchers));
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return state;
				}
				return {};
			case _actionTypes.SERIALIZE:
				return state;
		}
	
		return state;
	};
	
	/**
	 * `Reducer` function which handles request/response actions
	 * to/from WP REST-API
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - vouchers action
	 * @return {Object} updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	var requesting = exports.requesting = function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var _ref2 = arguments[1];
		var type = _ref2.type;
		var siteId = _ref2.siteId;
	
		switch (type) {
			case _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST:
			case _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST_SUCCESS:
			case _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST_FAILURE:
			case _actionTypes.SITE_VOUCHERS_REQUEST:
			case _actionTypes.SITE_VOUCHERS_REQUEST_SUCCESS:
			case _actionTypes.SITE_VOUCHERS_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, {
					getAll: type === _actionTypes.SITE_VOUCHERS_REQUEST,
					assign: type === _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST
				}));
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	};
	
	/**
	 * `Reducer` function which handles ERRORs REST-API response actions
	 *
	 * @param {Object} state - current state
	 * @param {Object} action - vouchers action
	 * @return {Object} updated state
	 */
	var errors = exports.errors = function errors() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var _ref3 = arguments[1];
		var type = _ref3.type;
		var siteId = _ref3.siteId;
		var error = _ref3.error;
	
		switch (type) {
			case _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST:
			case _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST_SUCCESS:
			case _actionTypes.SITE_VOUCHERS_REQUEST:
			case _actionTypes.SITE_VOUCHERS_REQUEST_SUCCESS:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, {
					getAll: null,
					assign: null
				}));
	
			case _actionTypes.SITE_VOUCHERS_REQUEST_FAILURE:
			case _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, {
					getAll: type === _actionTypes.SITE_VOUCHERS_REQUEST_FAILURE ? error : null,
					assign: type === _actionTypes.SITE_VOUCHERS_ASSIGN_REQUEST_FAILURE ? error : null
				}));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	};
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		requesting: requesting,
		errors: errors
	});

/***/ },
/* 757 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		//state.sites.vouchers = {};
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			//state.sites.vouchers.items[ siteId ] = {};
			'^\\d+$': {
				type: 'object',
				additionalProperties: false,
				patternProperties: {
					//state.sites.vouchers.items[ siteId ][ serviceType ] = [];
					'^[a-z-]+$': {
						type: 'array',
						items: {
							//state.sites.vouchers.items[ siteId ][ serviceType ] = [ {} ];
							type: 'object',
							required: ['assigned', 'assigned_by'],
							additionalProperties: false,
							properties: {
								assigned: { type: 'string' },
								assigned_by: { type: 'number' },
								code: { type: 'string' },
								status: { type: 'string' }
							}
						}
					}
				}
			}
		}
	};

/***/ },
/* 758 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	exports.fetchingItems = fetchingItems;
	
	var _redux = __webpack_require__(662);
	
	var _pick = __webpack_require__(418);
	
	var _pick2 = _interopRequireDefault(_pick);
	
	var _actionTypes = __webpack_require__(174);
	
	var _schema = __webpack_require__(759);
	
	var _utils = __webpack_require__(664);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks media-storage information, indexed by site ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_MEDIA_STORAGE_RECEIVE:
				var mediaStorage = (0, _pick2.default)(action.mediaStorage, ['max_storage_bytes', 'storage_used_bytes']);
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, mediaStorage));
			case _actionTypes.SERIALIZE:
				return state;
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.itemsSchema)) {
					return state;
				}
				return {};
		}
		return state;
	}
	
	/**
	 * Tracks media-storage fetching state, indexed by site ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function fetchingItems() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_MEDIA_STORAGE_REQUEST:
			case _actionTypes.SITE_MEDIA_STORAGE_REQUEST_SUCCESS:
			case _actionTypes.SITE_MEDIA_STORAGE_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.type === _actionTypes.SITE_MEDIA_STORAGE_REQUEST));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		fetchingItems: fetchingItems
	});

/***/ },
/* 759 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemsSchema = exports.itemsSchema = {
		type: 'object',
		patternProperties: {
			//be careful to escape regexes properly
			'^\\d+$': {
				type: 'object',
				required: ['max_storage_bytes', 'storage_used_bytes'],
				properties: {
					max_storage_bytes: { type: ['integer'] },
					storage_used_bytes: { type: ['integer'] }
				}
			}
		},
		additionalProperties: false
	};

/***/ },
/* 760 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducers = __webpack_require__(761);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  exporter: _reducers2.default
	});
	
	/**
	 * Internal dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 761 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.selectedPostType = selectedPostType;
	exports.selectedAdvancedSettings = selectedAdvancedSettings;
	exports.exportingState = exportingState;
	exports.fetchingAdvancedSettings = fetchingAdvancedSettings;
	exports.advancedSettings = advancedSettings;
	exports.downloadURL = downloadURL;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _constants = __webpack_require__(762);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	function selectedPostType() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_POST_TYPE_SET:
				return action.postType;
			case _actionTypes.SERIALIZE:
				return null;
			case _actionTypes.DESERIALIZE:
				return null;
		}
		return state;
	} /**
	   * External dependencies
	   */
	
	
	var postTypeField = function postTypeField() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_POST_TYPE_FIELD_SET:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.fieldName, action.value));
		}
		return state;
	};
	
	var postTypes = function postTypes() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? { post: {}, page: {} } : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_POST_TYPE_FIELD_SET:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.postType, postTypeField(state[action.postType], action)));
		}
		return state;
	};
	
	function selectedAdvancedSettings() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_POST_TYPE_FIELD_SET:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, postTypes(state[action.siteId], action)));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Tracks the state of the exporter for each site ID
	 * @param  {Object} state  The current state
	 * @param  {Object} action Action object
	 * @return {Object}        Updated state
	 */
	function exportingState() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var _ref = arguments[1];
		var type = _ref.type;
		var siteId = _ref.siteId;
	
		switch (type) {
			case _actionTypes.EXPORT_START_REQUEST:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, _constants.States.STARTING));
			case _actionTypes.EXPORT_STARTED:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, _constants.States.EXPORTING));
			case _actionTypes.EXPORT_COMPLETE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, _constants.States.COMPLETE));
			case _actionTypes.EXPORT_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, _constants.States.FAILED));
			case _actionTypes.EXPORT_CLEAR:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, siteId, _constants.States.READY));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Tracks whether the advanced settings for a site are currently being fetched
	 * @param  {Object} state  Current global state tree
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function fetchingAdvancedSettings() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_ADVANCED_SETTINGS_FETCH:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, true));
			case _actionTypes.EXPORT_ADVANCED_SETTINGS_FAIL:
			case _actionTypes.EXPORT_ADVANCED_SETTINGS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, false));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Tracks available advanced settings for sites.
	 * @param  {Object} state  Current global state tree
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function advancedSettings() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_ADVANCED_SETTINGS_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.advancedSettings));
			case _actionTypes.SERIALIZE:
				return {};
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	function downloadURL() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.EXPORT_COMPLETE:
				return action.downloadURL;
			case _actionTypes.EXPORT_CLEAR:
				return null;
			case _actionTypes.SERIALIZE:
				return null;
			case _actionTypes.DESERIALIZE:
				return null;
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		selectedPostType: selectedPostType,
		selectedAdvancedSettings: selectedAdvancedSettings,
		exportingState: exportingState,
		fetchingAdvancedSettings: fetchingAdvancedSettings,
		advancedSettings: advancedSettings,
		downloadURL: downloadURL
	});

/***/ },
/* 762 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var States = exports.States = {
		READY: 'READY',
		STARTING: 'STARTING',
		EXPORTING: 'EXPORTING',
		COMPLETE: 'COMPLETE',
		FAILED: 'FAILED'
	};

/***/ },
/* 763 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(764);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(766);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  posts: _reducer2.default,
	  lists: _reducer4.default
	}); /**
	     * External dependencies
	     */

	module.exports = exports['default'];

/***/ },
/* 764 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.requesting = requesting;
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _merge3 = __webpack_require__(383);
	
	var _merge4 = _interopRequireDefault(_merge3);
	
	var _utils = __webpack_require__(664);
	
	var _schema = __webpack_require__(765);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated requests state after an action has been dispatched. The
	 * state maps site ID, post ID and stat keys to whether a request is in progress.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_STATS_REQUEST:
			case _actionTypes.POST_STATS_REQUEST_SUCCESS:
			case _actionTypes.POST_STATS_REQUEST_FAILURE:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postId, (0, _defineProperty3.default)({}, action.stat, _actionTypes.POST_STATS_REQUEST === action.type))));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated items state after an action has been dispatched. The
	 * state maps site ID, post ID and stat keys to the value of the stat.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.POST_STATS_RECEIVE:
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.postId, (0, _defineProperty3.default)({}, action.stat, action.value))));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.items)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		items: items
	});

/***/ },
/* 765 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var items = exports.items = {
		type: 'object',
		additionalProperties: false,
		patternProperties: {
			// Site Id
			'^\\d+$': {
				type: 'object',
				additionalProperties: false,
				patternProperties: {
					// Post Id
					'^\\d+$': {
						type: 'object',
						additionalProperties: false,
						patternProperties: {
							// Stat Key
							'^[0-9a-zA-Z]+$': { type: 'integer' }
						}
					}
				}
			}
		}
	};

/***/ },
/* 766 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.requesting = requesting;
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _merge3 = __webpack_require__(383);
	
	var _merge4 = _interopRequireDefault(_merge3);
	
	var _utils = __webpack_require__(664);
	
	var _utils2 = __webpack_require__(767);
	
	var _schema = __webpack_require__(768);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated requests state after an action has been dispatched. The
	 * state maps site ID, post ID and stat keys to whether a request is in progress.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_STATS_REQUEST:
			case _actionTypes.SITE_STATS_REQUEST_SUCCESS:
			case _actionTypes.SITE_STATS_REQUEST_FAILURE:
				var queryKey = (0, _utils2.getSerializedStatsQuery)(action.query);
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.statType, (0, _defineProperty3.default)({}, queryKey, _actionTypes.SITE_STATS_REQUEST === action.type))));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated items state after an action has been dispatched. The
	 * state maps site ID, statType and and serialized query key to the stat payload.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SITE_STATS_RECEIVE:
				var queryKey = (0, _utils2.getSerializedStatsQuery)(action.query);
				return (0, _merge4.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.statType, (0, _defineProperty3.default)({}, queryKey, action.data))));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.itemSchema)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		items: items
	});

/***/ },
/* 767 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	exports.getSerializedStatsQuery = getSerializedStatsQuery;
	
	var _sortBy = __webpack_require__(470);
	
	var _sortBy2 = _interopRequireDefault(_sortBy);
	
	var _toPairs = __webpack_require__(148);
	
	var _toPairs2 = _interopRequireDefault(_toPairs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns a serialized stats query, used as the key in the
	 * `state.stats.lists.items` and `state.stats.lists.requesting` state objects.
	 *
	 * @param  {Object} query    Stats query
	 * @return {String}          Serialized stats query
	 */
	/**
	 * External dependencies
	 */
	function getSerializedStatsQuery() {
	  var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  return (0, _stringify2.default)((0, _sortBy2.default)((0, _toPairs2.default)(query), function (pair) {
	    return pair[0];
	  }));
	}

/***/ },
/* 768 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var itemSchema = exports.itemSchema = {
		type: 'object',
		patternProperties: {
			'^\\d+$': {
				type: 'object',
				patternProperties: {
					'^[A-Za-z]+$': {
						type: 'object',
						patternProperties: {
							'^\\{[^\\}]*\\}$': {
								type: 'object'
							}
						}
					}
				},
				additionalProperties: false
			}
		},
		additionalProperties: false
	};

/***/ },
/* 769 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.isSupportUser = isSupportUser;
	exports.isTransitioning = isTransitioning;
	exports.showDialog = showDialog;
	exports.errorMessage = errorMessage;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * External dependencies
	 */
	function isSupportUser() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var _ref = arguments[1];
		var type = _ref.type;
	
		switch (type) {
			case _actionTypes.SUPPORT_USER_ACTIVATE:
				return true;
			case _actionTypes.SERIALIZE:
				return false;
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	}
	
	function isTransitioning() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var _ref2 = arguments[1];
		var type = _ref2.type;
	
		switch (type) {
			case _actionTypes.SUPPORT_USER_TOKEN_FETCH:
				return true;
			case _actionTypes.SUPPORT_USER_ERROR:
				return false;
			case _actionTypes.SERIALIZE:
				return false;
			case _actionTypes.DESERIALIZE:
				return false;
		}
		return state;
	}
	
	function showDialog() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var _ref3 = arguments[1];
		var type = _ref3.type;
	
		switch (type) {
			case _actionTypes.SUPPORT_USER_TOGGLE_DIALOG:
				return !state;
			case _actionTypes.SUPPORT_USER_ERROR:
				return true;
			case _actionTypes.SERIALIZE:
				return false;
			case _actionTypes.DESERIALIZE:
				return false;
		}
	
		return state;
	}
	
	function errorMessage() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SUPPORT_USER_ERROR:
				return action.errorMessage;
			case _actionTypes.SUPPORT_USER_ACTIVATE:
				return null;
			case _actionTypes.SERIALIZE:
				return null;
			case _actionTypes.DESERIALIZE:
				return null;
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		errorMessage: errorMessage,
		isSupportUser: isSupportUser,
		isTransitioning: isTransitioning,
		showDialog: showDialog
	});

/***/ },
/* 770 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	exports.queryRequests = queryRequests;
	exports.queries = queries;
	exports.queriesLastPage = queriesLastPage;
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _merge5 = __webpack_require__(383);
	
	var _merge6 = _interopRequireDefault(_merge5);
	
	var _keyBy = __webpack_require__(695);
	
	var _keyBy2 = _interopRequireDefault(_keyBy);
	
	var _actionTypes = __webpack_require__(174);
	
	var _utils = __webpack_require__(664);
	
	var _constants = __webpack_require__(771);
	
	var _utils2 = __webpack_require__(772);
	
	var _schema = __webpack_require__(773);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated terms query requesting state after an action has been
	 * dispatched. The state reflects a mapping of serialized query to whether a
	 * network request is in-progress for that query.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function queryRequests() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.TERMS_REQUEST:
			case _actionTypes.TERMS_REQUEST_SUCCESS:
			case _actionTypes.TERMS_REQUEST_FAILURE:
				var serializedQuery = (0, _utils2.getSerializedTermsQuery)(action.query);
				return (0, _merge6.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.taxonomy, (0, _defineProperty3.default)({}, serializedQuery, _actionTypes.TERMS_REQUEST === action.type))));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated term query state after an action has been dispatched.
	 * The state reflects a mapping of serialized query key to an array of term IDs
	 * for the query, if a query response was successfully received.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function queries() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.TERMS_RECEIVE:
				if (!action.query) {
					return state;
				}
	
				var serializedQuery = (0, _utils2.getSerializedTermsQuery)(action.query);
				return (0, _merge6.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.taxonomy, (0, _defineProperty3.default)({}, serializedQuery, action.terms.map(function (term) {
					return term.ID;
				})))));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.queriesSchema)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	/**
	 * Returns the updated terms query last page state after an action has been
	 * dispatched. The state reflects a mapping of serialized query to last known
	 * page number.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function queriesLastPage() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.TERMS_REQUEST_SUCCESS:
				var siteId = action.siteId;
				var found = action.found;
				var taxonomy = action.taxonomy;
				var query = action.query;
	
				var serializedQuery = (0, _utils2.getSerializedTermsQueryWithoutPage)(query);
				var lastPage = Math.ceil(found / (query.number || _constants.DEFAULT_TERMS_QUERY.number));
	
				return (0, _merge6.default)({}, state, (0, _defineProperty3.default)({}, siteId, (0, _defineProperty3.default)({}, taxonomy, (0, _defineProperty3.default)({}, serializedQuery, Math.max(lastPage, 1)))));
	
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Returns the updated terms state after an action has been dispatched.
	 * The state reflects a mapping of site ID to terms
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.TERMS_RECEIVE:
				return (0, _merge6.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, (0, _defineProperty3.default)({}, action.taxonomy, (0, _keyBy2.default)(action.terms, 'ID'))));
	
			case _actionTypes.DESERIALIZE:
				if ((0, _utils.isValidStateWithSchema)(state, _schema.termsSchema)) {
					return state;
				}
	
				return {};
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		items: items,
		queries: queries,
		queriesLastPage: queriesLastPage,
		queryRequests: queryRequests
	});

/***/ },
/* 771 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var DEFAULT_TERMS_QUERY = exports.DEFAULT_TERMS_QUERY = {
		context: 'display',
		http_envelope: false,
		pretty: false,
		number: 100,
		offset: 0,
		page: 1,
		order: 'DESC',
		order_by: 'name',
		search: ''
	};

/***/ },
/* 772 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _stringify = __webpack_require__(83);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	exports.getNormalizedTermsQuery = getNormalizedTermsQuery;
	exports.getSerializedTermsQuery = getSerializedTermsQuery;
	exports.getSerializedTermsQueryWithoutPage = getSerializedTermsQueryWithoutPage;
	
	var _omitBy = __webpack_require__(690);
	
	var _omitBy2 = _interopRequireDefault(_omitBy);
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _constants = __webpack_require__(771);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns a normalized terms query, excluding any values which match the
	 * default terms query.
	 *
	 * @param  {Object} query Posts query
	 * @return {Object}       Normalized terms query
	 */
	function getNormalizedTermsQuery(query) {
	  return (0, _omitBy2.default)(query, function (value, key) {
	    return _constants.DEFAULT_TERMS_QUERY[key] === value;
	  });
	}
	
	/**
	 * Returns a serialized terms query, used as the key in the
	 * `state.terms.queries` state object.
	 *
	 * @param  {Object} query    Terms query
	 * @return {String}          Serialized terms query
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	function getSerializedTermsQuery() {
	  var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  var normalizedQuery = getNormalizedTermsQuery(query);
	  return (0, _stringify2.default)(normalizedQuery).toLocaleLowerCase();
	}
	
	/**
	 * Returns a serialized terms query, excluding any page parameter, used as the
	 * key in the `state.terms.queriesLastPage` state object.
	 *
	 * @param  {Object} query  Terms query
	 * @return {String}        Serialized terms query
	 */
	function getSerializedTermsQueryWithoutPage(query) {
	  return getSerializedTermsQuery((0, _omit2.default)(query, 'page'));
	}

/***/ },
/* 773 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var termsSchema = exports.termsSchema = {
		type: 'object',
		patternProperties: {
			'^\\d+$': {
				type: 'object',
				patternProperties: {
					'^[A-Za-z0-9-_]+$': {
						type: 'object',
						patternProperties: {
							'^\\d+$': {
								type: 'object',
								required: ['ID', 'name'],
								properties: {
									ID: { type: 'number' },
									name: { type: 'string' },
									slug: { type: 'string' },
									description: { type: 'string' },
									post_count: { type: 'number' },
									parent: { type: 'number' }
								}
							}
						},
						additionalProperties: false
					}
				},
				additionalProperties: false
			}
		},
		additionalProperties: false
	};
	
	var queriesSchema = exports.queriesSchema = {
		type: 'object',
		patternProperties: {
			'^\\d+$': {
				type: 'object',
				patternProperties: {
					'^[A-Za-z0-9-_]+$': {
						type: 'object',
						patternProperties: {
							'^\\{[^\\}]*\\}$': {
								type: 'array',
								items: {
									type: 'number'
								}
							}
						},
						additionalProperties: false
					}
				},
				additionalProperties: false
			}
		},
		additionalProperties: false
	};

/***/ },
/* 774 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(775);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(777);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	var _reducer5 = __webpack_require__(778);
	
	var _reducer6 = _interopRequireDefault(_reducer5);
	
	var _reducer7 = __webpack_require__(780);
	
	var _reducer8 = _interopRequireDefault(_reducer7);
	
	var _reducer9 = __webpack_require__(781);
	
	var _reducer10 = _interopRequireDefault(_reducer9);
	
	var _reducer11 = __webpack_require__(782);
	
	var _reducer12 = _interopRequireDefault(_reducer11);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
		themes: _reducer2.default,
		themeDetails: _reducer4.default,
		themesList: _reducer6.default,
		themesLastQuery: _reducer8.default,
		currentTheme: _reducer10.default,
		themesUI: _reducer12.default
	}); /**
	     * External dependencies
	     */

	module.exports = exports['default'];

/***/ },
/* 775 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.initialState = undefined;
	
	var _typeof2 = __webpack_require__(263);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _immutable = __webpack_require__(667);
	
	var _transform = __webpack_require__(776);
	
	var _transform2 = _interopRequireDefault(_transform);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = exports.initialState = (0, _immutable.fromJS)({
		themes: {},
		currentSiteId: 0
	});
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	
	
	function add(newThemes, themes) {
		return themes.merge((0, _transform2.default)(newThemes, function (result, theme) {
			result[theme.id] = theme;
		}, {}));
	}
	
	function setActiveTheme(themeId, themes) {
		return themes.map(function (theme) {
			return theme.delete('active');
		}).setIn([themeId, 'active'], true);
	}
	
	exports.default = function () {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
		var _ret = function () {
			switch (action.type) {
				case _actionTypes.THEMES_RECEIVE:
					var isNewSite = action.isJetpack && action.siteId !== state.get('currentSiteId');
					return {
						v: state.update('themes', function (themes) {
							return isNewSite ? new _immutable.Map() : themes;
						}).set('currentSiteId', action.siteId).update('themes', add.bind(null, action.themes))
					};
	
				case _actionTypes.THEME_ACTIVATED:
					return {
						v: state.update('themes', setActiveTheme.bind(null, action.theme.id))
					};
				case _actionTypes.DESERIALIZE:
					return {
						v: initialState
					};
				case _actionTypes.SERVER_DESERIALIZE:
					return {
						v: (0, _immutable.fromJS)(state)
					};
				case _actionTypes.SERIALIZE:
					return {
						v: {}
					};
			}
		}();
	
		if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
		return state;
	};

/***/ },
/* 776 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(333),
	    baseCreate = __webpack_require__(350),
	    baseForOwn = __webpack_require__(92),
	    baseIteratee = __webpack_require__(98),
	    isArray = __webpack_require__(36),
	    isFunction = __webpack_require__(20),
	    isObject = __webpack_require__(21),
	    isTypedArray = __webpack_require__(145);
	
	/**
	 * An alternative to `_.reduce`; this method transforms `object` to a new
	 * `accumulator` object which is the result of running each of its own enumerable
	 * properties through `iteratee`, with each invocation potentially mutating
	 * the `accumulator` object. The iteratee is invoked with four arguments:
	 * (accumulator, value, key, object). Iteratee functions may exit iteration
	 * early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Array|Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The custom accumulator value.
	 * @returns {*} Returns the accumulated value.
	 * @example
	 *
	 * _.transform([2, 3, 4], function(result, n) {
	 *   result.push(n *= n);
	 *   return n % 2 == 0;
	 * }, []);
	 * // => [4, 9]
	 *
	 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] }
	 */
	function transform(object, iteratee, accumulator) {
	  var isArr = isArray(object) || isTypedArray(object);
	  iteratee = baseIteratee(iteratee, 4);
	
	  if (accumulator == null) {
	    if (isArr || isObject(object)) {
	      var Ctor = object.constructor;
	      if (isArr) {
	        accumulator = isArray(object) ? new Ctor : [];
	      } else {
	        accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);
	      }
	    } else {
	      accumulator = {};
	    }
	  }
	  (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
	    return iteratee(accumulator, value, index, object);
	  });
	  return accumulator;
	}
	
	module.exports = transform;


/***/ },
/* 777 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _immutable = __webpack_require__(667);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * External dependencies
	 */
	
	exports.default = function () {
		var state = arguments.length <= 0 || arguments[0] === undefined ? (0, _immutable.Map)() : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.THEME_DETAILS_RECEIVE:
				return state.set(action.themeId, (0, _immutable.Map)({
					name: action.themeName,
					author: action.themeAuthor,
					price: action.themePrice,
					screenshot: action.themeScreenshot,
					description: action.themeDescription,
					descriptionLong: action.themeDescriptionLong,
					supportDocumentation: action.themeSupportDocumentation,
					download: action.themeDownload,
					taxonomies: action.themeTaxonomies,
					stylesheet: action.themeStylesheet,
					demo_uri: action.themeDemoUri
				}));
			case _actionTypes.THEME_DETAILS_RECEIVE_FAILURE:
				return state.set(action.themeId, (0, _immutable.Map)({ error: action.error }));
			case _actionTypes.DESERIALIZE:
				return (0, _immutable.Map)();
			case _actionTypes.SERVER_DESERIALIZE:
				return (0, _immutable.fromJS)(state);
			case _actionTypes.SERIALIZE:
				return {};
		}
		return state;
	};
	
	/**
	 * Internal dependencies
	 */


	module.exports = exports['default'];

/***/ },
/* 778 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.initialState = undefined;
	exports.query = query;
	
	var _immutable = __webpack_require__(667);
	
	var _map = __webpack_require__(321);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _uniq = __webpack_require__(456);
	
	var _uniq2 = _interopRequireDefault(_uniq);
	
	var _constants = __webpack_require__(779);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var defaultQuery = (0, _immutable.fromJS)({
		search: '',
		perPage: _constants.PER_PAGE,
		page: 0
	}); /**
	     * External dependencies
	     */
	
	
	var defaultQueryState = (0, _immutable.fromJS)({
		isLastPage: false,
		isFetchingNextPage: false
	});
	
	var initialState = exports.initialState = query((0, _immutable.fromJS)({
		list: [],
		nextId: 0,
		query: {},
		queryState: {},
		active: 0
	}));
	
	/**
	 * Helpers
	 */
	
	function add(ids, list) {
		return (0, _uniq2.default)(list.concat(ids));
	}
	
	function query(state) {
		var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
		var nextId = state.get('nextId');
	
		return state.set('list', []).set('query', defaultQuery.merge(params)).setIn(['query', 'id'], nextId).set('queryState', defaultQueryState).update('nextId', function (id) {
			return id + 1;
		});
	}
	
	function isActionForLastPage(list, action) {
		return !action.found || list.length === action.found || action.themes.length === 0;
	}
	
	exports.default = function () {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.THEMES_QUERY:
				return query(state, action.params);
	
			case _actionTypes.THEMES_RECEIVE:
				if (action.queryParams.id === state.getIn(['query', 'id']) || action.wasJetpack) {
					var newState = state.setIn(['queryState', 'isFetchingNextPage'], false).update('list', add.bind(null, (0, _map2.default)(action.themes, 'id')));
	
					return newState.setIn(['queryState', 'error'], false).setIn(['queryState', 'isLastPage'], isActionForLastPage(newState.get('list'), action));
				}
				return state;
	
			case _actionTypes.THEMES_INCREMENT_PAGE:
				return state.setIn(['queryState', 'isFetchingNextPage'], true).updateIn(['query', 'page'], function (page) {
					return page + 1;
				});
	
			case _actionTypes.THEMES_RECEIVE_SERVER_ERROR:
				return state.setIn(['queryState', 'isFetchingNextPage'], false).setIn(['queryState', 'isLastPage'], true).setIn(['queryState', 'error'], true);
	
			case _actionTypes.THEME_ACTIVATED:
				// The `active` attribute isn't ever really read, but since
				// `createReducerStore()` only emits a `change` event when the new
				// state is different from the old one, we need something to change
				// here.
				return state.set('active', action.theme.id);
			case _actionTypes.DESERIALIZE:
				return initialState;
			case _actionTypes.SERVER_DESERIALIZE:
				return query((0, _immutable.fromJS)(state));
			case _actionTypes.SERIALIZE:
				return {};
		}
	
		return state;
	};

/***/ },
/* 779 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var PER_PAGE = exports.PER_PAGE = 20;

/***/ },
/* 780 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.initialState = undefined;
	
	var _immutable = __webpack_require__(667);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * External dependencies
	 */
	var initialState = exports.initialState = (0, _immutable.fromJS)({
		previousSiteId: 0,
		currentSiteId: null,
		isJetpack: null,
		lastParams: null
	});
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = function () {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.THEMES_QUERY:
				return state.set('lastParams', action.params);
			case _actionTypes.THEMES_INCREMENT_PAGE:
				return state.set('previousSiteId', state.get('currentSiteId')).set('currentSiteId', action.site.ID).set('isJetpack', !!action.site.jetpack);
			case _actionTypes.DESERIALIZE:
				return initialState;
			case _actionTypes.SERVER_DESERIALIZE:
				return (0, _immutable.fromJS)(state);
			case _actionTypes.SERIALIZE:
				return {};
		}
	
		return state;
	};

/***/ },
/* 781 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.initialState = undefined;
	
	var _immutable = __webpack_require__(667);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * External dependencies
	 */
	var initialState = exports.initialState = (0, _immutable.fromJS)({
		isActivating: false,
		hasActivated: false,
		currentThemes: {},
		requesting: {}
	});
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = function () {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.THEME_RECEIVE_CURRENT:
				return state.setIn(['currentThemes', action.siteId], {
					name: action.themeName,
					id: action.themeId,
					cost: action.themeCost
				}).setIn(['requesting', action.siteId], false);
			case _actionTypes.THEME_REQUEST_CURRENT:
				return state.setIn(['requesting', action.siteId], true);
			case _actionTypes.THEME_REQUEST_CURRENT_FAILURE:
				return state.setIn(['requesting', action.siteId], false);
			case _actionTypes.THEME_ACTIVATE:
				return state.set('isActivating', true);
			case _actionTypes.THEME_ACTIVATED:
				return state.set('isActivating', false).set('hasActivated', true).setIn(['currentThemes', action.site.ID], action.theme);
			case _actionTypes.THEME_CLEAR_ACTIVATED:
				return state.set('hasActivated', false);
			case _actionTypes.DESERIALIZE:
				return initialState;
			case _actionTypes.SERVER_DESERIALIZE:
				return (0, _immutable.fromJS)(state);
			case _actionTypes.SERIALIZE:
				return {};
		}
		return state;
	};

/***/ },
/* 782 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	// Destination for 'back' button on theme sheet
	/**
	 * External dependencies
	 */
	function backPath() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? '/design' : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.THEME_BACK_PATH_SET:
				return action.path !== undefined ? action.path : state;
		}
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = (0, _redux.combineReducers)({ backPath: backPath });
	module.exports = exports['default'];

/***/ },
/* 783 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	exports.selectedSiteId = selectedSiteId;
	exports.recentlySelectedSiteIds = recentlySelectedSiteIds;
	exports.section = section;
	exports.hasSidebar = hasSidebar;
	exports.isLoading = isLoading;
	
	exports.default = function (state, action) {
		if (_actionTypes.SERIALIZE === action.type || _actionTypes.DESERIALIZE === action.type) {
			return {};
		}
	
		return reducer(state, action);
	};
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _reducer = __webpack_require__(784);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(790);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	var _reducer5 = __webpack_require__(791);
	
	var _reducer6 = _interopRequireDefault(_reducer5);
	
	var _reducer7 = __webpack_require__(794);
	
	var _reducer8 = _interopRequireDefault(_reducer7);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks the currently selected site ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function selectedSiteId() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SELECTED_SITE_SET:
				return action.siteId || null;
		}
	
		return state;
	}
	
	/**
	 * Tracks the four most recently selected site IDs.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function recentlySelectedSiteIds() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SELECTED_SITE_SET:
				state = [action.siteId].concat((0, _toConsumableArray3.default)(state));
				if (state.length === 3) {
					state.pop();
				}
				return state;
		}
	
		return state;
	}
	
	//TODO: do we really want to mix strings and booleans?
	function section() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SET_SECTION:
				return action.section !== undefined ? action.section : state;
		}
		return state;
	}
	
	function hasSidebar() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SET_SECTION:
				return action.hasSidebar !== undefined ? action.hasSidebar : state;
		}
		return state;
	}
	
	function isLoading() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.SET_SECTION:
				return action.isLoading !== undefined ? action.isLoading : state;
		}
		return state;
	}
	
	var reducer = (0, _redux.combineReducers)({
		section: section,
		isLoading: isLoading,
		hasSidebar: hasSidebar,
		selectedSiteId: selectedSiteId,
		recentlySelectedSiteIds: recentlySelectedSiteIds,
		guidedTour: _reducer4.default,
		editor: _reducer2.default,
		reader: _reducer6.default,
		olark: _reducer8.default
	});

/***/ },
/* 784 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.postId = postId;
	exports.showDrafts = showDrafts;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _reducer = __webpack_require__(785);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(787);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	var _reducer5 = __webpack_require__(788);
	
	var _reducer6 = _interopRequireDefault(_reducer5);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the updated editor post ID state after an action has been
	 * dispatched.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function postId() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _actionTypes.EDITOR_POST_ID_SET:
	      return action.postId;
	  }
	
	  return state;
	}
	
	/**
	 * Returns the updated editor draft drawer visibility state after an action
	 * has been dispatched.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function showDrafts() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _actionTypes.EDITOR_SHOW_DRAFTS_TOGGLE:
	      return !state;
	  }
	
	  return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
	  postId: postId,
	  showDrafts: showDrafts,
	  imageEditor: _reducer2.default,
	  lastDraft: _reducer4.default,
	  contactForm: _reducer6.default
	});

/***/ },
/* 785 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.defaultCrop = exports.defaultCropBounds = exports.defaultFileInfo = exports.defaultTransform = undefined;
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.hasChanges = hasChanges;
	exports.fileInfo = fileInfo;
	exports.transform = transform;
	exports.cropBounds = cropBounds;
	exports.crop = crop;
	exports.aspectRatio = aspectRatio;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _constants = __webpack_require__(786);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	var defaultTransform = exports.defaultTransform = {
		degrees: 0,
		scaleX: 1,
		scaleY: 1
	}; /**
	    * External dependencies
	    */
	
	
	var defaultFileInfo = exports.defaultFileInfo = {
		src: '',
		fileName: 'default',
		mimeType: 'image/png'
	};
	
	var defaultCropBounds = exports.defaultCropBounds = {
		topBound: 0,
		leftBound: 0,
		bottomBound: 100,
		rightBound: 100
	};
	
	var defaultCrop = exports.defaultCrop = {
		topRatio: 0,
		leftRatio: 0,
		widthRatio: 1,
		heightRatio: 1
	};
	
	function hasChanges() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.IMAGE_EDITOR_SET_ASPECT_RATIO:
			case _actionTypes.IMAGE_EDITOR_CROP:
			case _actionTypes.IMAGE_EDITOR_ROTATE_COUNTERCLOCKWISE:
			case _actionTypes.IMAGE_EDITOR_FLIP:
			case _actionTypes.IMAGE_EDITOR_STATE_RESET:
				return action.type !== _actionTypes.IMAGE_EDITOR_STATE_RESET;
		}
	
		return state;
	}
	
	function fileInfo() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? defaultFileInfo : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.IMAGE_EDITOR_SET_FILE_INFO:
				return (0, _assign2.default)({}, state, { src: action.src, fileName: action.fileName, mimeType: action.mimeType });
		}
	
		return state;
	}
	
	function transform() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? defaultTransform : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.IMAGE_EDITOR_ROTATE_COUNTERCLOCKWISE:
				return (0, _assign2.default)({}, state, { degrees: (state.degrees - 90) % 360 });
			case _actionTypes.IMAGE_EDITOR_FLIP:
				return (0, _assign2.default)({}, state, { scaleX: -state.scaleX });
			case _actionTypes.IMAGE_EDITOR_STATE_RESET:
				return (0, _assign2.default)({}, defaultTransform);
		}
	
		return state;
	}
	
	function cropBounds() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? defaultCropBounds : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.IMAGE_EDITOR_SET_CROP_BOUNDS:
				return (0, _assign2.default)({}, state, {
					topBound: action.topBound,
					leftBound: action.leftBound,
					bottomBound: action.bottomBound,
					rightBound: action.rightBound
				});
		}
	
		return state;
	}
	
	function crop() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? defaultCrop : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.IMAGE_EDITOR_CROP:
				return (0, _assign2.default)({}, state, {
					topRatio: action.topRatio,
					leftRatio: action.leftRatio,
					widthRatio: action.widthRatio,
					heightRatio: action.heightRatio
				});
			case _actionTypes.IMAGE_EDITOR_ROTATE_COUNTERCLOCKWISE:
				return {
					topRatio: 1 - state.widthRatio - state.leftRatio,
					leftRatio: state.topRatio,
					widthRatio: state.heightRatio,
					heightRatio: state.widthRatio
				};
			case _actionTypes.IMAGE_EDITOR_FLIP:
				return (0, _assign2.default)({}, state, {
					leftRatio: 1 - state.widthRatio - state.leftRatio
				});
			case _actionTypes.IMAGE_EDITOR_STATE_RESET:
				return (0, _assign2.default)({}, defaultCrop);
		}
	
		return state;
	}
	
	function aspectRatio() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? _constants.AspectRatios.FREE : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.IMAGE_EDITOR_SET_ASPECT_RATIO:
				return action.ratio;
			case _actionTypes.IMAGE_EDITOR_STATE_RESET:
				return _constants.AspectRatios.FREE;
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		hasChanges: hasChanges,
		fileInfo: fileInfo,
		transform: transform,
		cropBounds: cropBounds,
		crop: crop,
		aspectRatio: aspectRatio
	});

/***/ },
/* 786 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var AspectRatios = exports.AspectRatios = {
		FREE: 'FREE',
		ORIGINAL: 'ORIGINAL',
		ASPECT_1X1: 'ASPECT_1X1',
		ASPECT_16X9: 'ASPECT_16X9',
		ASPECT_4X3: 'ASPECT_4X3',
		ASPECT_3X2: 'ASPECT_3X2'
	};

/***/ },
/* 787 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.siteId = siteId;
	exports.postId = postId;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * Returns the updated editor last draft site ID state after an action has been
	 * dispatched.
	 *
	 * @param  {?Number} state  Current state
	 * @param  {Object}  action Action payload
	 * @return {?Number}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function siteId() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _actionTypes.EDITOR_LAST_DRAFT_SET:
	      return action.siteId;
	  }
	
	  return state;
	}
	
	/**
	 * Returns the updated editor last draft post ID state after an action has been
	 * dispatched.
	 *
	 * @param  {?Number} state  Current state
	 * @param  {Object}  action Action payload
	 * @return {?Number}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function postId() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _actionTypes.EDITOR_LAST_DRAFT_SET:
	      return action.postId;
	  }
	
	  return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
	  siteId: siteId,
	  postId: postId
	});

/***/ },
/* 788 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(299);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.default = function () {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
		var index = action.index;
		var field = action.field;
		var settings = action.settings;
	
	
		switch (action.type) {
			case _actionTypes.EDITOR_CONTACT_FORM_CLEAR:
				state = (0, _cloneDeep2.default)(_constants.CONTACT_FORM_DEFAULT);
				break;
			case _actionTypes.EDITOR_CONTACT_FORM_LOAD:
				state = (0, _cloneDeep2.default)(action.contactForm);
				break;
			case _actionTypes.EDITOR_CONTACT_FORM_FIELD_ADD:
				state = (0, _assign2.default)({}, state, {
					fields: [].concat((0, _toConsumableArray3.default)(state.fields), [_constants.CONTACT_FORM_DEFAULT_NEW_FIELD])
				});
				break;
			case _actionTypes.EDITOR_CONTACT_FORM_FIELD_REMOVE:
				{
					state = (0, _cloneDeep2.default)(state);
					state.fields.splice(index, 1);
					break;
				}
			case _actionTypes.EDITOR_CONTACT_FORM_FIELD_UPDATE:
				state = (0, _cloneDeep2.default)(state);
				state.fields[index] = (0, _assign2.default)({}, state.fields[index], field);
	
				var newField = state.fields[index];
	
				if (newField.type !== 'radio' && newField.type !== 'select') {
					delete newField.options;
				} else if (newField.options === undefined) {
					newField.options = _i18nCalypso2.default.translate('Option One,Option Two', {
						comment: 'Default options for drop down lists and radio buttons. Must be separated by a comma without extra spaces.'
					});
				}
	
				break;
			case _actionTypes.EDITOR_CONTACT_FORM_SETTINGS_UPDATE:
				state = (0, _merge2.default)({}, state, settings);
				break;
		}
	
		return state;
	};
	
	var _cloneDeep = __webpack_require__(703);
	
	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);
	
	var _merge = __webpack_require__(383);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	var _i18nCalypso = __webpack_require__(185);
	
	var _i18nCalypso2 = _interopRequireDefault(_i18nCalypso);
	
	var _actionTypes = __webpack_require__(174);
	
	var _constants = __webpack_require__(789);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	
	
	var initialState = (0, _cloneDeep2.default)(_constants.CONTACT_FORM_DEFAULT); /**
	                                                                               * External dependencies
	                                                                               */


	module.exports = exports['default'];

/***/ },
/* 789 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var CONTACT_FORM_FIELD_TYPES = exports.CONTACT_FORM_FIELD_TYPES = {
		name: 'name',
		email: 'email',
		checkbox: 'checkbox',
		dropdown: 'select',
		radio: 'radio',
		text: 'text',
		textarea: 'textarea',
		website: 'url'
	};
	
	var CONTACT_FORM_DEFAULT = exports.CONTACT_FORM_DEFAULT = {
		fields: [{ label: 'Name', type: CONTACT_FORM_FIELD_TYPES.name, required: true }, { label: 'Email', type: CONTACT_FORM_FIELD_TYPES.email, required: true }, { label: 'Website', type: CONTACT_FORM_FIELD_TYPES.website }, { label: 'Comment', type: CONTACT_FORM_FIELD_TYPES.textarea, required: true }]
	};
	
	var CONTACT_FORM_DEFAULT_NEW_FIELD = exports.CONTACT_FORM_DEFAULT_NEW_FIELD = {
		label: 'Text',
		type: CONTACT_FORM_FIELD_TYPES.text,
		isExpanded: true
	};

/***/ },
/* 790 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.guidedTour = guidedTour;
	
	var _omit = __webpack_require__(233);
	
	var _omit2 = _interopRequireDefault(_omit);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	function guidedTour() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.GUIDED_TOUR_SHOW:
				var _action$stepName = action.stepName;
				var stepName = _action$stepName === undefined ? 'init' : _action$stepName;
	
				return {
					stepName: stepName,
					shouldShow: action.shouldShow,
					shouldDelay: action.shouldDelay,
					shouldReallyShow: (action.shouldShow || state.shouldShow) && !action.shouldDelay,
					tour: action.tour
				};
			case _actionTypes.GUIDED_TOUR_UPDATE:
				return (0, _assign2.default)({}, state, (0, _omit2.default)(action, 'type'));
		}
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = guidedTour;

/***/ },
/* 791 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(792);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _reducer3 = __webpack_require__(793);
	
	var _reducer4 = _interopRequireDefault(_reducer3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Internal dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  sidebar: _reducer2.default,
	  fullpost: _reducer4.default
	}); /**
	     * External dependencies
	     */

	module.exports = exports['default'];

/***/ },
/* 792 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.isListsOpen = isListsOpen;
	exports.isTagsOpen = isTagsOpen;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * External dependencies
	 */
	function isListsOpen() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_SIDEBAR_LISTS_TOGGLE:
				return !state;
		}
	
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	function isTagsOpen() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_SIDEBAR_TAGS_TOGGLE:
				return !state;
		}
	
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		isListsOpen: isListsOpen,
		isTagsOpen: isTagsOpen
	});

/***/ },
/* 793 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.isVisible = isVisible;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	/**
	 * External dependencies
	 */
	function isVisible() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.READER_FULLPOST_SHOW:
				return true;
			case _actionTypes.READER_FULLPOST_HIDE:
				return false;
		}
	
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = (0, _redux.combineReducers)({
		isVisible: isVisible
	});

/***/ },
/* 794 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.status = status;
	exports.requesting = requesting;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	var _constants = __webpack_require__(795);
	
	/**
	 * Tracks olark status
	 *
	 * @param  {String} state  Current state
	 * @param  {Object} action Action payload
	 * @return {String}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function status() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.OLARK_READY:
				return _constants.STATUS_READY;
			case _actionTypes.OLARK_TIMEOUT:
				if (state !== _constants.STATUS_READY) {
					return _constants.STATUS_TIMEOUT;
				}
				return state;
		}
		return state;
	}
	
	/**
	 * Tracks olark fetching state
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Boolean}       Updated state
	 */
	/**
	 * External dependencies
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.OLARK_READY:
			case _actionTypes.OLARK_REQUEST:
			case _actionTypes.OLARK_TIMEOUT:
				return action.type === _actionTypes.OLARK_REQUEST;
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		status: status
	});

/***/ },
/* 795 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var STATUS_READY = exports.STATUS_READY = 'ready';
	var STATUS_TIMEOUT = exports.STATUS_TIMEOUT = 'timeout';
	var OLARK_TIMEOUT_MS = exports.OLARK_TIMEOUT_MS = 5000;

/***/ },
/* 796 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.items = items;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks all known user objects, indexed by user ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function items() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.USER_RECEIVE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.user.ID, action.user));
			case _actionTypes.DESERIALIZE:
				return {};
			case _actionTypes.SERIALIZE:
				return {};
		}
	
		return state;
	}
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.default = (0, _redux.combineReducers)({
		items: items
	});

/***/ },
/* 797 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(662);
	
	var _reducer = __webpack_require__(798);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	exports.default = (0, _redux.combineReducers)({
	  approve: _reducer2.default
	});
	
	/**
	 * Internal dependencies
	 */

	module.exports = exports['default'];

/***/ },
/* 798 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	exports.requesting = requesting;
	exports.requestErrors = requestErrors;
	exports.requestSuccess = requestSuccess;
	
	var _redux = __webpack_require__(662);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Tracks all WordAds request status, indexed by site ID.
	 *
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	/**
	 * External dependencies
	 */
	function requesting() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST:
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_SUCCESS:
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.type === _actionTypes.WORDADS_SITE_APPROVE_REQUEST));
				return state;
			case _actionTypes.SERIALIZE:
			case _actionTypes.DESERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Keeps track of all WordAds errors, indexed by siteId
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	
	
	/**
	 * Internal dependencies
	 */
	function requestErrors() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, action.error));
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST:
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_SUCCESS:
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_DISMISS_ERROR:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, null));
			case _actionTypes.DESERIALIZE:
			case _actionTypes.SERIALIZE:
				return {};
		}
		return state;
	}
	
	/**
	 * Keeps track of all WordAds request successes, indexed by siteId
	 * @param  {Object} state  Current state
	 * @param  {Object} action Action payload
	 * @return {Object}        Updated state
	 */
	function requestSuccess() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		var action = arguments[1];
	
		switch (action.type) {
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST:
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_DISMISS_SUCCESS:
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_FAILURE:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, null));
			case _actionTypes.WORDADS_SITE_APPROVE_REQUEST_SUCCESS:
				return (0, _assign2.default)({}, state, (0, _defineProperty3.default)({}, action.siteId, true));
			case _actionTypes.DESERIALIZE:
			case _actionTypes.SERIALIZE:
				return {};
		}
		return state;
	}
	
	exports.default = (0, _redux.combineReducers)({
		requesting: requesting,
		requestSuccess: requestSuccess,
		requestErrors: requestErrors
	});

/***/ },
/* 799 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.fetching = undefined;
	
	var _defineProperty2 = __webpack_require__(178);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _createReducer2; /**
	                      * External dependencies
	                      */
	
	/**
	 * Internal dependencies
	 */
	
	
	exports.createReducerForPreferenceKey = createReducerForPreferenceKey;
	
	var _redux = __webpack_require__(662);
	
	var _get = __webpack_require__(152);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _mapValues = __webpack_require__(311);
	
	var _mapValues2 = _interopRequireDefault(_mapValues);
	
	var _utils = __webpack_require__(664);
	
	var _actionTypes = __webpack_require__(174);
	
	var _constants = __webpack_require__(800);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createReducerForPreferenceKey(key) {
		var _createReducer;
	
		var defaultValue = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
		var schema = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
		var handlePreferencesFromApi = function handlePreferencesFromApi(state, action) {
			return (0, _get2.default)(action, ['data', _constants.USER_SETTING_KEY, key], state);
		};
		return (0, _utils.createReducer)(defaultValue, (_createReducer = {}, (0, _defineProperty3.default)(_createReducer, _actionTypes.PREFERENCES_SET, function (state, action) {
			return action.key === key ? action.value : state;
		}), (0, _defineProperty3.default)(_createReducer, _actionTypes.PREFERENCES_RECEIVE, handlePreferencesFromApi), (0, _defineProperty3.default)(_createReducer, _actionTypes.PREFERENCES_FETCH_SUCCESS, handlePreferencesFromApi), _createReducer), schema);
	}
	
	var values = (0, _redux.combineReducers)((0, _mapValues2.default)(_constants.DEFAULT_PREFERENCES, function (value, key) {
		return createReducerForPreferenceKey(key, value.default, value.schema);
	}));
	var fetching = exports.fetching = (0, _utils.createReducer)(false, (_createReducer2 = {}, (0, _defineProperty3.default)(_createReducer2, _actionTypes.PREFERENCES_FETCH_SUCCESS, function () {
		return false;
	}), (0, _defineProperty3.default)(_createReducer2, _actionTypes.PREFERENCES_FETCH_FAILURE, function () {
		return false;
	}), (0, _defineProperty3.default)(_createReducer2, _actionTypes.PREFERENCES_FETCH, function () {
		return true;
	}), _createReducer2));
	
	exports.default = (0, _redux.combineReducers)({
		values: values,
		fetching: fetching
	});

/***/ },
/* 800 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var USER_SETTING_KEY = exports.USER_SETTING_KEY = 'calypso_preferences';
	var DEFAULT_PREFERENCES = exports.DEFAULT_PREFERENCES = {
		'editor-mode': {
			schema: { enum: [null, 'html', 'tinymce'] },
			default: null
		}
	};

/***/ },
/* 801 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.analyticsMiddleware = exports.dispatcher = undefined;
	
	var _analytics = __webpack_require__(175);
	
	var _analytics2 = _interopRequireDefault(_analytics);
	
	var _has = __webpack_require__(802);
	
	var _has2 = _interopRequireDefault(_has);
	
	var _invoke = __webpack_require__(803);
	
	var _invoke2 = _interopRequireDefault(_invoke);
	
	var _actionTypes = __webpack_require__(174);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var eventServices = {
		ga: function ga(_ref) {
			var category = _ref.category;
			var action = _ref.action;
			var label = _ref.label;
			var value = _ref.value;
			return _analytics2.default.ga.recordEvent(category, action, label, value);
		},
		tracks: function tracks(_ref2) {
			var name = _ref2.name;
			var properties = _ref2.properties;
			return _analytics2.default.tracks.recordEvent(name, properties);
		}
	};
	
	var pageViewServices = {
		ga: function ga(_ref3) {
			var url = _ref3.url;
			var title = _ref3.title;
			return _analytics2.default.ga.recordPageView(url, title);
		},
		default: function _default(_ref4) {
			var url = _ref4.url;
			var title = _ref4.title;
			return _analytics2.default.pageView.record(url, title);
		}
	};
	
	var statBump = function statBump(_ref5) {
		var group = _ref5.group;
		var name = _ref5.name;
		return _analytics2.default.mc.bumpStat(group, name);
	};
	
	var dispatcher = exports.dispatcher = function dispatcher(_ref6) {
		var analytics = _ref6.meta.analytics;
	
		analytics.forEach(function (_ref7) {
			var type = _ref7.type;
			var payload = _ref7.payload;
			var _payload$service = payload.service;
			var service = _payload$service === undefined ? 'default' : _payload$service;
	
	
			switch (type) {
				case _actionTypes.ANALYTICS_EVENT_RECORD:
					return (0, _invoke2.default)(eventServices, service, payload);
	
				case _actionTypes.ANALYTICS_PAGE_VIEW_RECORD:
					return (0, _invoke2.default)(pageViewServices, service, payload);
	
				case _actionTypes.ANALYTICS_STAT_BUMP:
					return statBump(payload);
			}
		});
	};
	
	var analyticsMiddleware = exports.analyticsMiddleware = function analyticsMiddleware() {
		return function (next) {
			return function (action) {
				if ((0, _has2.default)(action, 'meta.analytics')) {
					dispatcher(action);
				}
	
				return next(action);
			};
		};
	};
	
	exports.default = analyticsMiddleware;

/***/ },
/* 802 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(29),
	    hasPath = __webpack_require__(161);
	
	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': { 'c': 3 } } };
	 * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b.c');
	 * // => true
	 *
	 * _.has(object, ['a', 'b', 'c']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return hasPath(object, path, baseHas);
	}
	
	module.exports = has;


/***/ },
/* 803 */
/***/ function(module, exports, __webpack_require__) {

	var baseInvoke = __webpack_require__(804),
	    rest = __webpack_require__(24);
	
	/**
	 * Invokes the method at `path` of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the method to invoke.
	 * @param {...*} [args] The arguments to invoke the method with.
	 * @returns {*} Returns the result of the invoked method.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	 *
	 * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	 * // => [2, 3]
	 */
	var invoke = rest(baseInvoke);
	
	module.exports = invoke;


/***/ },
/* 804 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(25),
	    baseCastPath = __webpack_require__(154),
	    isKey = __webpack_require__(158),
	    last = __webpack_require__(162),
	    parent = __webpack_require__(163);
	
	/**
	 * The base implementation of `_.invoke` without support for individual
	 * method arguments.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the method to invoke.
	 * @param {Array} args The arguments to invoke the method with.
	 * @returns {*} Returns the result of the invoked method.
	 */
	function baseInvoke(object, path, args) {
	  if (!isKey(path, object)) {
	    path = baseCastPath(path);
	    object = parent(object, path);
	    path = last(path);
	  }
	  var func = object == null ? object : object[path];
	  return func == null ? undefined : apply(func, object, args);
	}
	
	module.exports = baseInvoke;


/***/ },
/* 805 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var superagent = __webpack_require__(658),
	    cookie = __webpack_require__(806),
	    debug = __webpack_require__(6)('calypso:bootstrap'),
	    crypto = __webpack_require__(79);
	
	var config = __webpack_require__(7),
	    API_KEY = config('wpcom_calypso_rest_api_key'),
	    userUtils = __webpack_require__(807),
	
	
	/**
	* WordPress.com REST API /me endpoint.
	*/
	url = 'https://public-api.wordpress.com/rest/v1/me?meta=flags';
	
	module.exports = function (userCookie, callback) {
		// create HTTP Request object
		var req = superagent.get(url),
		    hmac,
		    cookies,
		    hash;
	
		if (userCookie) {
			hmac = crypto.createHmac('md5', API_KEY);
			cookies = cookie.parse(userCookie);
			if (cookies.wordpress_logged_in) {
				hmac.update(cookies.wordpress_logged_in);
				hash = hmac.digest('hex');
				req.set('Authorization', 'X-WPCALYPSO ' + hash);
				req.set('Cookie', userCookie);
				req.set('User-Agent', 'WordPress.com Calypso');
			}
		}
	
		// start the request
		req.end(function (err, res) {
			var body, statusCode, user, error, key;
	
			if (err && !res) {
				return callback(err);
			}
	
			body = res.body;
			statusCode = res.status;
	
			debug('%o -> %o status code', url, statusCode);
	
			if (err) {
				error = new Error();
				error.statusCode = statusCode;
				for (key in body) {
					error[key] = body[key];
				}
	
				return callback(error);
			}
	
			user = userUtils.filterUserObject(body);
			callback(null, user);
		});
	};

/***/ },
/* 806 */
/***/ function(module, exports) {

	module.exports = require("cookie");

/***/ },
/* 807 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends2 = __webpack_require__(315);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _sharedUtils = __webpack_require__(808);
	
	var sharedUtils = _interopRequireWildcard(_sharedUtils);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _extends3.default)({}, sharedUtils); // These could be rewritten as `export * from`, pending resolution of Babel
	// transform bug: http://phabricator.babeljs.io/T2877

	module.exports = exports['default'];

/***/ },
/* 808 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(10);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _includes = __webpack_require__(476);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _config = __webpack_require__(7);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _formatting = __webpack_require__(498);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Module variables
	 */
	
	
	/**
	 * Internal dependencies
	 */
	/**
	 * External dependencies
	 */
	var languages = (0, _config2.default)('languages');
	
	function getLanguage(slug) {
		var len = languages.length,
		    language,
		    index;
	
		for (index = 0; index < len; index++) {
			if (slug === languages[index].langSlug) {
				language = languages[index];
				break;
			}
		}
	
		return language;
	}
	
	function getSiteSlug(url) {
		var slug = url.replace(/^https?:\/\//, '');
		return slug.replace(/\//g, '::');
	}
	
	module.exports = {
		filterUserObject: function filterUserObject(obj) {
			var user = {},
			    allowedKeys = ['ID', 'display_name', 'username', 'avatar_URL', 'site_count', 'visible_site_count', 'date', 'has_unseen_notes', 'newest_note_type', 'phone_account', 'email', 'email_verified', 'is_valid_google_apps_country', 'logout_URL', 'primary_blog_url', 'meta'],
			    decodeWhitelist = ['display_name', 'description', 'user_URL'];
	
			allowedKeys.forEach(function (key) {
				user[key] = obj[key] && (0, _includes2.default)(decodeWhitelist, key) ? (0, _formatting.decodeEntities)(obj[key]) : obj[key];
			});
	
			return (0, _assign2.default)(user, this.getComputedAttributes(obj));
		},
	
		getComputedAttributes: function getComputedAttributes(attributes) {
			var language = getLanguage(attributes.language),
			    primayBlogUrl = attributes.primary_blog_url || '';
			return {
				primarySiteSlug: getSiteSlug(primayBlogUrl),
				localeSlug: attributes.language,
				isRTL: !!(language && language.rtl)
			};
		}
	
	};

/***/ },
/* 809 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * External dependecies
	 */
	var webpackMiddleware = __webpack_require__(810),
	    webpack = __webpack_require__(811),
	    chalk = __webpack_require__(812);
	
	var utils = __webpack_require__(85),
	    webpackConfig = __webpack_require__(813);
	
	function middleware(app) {
		var compiler = webpack(webpackConfig),
		    callbacks = [],
		    built = false,
		    beforeFirstCompile = true,
		    assets;
	
		app.set('compiler', compiler);
	
		compiler.plugin('done', function (stats) {
			built = true;
			assets = utils.getAssets(stats.toJson());
			app.set('assets', assets);
	
			// Dequeue and call request handlers
			while (callbacks.length > 0) {
				callbacks.shift()();
			}
	
			// In order to show our message *after* webpack's "bundle is now VALID"
			// we need to skip two event loop ticks, because webpack's callback is
			// also hooked on the "done" event, it calls nextTick to print the message
			// and runs before our callback (calls app.use earlier in the code)
			process.nextTick(function () {
				process.nextTick(function () {
					if (beforeFirstCompile) {
						beforeFirstCompile = false;
						console.info(chalk.cyan('\nReady! You can load http://calypso.localhost:3000/ now. Have fun!'));
					} else {
						console.info(chalk.cyan('\nReady! All assets are re-compiled. Have fun!'));
					}
				});
			});
		});
	
		function waitForCompiler(request, response, next) {
			if (built) {
				return next();
			}
	
			console.info('Compiling assets... Wait until you see Ready! and then try http://calypso.localhost:3000/ again.');
	
			// a special message for newcomers, because seeing a blank page is confusing
			if (request.url === '/') {
				response.send('\n\t\t\t\t<head>\n\t\t\t\t\t<meta http-equiv="refresh" content="5">\n\t\t\t\t</head>\n\t\t\t\t<body>\n\t\t\t\t\t<h1>Welcome to Calypso!</h1>\n\t\t\t\t\t<p>Please wait until webpack has finished compiling and you see <code style="font-size: 1.2em; color: blue; font-weight: bold;">READY!</code> in the server console. This page should then refresh automatically. If it hasn&rsquo;t, hit <em>Refresh</em>.</p>\n\t\t\t\t\t<p>In the meantime, try to follow all the emotions of the allmoji: <img src="https://emoji.slack-edge.com/T024FN1V2/allmoji/fa5781cf7a8c5685.gif" width="36" style="vertical-align: middle;">\n\t\t\t\t</body>\n\t\t\t');
			} else {
				// Queue request handlers until the initial build is complete
				callbacks.push(waitForCompiler.bind(null, request, response, next));
			}
		}
	
		app.use(waitForCompiler);
	
		app.use(webpackMiddleware(compiler, {
			publicPath: '/calypso/',
			stats: {
				colors: true,
				hash: true,
				version: false,
				timings: true,
				assets: true,
				chunks: true,
				chunkModules: false,
				modules: false,
				cached: false,
				reasons: false,
				source: false,
				errorDetails: true
			}
		}));
	}
	
	module.exports = middleware;

/***/ },
/* 810 */
/***/ function(module, exports) {

	module.exports = require("webpack-dev-middleware");

/***/ },
/* 811 */
/***/ function(module, exports) {

	module.exports = require("webpack");

/***/ },
/* 812 */
/***/ function(module, exports) {

	module.exports = require("chalk");

/***/ },
/* 813 */
/***/ function(module, exports) {

	module.exports = require("webpack.config");

/***/ },
/* 814 */
/***/ function(module, exports) {

	module.exports = require("bundler/assets");

/***/ },
/* 815 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';
	
	var _keys = __webpack_require__(404);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Extenal dependencies
	 */
	var express = __webpack_require__(39),
	    fs = __webpack_require__(9),
	    fspath = __webpack_require__(2),
	    marked = __webpack_require__(816),
	    lunr = __webpack_require__(817),
	    find = __webpack_require__(90),
	    escapeHTML = __webpack_require__(818);
	
	/**
	 * Internal dependencies
	 */
	var config = __webpack_require__(7),
	    root = fs.realpathSync(fspath.join(__dirname, '..', '..')),
	    searchIndex = __webpack_require__(820),
	    docsIndex = lunr.Index.load(searchIndex.index),
	    documents = searchIndex.documents,
	    componentsUsageStats = __webpack_require__(821);
	
	/**
	 * Constants
	 */
	var SNIPPET_PAD_LENGTH = 40;
	var DEFAULT_SNIPPET_LENGTH = 100;
	
	/*
	 * Query the index using lunr.
	 * We store the documents and index in memory for speed,
	 * and also because lunr.js is designed to be memory resident
	 */
	function queryDocs(query) {
		var results = docsIndex.search(query).map(function (result) {
			var doc = documents[result.ref],
			    snippet = makeSnippet(doc, query);
	
			return {
				path: doc.path,
				title: doc.title,
				snippet: snippet
			};
		});
	
		return results;
	}
	
	/*
	 * Return an array of results based on the provided filenames
	 */
	function listDocs(filePaths) {
		var results = filePaths.map(function (path) {
			var doc = find(documents, function (entry) {
				return entry.path === path;
			});
	
			if (doc) {
				return {
					path: path,
					title: doc.title,
					snippet: defaultSnippet(doc)
				};
			}
	
			return {
				path: path,
				title: 'Not found: ' + path,
				snippet: ''
			};
		});
		return results;
	}
	
	/*
	 * Extract a snippet from a document, capturing text either side of
	 * any term(s) featured in a whitespace-delimited search query.
	 * We look for up to 3 matches in a document and concatenate them.
	 */
	function makeSnippet(doc, query) {
		// generate a regex of the form /[^a-zA-Z](term1|term2)/ for the query "term1 term2"
		var termRegexMatchers = lunr.tokenizer(query).map(function (term) {
			return escapeRegexString(term);
		});
		var termRegexString = '[^a-zA-Z](' + termRegexMatchers.join('|') + ')';
		var termRegex = new RegExp(termRegexString, 'gi');
		var snippets = [];
		var match = void 0;
	
		// find up to 4 matches in the document and extract snippets to be joined together
		// TODO: detect when snippets overlap and merge them.
		while ((match = termRegex.exec(doc.body)) !== null && snippets.length < 4) {
			var matchStr = match[1],
			    index = match.index + 1,
			    before = doc.body.substring(index - SNIPPET_PAD_LENGTH, index),
			    after = doc.body.substring(index + matchStr.length, index + matchStr.length + SNIPPET_PAD_LENGTH);
	
			snippets.push(before + '<mark>' + matchStr + '</mark>' + after);
		}
	
		if (snippets.length) {
			return '...' + snippets.join(' ... ') + '...';
		};
	
		return defaultSnippet(doc);
	}
	
	function escapeRegexString(str) {
		// taken from: https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js
		var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
		return str.replace(matchOperatorsRe, '\\$&');
	}
	
	function defaultSnippet(doc) {
		var content = doc.body.substring(0, DEFAULT_SNIPPET_LENGTH);
		return escapeHTML(content) + '&hellip;';
	}
	
	/**
	 * Given an object of { module: dependenciesArray }
	 * it filters out modules that contain the world "docs/"
	 * and that are not components (i.e. they don't start with "components/").
	 * It also removes the "components/" prefix from the modules name.
	 *
	 * @param {object} modulesWithDependences An object of modules - dipendencies pairs
	 * @returns {object} A reduced set of modules.
	 */
	function reduceComponentsUsageStats(modulesWithDependences) {
		return (0, _keys2.default)(modulesWithDependences).filter(function (moduleName) {
			return moduleName.indexOf('components/') === 0 && moduleName.indexOf('/docs') === -1;
		}).reduce(function (target, moduleName) {
			var name = moduleName.replace('components/', '');
			target[name] = modulesWithDependences[moduleName];
			return target;
		}, {});
	}
	
	module.exports = function () {
		var app = express();
	
		// this middleware enforces access control
		app.use('/devdocs/service', function (request, response, next) {
			if (!config.isEnabled('devdocs')) {
				response.status(404);
				next('Not found');
			} else {
				next();
			}
		});
	
		// search the documents using a search phrase "q"
		app.get('/devdocs/service/search', function (request, response) {
			var query = request.query.q;
	
			if (!query) {
				response.status(400).json({
					message: 'Missing required "q" parameter'
				});
				return;
			}
	
			response.json(queryDocs(query));
		});
	
		// return a listing of documents from filenames supplied in the "files" parameter
		app.get('/devdocs/service/list', function (request, response) {
			var files = request.query.files;
	
			if (!files) {
				response.status(400).json({
					message: 'Missing required "files" parameter'
				});
				return;
			}
	
			response.json(listDocs(files.split(',')));
		});
	
		// return the HTML content of a document (assumes that the document is in markdown format)
		app.get('/devdocs/service/content', function (request, response) {
			var path = request.query.path;
	
			if (!path) {
				response.status(400).send('Need to provide a file path (e.g. path=client/devdocs/README.md)');
				return;
			}
	
			if (!/\.md$/.test(path)) {
				path = fspath.join(path, 'README.md');
			}
	
			try {
				path = fs.realpathSync(fspath.join(root, path));
			} catch (err) {
				path = null;
			}
	
			if (!path || path.substring(0, root.length + 1) !== root + '/') {
				response.status(404).send('File does not exist');
				return;
			}
	
			var fileContents = fs.readFileSync(path, { encoding: 'utf8' });
	
			response.send(marked(fileContents));
		});
	
		// return json for the components usage stats
		app.get('/devdocs/service/components-usage-stats', function (request, response) {
			var usageStats = reduceComponentsUsageStats(componentsUsageStats);
			response.json(usageStats);
		});
	
		return app;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, "server/devdocs"))

/***/ },
/* 816 */
/***/ function(module, exports) {

	module.exports = require("marked");

/***/ },
/* 817 */
/***/ function(module, exports) {

	module.exports = require("lunr");

/***/ },
/* 818 */
/***/ function(module, exports, __webpack_require__) {

	var escapeHtmlChar = __webpack_require__(819),
	    toString = __webpack_require__(156);
	
	/** Used to match HTML entities and HTML characters. */
	var reUnescapedHtml = /[&<>"'`]/g,
	    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
	
	/**
	 * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	 * their corresponding HTML entities.
	 *
	 * **Note:** No other characters are escaped. To escape additional
	 * characters use a third-party library like [_he_](https://mths.be/he).
	 *
	 * Though the ">" character is escaped for symmetry, characters like
	 * ">" and "/" don't need escaping in HTML and have no special meaning
	 * unless they're part of a tag or unquoted attribute value.
	 * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	 * (under "semi-related fun fact") for more details.
	 *
	 * Backticks are escaped because in IE < 9, they can break out of
	 * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	 * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	 * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)
	 * for more details.
	 *
	 * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)
	 * to reduce XSS vectors.
	 *
	 * @static
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to escape.
	 * @returns {string} Returns the escaped string.
	 * @example
	 *
	 * _.escape('fred, barney, & pebbles');
	 * // => 'fred, barney, &amp; pebbles'
	 */
	function escape(string) {
	  string = toString(string);
	  return (string && reHasUnescapedHtml.test(string))
	    ? string.replace(reUnescapedHtml, escapeHtmlChar)
	    : string;
	}
	
	module.exports = escape;


/***/ },
/* 819 */
/***/ function(module, exports) {

	/** Used to map characters to HTML entities. */
	var htmlEscapes = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&#39;',
	  '`': '&#96;'
	};
	
	/**
	 * Used by `_.escape` to convert characters to HTML entities.
	 *
	 * @private
	 * @param {string} chr The matched character to escape.
	 * @returns {string} Returns the escaped character.
	 */
	function escapeHtmlChar(chr) {
	  return htmlEscapes[chr];
	}
	
	module.exports = escapeHtmlChar;


/***/ },
/* 820 */
/***/ function(module, exports) {

	module.exports = require("devdocs/search-index");

/***/ },
/* 821 */
/***/ function(module, exports) {

	module.exports = require("devdocs/components-usage-stats.json");

/***/ },
/* 822 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * External dependencies
	 */
	var express = __webpack_require__(39);
	
	/**
	 * Internal dependencies
	 */
	var version = __webpack_require__(823).version,
	    config = __webpack_require__(7),
	    oauth = __webpack_require__(824);
	
	module.exports = function () {
		var app = express();
	
		app.get('/version', function (request, response) {
			response.json({
				version: version
			});
		});
	
		if (config.isEnabled('oauth')) {
			oauth(app);
		}
	
		return app;
	};

/***/ },
/* 823 */
/***/ function(module, exports) {

	module.exports = {
		"name": "wp-calypso",
		"version": "0.17.0",
		"description": "A pure REST-API and JS based version of the WordPress.com admin",
		"private": true,
		"license": "GPL-2.0+",
		"repository": {
			"type": "git",
			"url": "https://github.com/Automattic/wp-calypso.git"
		},
		"main": "index.js",
		"dependencies": {
			"async": "0.9.0",
			"atob": "1.1.2",
			"autoprefixer": "6.3.5",
			"autosize": "3.0.7",
			"babel-core": "6.9.1",
			"babel-loader": "6.2.4",
			"babel-plugin-add-module-exports": "0.2.1",
			"babel-plugin-syntax-jsx": "6.8.0",
			"babel-plugin-transform-class-properties": "6.9.1",
			"babel-plugin-transform-export-extensions": "6.8.0",
			"babel-plugin-transform-react-display-name": "6.8.0",
			"babel-plugin-transform-react-jsx": "6.8.0",
			"babel-plugin-transform-runtime": "6.9.0",
			"babel-preset-es2015": "6.9.0",
			"babel-preset-react": "6.5.0",
			"babel-preset-stage-2": "6.5.0",
			"babel-register": "6.9.0",
			"blob": "0.0.4",
			"body-parser": "^1.13.3",
			"browser-filesaver": "1.1.0",
			"chalk": "1.0.0",
			"char-spinner": "1.0.1",
			"chrono-node": "^1.0.6",
			"classnames": "1.1.1",
			"click-outside": "1.0.4",
			"clipboard": "1.5.3",
			"commander": "2.3.0",
			"component-closest": "0.1.4",
			"component-file-picker": "0.2.1",
			"component-tip": "3.0.3",
			"component-uid": "0.0.2",
			"cookie": "0.1.2",
			"cookie-parser": "1.3.2",
			"creditcards": "1.1.1",
			"debug": "2.2.0",
			"dom-helpers": "2.4.0",
			"dom-scroll-into-view": "1.0.1",
			"email-validator": "1.0.1",
			"emitter-component": "1.1.1",
			"escape-regexp": "0.0.1",
			"escape-string-regexp": "1.0.3",
			"events": "1.0.2",
			"exports-loader": "0.6.2",
			"express": "4.13.3",
			"fbjs": "0.5.0",
			"filesize": "3.2.1",
			"flux": "2.1.1",
			"he": "0.5.0",
			"html-loader": "0.4.0",
			"i18n-calypso": "1.1.0",
			"immutable": "3.8.1",
			"imports-loader": "0.6.5",
			"inherits": "2.0.1",
			"jade": "pugjs/jade#29784fd",
			"jquery": "1.11.3",
			"jshashes": "1.0.5",
			"json-loader": "0.5.4",
			"key-mirror": "1.0.1",
			"keymaster": "1.6.2",
			"localforage": "1.4.0",
			"lodash": "4.5.0",
			"lunr": "0.5.7",
			"marked": "0.3.5",
			"moment": "2.10.6",
			"morgan": "1.2.0",
			"ms": "0.7.1",
			"node-sass": "3.4.2",
			"page": "1.6.4",
			"path-parser": "1.0.2",
			"percentage-regex": "3.0.0",
			"phone": "git+https://github.com/Automattic/node-phone.git#1.0.4-11",
			"photon": "2.0.0",
			"postcss-cli": "2.5.1",
			"q": "1.0.1",
			"qrcode.react": "0.5.2",
			"qs": "4.0.0",
			"react": "0.14.3",
			"react-addons-create-fragment": "0.14.3",
			"react-addons-css-transition-group": "0.14.3",
			"react-addons-linked-state-mixin": "0.14.3",
			"react-addons-shallow-compare": "0.14.3",
			"react-addons-update": "0.14.3",
			"react-click-outside": "2.1.0",
			"react-day-picker": "1.3.2",
			"react-dom": "0.14.3",
			"react-helmet": "2.2.0",
			"react-masonry-component": "4.0.4",
			"react-pure-render": "1.0.2",
			"react-redux": "4.4.5",
			"react-tap-event-plugin": "0.2.1",
			"react-virtualized": "7.2.0",
			"redux": "3.0.4",
			"redux-thunk": "1.0.0",
			"rtlcss": "2.0.5",
			"sanitize-html": "1.11.1",
			"semver": "5.1.0",
			"source-map": "0.1.39",
			"source-map-support": "0.3.2",
			"srcset": "1.0.0",
			"store": "1.3.16",
			"striptags": "2.1.1",
			"superagent": "1.2.0",
			"tinymce": "4.3.12",
			"to-title-case": "0.1.5",
			"tv4": "1.2.7",
			"tween.js": "16.3.1",
			"twemoji": "1.3.2",
			"uglify-js": "2.6.1",
			"valid-url": "1.0.9",
			"walk": "2.3.4",
			"webpack": "1.12.15",
			"webpack-dev-middleware": "1.2.0",
			"wpcom": "4.9.15",
			"wpcom-proxy-request": "2.0.0",
			"wpcom-xhr-request": "0.5.0",
			"xgettext-js": "0.3.0"
		},
		"engines": {
			"node": "5.11.1",
			"npm": "3.8.6"
		},
		"scripts": {
			"test": "npm run test-client && npm run test-server && npm run test-test",
			"test-client": "NODE_ENV=test NODE_PATH=test:client TEST_ROOT=client test/runner.js",
			"test-server": "NODE_ENV=test NODE_PATH=test:server:client TEST_ROOT=server test/runner.js",
			"test-test": "NODE_ENV=test NODE_PATH=test:client TEST_ROOT=test test/runner.js",
			"lint": "bin/run-lint"
		},
		"devDependencies": {
			"babel-eslint": "6.0.4",
			"blanket": "1.1.6",
			"chai": "2.0.0",
			"deep-freeze": "0.0.1",
			"enzyme": "2.2.0",
			"esformatter": "0.7.3",
			"esformatter-braces": "1.2.1",
			"esformatter-collapse-objects-a8c": "0.1.0",
			"esformatter-dot-notation": "1.3.1",
			"esformatter-quotes": "1.0.3",
			"esformatter-semicolons": "1.1.1",
			"esformatter-special-bangs": "1.0.1",
			"eslint": "1.10.3",
			"eslint-plugin-react": "3.11.3",
			"eslint-plugin-wpcalypso": "1.1.3",
			"glob": "7.0.3",
			"jsdom": "9.2.1",
			"localStorage": "1.0.2",
			"lodash-deep": "1.5.3",
			"mixedindentlint": "1.1.1",
			"mocha": "2.3.4",
			"mocha-junit-reporter": "1.9.1",
			"mockery": "1.4.0",
			"nock": "2.17.0",
			"react-addons-test-utils": "0.14.3",
			"react-hot-loader": "1.3.0",
			"sinon": "1.12.2",
			"sinon-chai": "2.7.0",
			"socket.io": "1.3.7",
			"supertest": "^1.1.0",
			"webpack-dev-server": "1.11.0"
		}
	};

/***/ },
/* 824 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(42);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * External dependencies
	 */
	var req = __webpack_require__(658),
	    bodyParser = __webpack_require__(825);
	
	/**
	 * Internal dependencies
	 */
	var config = __webpack_require__(7);
	
	function oauth() {
		return {
			client_id: config('desktop_oauth_client_id'),
			client_secret: config('desktop_oauth_client_secret'),
			wpcom_supports_2fa: true,
			grant_type: 'password'
		};
	}
	
	/*
	 * Proxies an oauth login request to the WP API
	 * We need to do this to get around CORS issues with making the request directly from the Electron browser
	 */
	function proxyOAuth(request, response) {
		// We are making a password request, and want all the 2fa checks enabled
		var data = (0, _assign2.default)({}, {
			username: request.body.username,
			password: request.body.password
		}, oauth());
	
		if (request.body.auth_code) {
			// Pass along the one-time password
			data.wpcom_otp = request.body.auth_code;
		}
	
		req.post(config('desktop_oauth_token_endpoint')).type('form').send(data).end(validateOauthResponse(response, function (error, res) {
			// Return the token as a response
			response.json(res.body);
		}));
	}
	
	function checkConnection(serverResponse, fn) {
		return function (error, clientResponse) {
			if (typeof clientResponse === 'undefined') {
				return serverResponse.status(408).json({ error: 'invalid_request', error_description: 'The request to ' + error.host + ' failed (code ' + error.code + '), please check your internet connection and try again.' });
			}
			fn(error, clientResponse);
		};
	}
	
	function proxyError(serverResponse, fn) {
		return function (error, clientResponse) {
			// Error from the API, just pass back
			if (error) {
				return serverResponse.status(error.status).json(clientResponse.body);
			}
			fn(error, clientResponse);
		};
	}
	
	function validateOauthResponse(serverResponse, fn) {
		return checkConnection(serverResponse, proxyError(serverResponse, fn));
	}
	
	function logout(request, response) {
		response.clearCookie('wpcom_token');
		response.redirect(config('login_url'));
	}
	
	function sms(request, response) {
		var data = (0, _assign2.default)({}, {
			username: request.body.username,
			password: request.body.password,
			wpcom_resend_otp: true
		}, oauth());
	
		req.post(config('desktop_oauth_token_endpoint')).type('form').send(data).end(validateOauthResponse(response, function (error, res) {
			response.json(res.body);
		}));
	};
	
	module.exports = function (app) {
		return app.use(bodyParser.json()).post('/oauth', proxyOAuth).get('/logout', logout).post('/sms', sms);
	};

/***/ },
/* 825 */
/***/ function(module, exports) {

	module.exports = require("body-parser");

/***/ },
/* 826 */
/***/ function(module, exports) {

	module.exports = require("http");

/***/ },
/* 827 */
/***/ function(module, exports) {

	module.exports = require("bundler/hot-reloader");

/***/ }
/******/ ]);
//# sourceMappingURL=bundle-development.js.map